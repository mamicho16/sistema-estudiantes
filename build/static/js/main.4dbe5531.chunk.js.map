{"version":3,"sources":["images/userPhoto.jpg","images/fotoP.png","images/faviconTD.ico","images/tec.png","images/logotec.png","components/ContainerInicioSesion.js","theme.js","components/Alerta.js","firebase/firebase.js","contexts/auth.js","pages/IniciarSesion/IniciarSesion.js","components/Fondo.js","components/navBar/navBar.js","pages/inicio/inicio.js","components/UserCard/UserCard.js","contexts/profesor.js","pages/historial/Historial.js","ProtectedRoute.js","pages/equipoGuia/equipoGuia.js","components/EditProfesor/EditProfesor.js","pages/EdicionGuia/EdicionGuia.js","components/ActivityCard/ActivityCard.js","contexts/comentario.js","components/RegisterActivity/RegisterActivity.js","components/EditActivity/EditActivity.js","pages/PlanTrabajoGuia/PlanTrabajoGuia.js","contexts/excel.js","pages/ListaDeEstudiantes/ListaDeEstudiantes.js","pages/AgregarActividad/AgregarActividad.js","pages/AgregarProfesor/AgregarProfesor.js","pages/ListaEstudiantesProfesores/ListaEstudiantesProfesores.js","pages/VerEvidencia/VerEvidencia.js","pages/PlanTrabajoCentroAcademico/PlanTrabajoCentroAcademico.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","ContainerInicioSesion","styled","div","_templateObject","_taggedTemplateLiteral","theme","fondo","colorPrimario","colorSecundario","verde","rojo","grisClaro","grisClaro2","azulClaro","slideDown","keyframes","ContenedorAlerta","_templateObject2","props","tipo","Alerta","_ref","mensaje","estadoAlerta","setestadoAlerta","useEffect","tiempo","setTimeout","clearTimeout","React","createElement","Fragment","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","storage","getStorage","AuthContext","createContext","useAuth","context","useContext","Error","AuthProvider","children","user","setUser","useState","loading","setLoading","onAuthStateChanged","firebaseUser","async","uid","userDetails","localStorage","getItem","JSON","parse","docSnap","loginProfesores","loginAdmins","setItem","stringify","getUserDetailsCacheOrFirebase","fetchUserDetails","docuRef","doc","concat","docuSnap","getDoc","exists","console","log","data","Provider","value","login","email","password","userinfo","signInWithEmailAndPassword","usuariofirebase","hasOwnProperty","nombre","nombre2","apellido1","apellido2","codigo","celular","numOficina","foto","coordinador","estado","sede","error","register","createUserWithEmailAndPassword","then","userCredential","setDoc","coordindor","logout","signOut","removeItem","registerAdmin","IniciarSesion","navigate","useNavigate","setEmail","setPassword","setEstadoAlerta","setMensaje","handleChange","e","target","id","Helmet","className","src","fotoP","alt","Form","onSubmit","preventDefault","emailValido","test","Group","Label","htmlFor","InputGroup","FormControl","type","placeholder","onChange","Button","Fondo","NavBar","titulo","Navbar","bg","variant","Brand","onClick","handleInicio","Nav","Link","style","color","Inicio","admin","undefined","logotec","handleInfoProfes","handleHistoProfes","handleListaDeEstudiantes","handleEquipoGuia","handlePlanTrabajo","handleListaDeEstudiantesProfesores","UserCard","imageUrl","name","location","code","officeNumber","cellNumber","formatUpdateProfessor","profesor","parts","split","length","trim","addProfessorToFirestore","photo","correo","numeroOficina","telefono","hasValidName","hasValidPhoto","hasValidSede","includes","hasValidEmail","hasValidOfficeNumber","hasValidCellNumber","hasValidCoordinador","hasValidestado","isValidProfessor","formatProfessor","campus","substring","teleCelular","counterData","getContador","newCount","editContador","cont","count","formatProf","docRef","getProfessors","getDocs","collection","docs","map","find","Name","newField","updateDoc","Historial","searchTerm","setSearchTerm","users","setUsers","usersData","professor","fetchAndConvertProfessors","filteredUsers","filter","toLowerCase","key","ProtectedRoute","Navigate","to","Outlet","EquipoGuia","selectedLocation","setSelectedLocation","EditProfessorModal","onClose","onSave","formData","setFormData","prev","[object Object]","EdicionGuia","editingUser","setEditingUser","useLocation","handleBaja","codigoUnico","professorsRef","q","query","where","querySnapshot","empty","forEach","professorRef","document","ref","darBaja","handleAgregarProf","marginBottom","border","padding","boxShadow","handleEdit","handleCloseModal","updatedData","updateProfessor","ActivityCard","activity","poster","activityId","handleVerEvi","activityName","activityType","Date","dateTime","toLocaleDateString","toLocaleTimeString","week","responsibles","join","displayResponsibles","daysBeforeAnnounce","reminderDays","modality","href","link","state","obtenerComentariosPorActividad","comentariosCollection","idActividad","comentarios","push","emailUsuario","texto","actividad","fecha","sort","a","b","UploadActivityImagesModal","images","setImages","setLink","uploadProgress","setUploadProgress","uploading","setUploading","multiple","accept","event","files","alert","promises","urls","Array","from","image","index","imageRef","uploadTask","uploadBytesResumable","Promise","resolve","reject","on","snapshot","progress","bytesTransferred","totalBytes","downloadURL","getDownloadURL","all","activityRef","imageUrls","disabled","toFixed","EditActivityModal","justification","formatDate","isoString","date","year","getFullYear","month","getMonth","padStart","day","getDate","hour","getHours","minute","getMinutes","as","min","max","Text","readOnly","PlanTrabajoGuia","showModal","setShowModal","activities","setActivities","IndexActivity","setIndexActivity","editingActivity","setEditingActivity","editeActivity","setEditActivity","showUploadModal","setShowUploadModal","showEditModal","setShowEditModal","fetchActivities","activitiesData","comentarioNuevo","setComentarioNuevo","setComentarios","addActivity","handleEditAct","catch","handleShowModal","comentario","userMail","addDoc","serverTimestamp","guardarComentario","handleCloseUploadModal","handleOnClick","window","history","back","obtenerExcel","archivosCollection","nameSede","archivo","archivoRef","fileRef","fileUrl","response","fetch","blob","file","File","ListaDeEstudiantes","excelData","setExcelData","excelButton2Text","setExcelButton2Text","isButtonDisabled","setIsButtonDisabled","boton2Ref","useRef","boton3Ref","boton4Ref","isButton2Active","setIsButton2Active","showSuccessModal","setShowSuccessModal","archivos","cargarArchivoPredeterminado","reader","FileReader","onload","Uint8Array","result","workbook","XLSX","sheetName","SheetNames","sheet","Sheets","jsonData","sheet_to_json","header","readAsArrayBuffer","toggleButton2","current","_","generateAlphabet","alphabet","i","String","fromCharCode","keys","rowIndex","cell","cellIndex","fileInput","getElementById","uploadBytes","docSnapshot","uploadFileAndSaveReference","role","AgregarActividad","setDate","time","setTime","setWeek","setActivityType","setActivityName","setResponsibles","setDaysBeforeAnnounce","setReminderDays","setModality","setPoster","posterName","setPosterName","setState","alertState","setAlertState","alertMessage","setAlertMessage","posterRef","posterURL","isoDateTime","toISOString","responsiblesArray","responsible","Select","aria-label","newDate","Control","uniqueFilename","uuidv4","backButton","AgregarProfesor","nombre1","setNombre1","setNombre2","setApellido1","setApellido2","setSede","setNumOficina","setCelular","setCoordinador","setFile","cartago","photoRef","Check","label","checked","ListaDeEstudiantesProfesores","activeTab","setActiveTab","opcionesMenu","setOpcionesMenu","selectedOption","setSelectedOption","archivosExcel","setArchivosExcel","ultimoArchivoSeleccionado","setUltimoArchivoSeleccionado","sedeUser","todos","archivosDescargados","obtenerTodosLosExcels","nombresArchivos","readAsBinaryString","switchTab","tab","opcion","handleOptionClick","downloadAll","combinedWorkbook","book_new","book_append_sheet","download","VerEvidencia","useParams","setActivity","fetchActivity","url","PlanTrabajoCentroAcademico","displayedActivity","setDisplayedActivity","showClosest","setShowClosest","handleReturn","handleFindClosestActivity","now","futureActivities","closest","reduce","closestDate","currentDate","App","rel","favicon","BrowserRouter","Routes","Route","path","element","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.4dbe5531.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/userPhoto.453b4547.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fotoP.e647a224.png\";","module.exports = __webpack_public_path__ + \"static/media/faviconTD.19086bdd.ico\";","module.exports = __webpack_public_path__ + \"static/media/tec.421bf85a.png\";","module.exports = __webpack_public_path__ + \"static/media/logotec.c3695aa9.png\";","import styled from 'styled-components';\r\n\r\nconst ContainerInicioSesion = styled.div`\r\nbackground: #fff;\r\nwidth: 50%;\r\nmax-width: 70rem; /* 1110px */\r\nheight: 50vh;\r\nmax-height: 50rem;  /* 800px */\r\nbox-shadow: 0px 1.25rem 2.5rem rgba(0,0,0,.05);\r\nborder-radius: 2rem; /* 10px */\r\nmargin: 25vh auto 0 auto; /* Margen superior variable para evitar pegarse arriba */\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: space-between; /* Centra el contenido verticalmente dentro del contenedor */\r\nposition: relative;\r\nz-index: 100;\r\n\r\n@media(max-width: 60rem){ /* 950px */\r\n    height: 95vh;\r\n    max-height: none;\r\n    margin-top: 2.5vh; /* Margen superior ajustado para mantener el contenedor centrado verticalmente */\r\n}\r\n`;\r\n\r\nexport default ContainerInicioSesion;","const theme = {\r\n    fondo: '#F9F9F9',\r\n    colorPrimario: '#5B69E2',\r\n    colorSecundario: '#000',\r\n    verde: '#43A854',\r\n    rojo: '#E34747',\r\n    grisClaro: '#E8EFF1',\r\n    grisClaro2: '#CBDDE2',\r\n    azulClaro: '#8792F1'\r\n}\r\n\r\nexport default theme;","import React, { useEffect } from \"react\";\r\nimport styled, {keyframes} from \"styled-components\";\r\nimport theme from \"../theme\";\r\n\r\nconst slideDown = keyframes`\r\n    0% {\r\n        transform: translateY(-1.25rem); /* 20px */\r\n        opacity: 0;\r\n    }\r\n \r\n    10% {\r\n        transform: translateY(1.25rem);\r\n        opacity: 1;\r\n    }\r\n    \r\n    90% {\r\n        transform: translateY(1.25rem);\r\n        opacity: 1;\r\n    }\r\n \r\n    100% {\r\n        transform: translateY(1.25rem);\r\n        opacity: 0;\r\n    }\r\n`;\r\n \r\nconst ContenedorAlerta = styled.div`\r\n    z-index: 1000;\r\n    width: 100%;\r\n    left: 0;\r\n    top: 1.25rem; /* 20px */\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    animation: ${slideDown} 4s ease forwards;\r\n \r\n    p {\r\n \r\n        background: ${(props) => {\r\n            if(props.tipo === 'error'){\r\n                return theme.rojo;\r\n            } else if (props.tipo === 'exito') {\r\n                return theme.verde;\r\n            } else {\r\n                return '#000';\r\n            }\r\n        }};\r\n        color: #fff;\r\n        padding: 1.25rem 2.5rem; /* 20px 40px */\r\n        border-radius: 0.31rem; /* 5px */\r\n        box-shadow: 0px 0px 15px rgba(0,0,0,.1);\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst Alerta = ({tipo, mensaje, estadoAlerta, setestadoAlerta}) => {\r\n    useEffect(() => {\r\n        let tiempo;\r\n        if(estadoAlerta){\r\n            tiempo = setTimeout(() => {\r\n                setestadoAlerta(false);\r\n            }, 4000);\r\n        }\r\n        return(() => clearTimeout(tiempo));\r\n    }, [estadoAlerta, setestadoAlerta]);\r\n    return (\r\n        <>\r\n        {estadoAlerta &&\r\n            <ContenedorAlerta tipo = {tipo}>\r\n                <p>{mensaje}</p>\r\n            </ContenedorAlerta>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Alerta;","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n\r\ninitializeApp(firebaseConfig);\r\nconst db = getFirestore();\r\nconst auth = getAuth();\r\nconst storage = getStorage();\r\n\r\nexport { db, auth, storage };\r\n","import React, { useState, useContext, useEffect, createContext } from \"react\";\r\nimport { auth, db } from \"../firebase/firebase\";\r\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\r\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error(\"useAuth debe ser usado dentro de un AuthProvider\");\r\n    }\r\n    return context;\r\n}\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {\r\n            if (firebaseUser) {\r\n                fetchUserDetails(firebaseUser.uid);\r\n            } else {\r\n                setUser(null);\r\n                setLoading(false);\r\n            }\r\n        });\r\n\r\n        return unsubscribe; \r\n    }, []);\r\n\r\n    async function fetchUserDetails(uid) {\r\n        setLoading(true);\r\n        const userDetails = await getUserDetailsCacheOrFirebase(uid);\r\n        setUser(userDetails);\r\n        setLoading(false);\r\n    }\r\n\r\n    async function getUserDetailsCacheOrFirebase(uid) {\r\n        // Obtener el usuario de la caché si está disponible\r\n        let userDetails = localStorage.getItem(\"userDetails\");\r\n        // Si no hay usuario en la caché, obtenerlo de Firebase\r\n        if (!userDetails) {\r\n            let docSnap = await loginProfesores(uid);\r\n            if (!docSnap) {\r\n                docSnap = await loginAdmins(uid);\r\n            }\r\n            // Si se encontró el documento, almacenarlo en la caché\r\n            if (docSnap) {\r\n                localStorage.setItem(\"userDetails\", JSON.stringify(docSnap));\r\n                return docSnap;\r\n            // Si no se encontró el documento, devolver nulo\r\n            } else {\r\n                return null;\r\n            }\r\n        // Si hay usuario en la caché, devolverlo\r\n        } else {\r\n            return JSON.parse(userDetails);\r\n        }\r\n    }\r\n\r\n    const login = async (email, password) => {\r\n    try {\r\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n        const userinfo = userCredential.user;\r\n\r\n        if (!userinfo.uid) {\r\n            throw new Error(\"UID del usuario no está disponible\");\r\n        }\r\n\r\n        let docuSnap = await loginProfesores(userinfo.uid);  // Intenta obtener datos como profesor\r\n\r\n        if (!docuSnap) {\r\n            docuSnap = await loginAdmins(userinfo.uid);  // Si no es profesor, intenta como administrador\r\n        }\r\n\r\n        if (!docuSnap) {\r\n            throw new Error(\"No se pudieron obtener los datos del usuario\");\r\n        }\r\n\r\n        let usuariofirebase;\r\n\r\n        // Verifica si el documento contiene el campo 'coordinador'\r\n        if (docuSnap.hasOwnProperty(\"coordinador\")) {\r\n            usuariofirebase = {\r\n                uid: userinfo.uid,\r\n                email: userinfo.email,\r\n                nombre: docuSnap.nombre,\r\n                nombre2: docuSnap.nombre2,\r\n                apellido1: docuSnap.apellido1,\r\n                apellido2: docuSnap.apellido2,\r\n                codigo: docuSnap.codigo,\r\n                celular: docuSnap.celular,\r\n                numOficina: docuSnap.numOficina,\r\n                foto: docuSnap.foto,\r\n                coordinador: docuSnap.coordinador,\r\n                estado: docuSnap.estado,\r\n                sede: docuSnap.sede                \r\n            };\r\n        } else {\r\n            usuariofirebase = {\r\n                uid: userinfo.uid,\r\n                email: userinfo.email,\r\n                nombre: docuSnap.nombre,\r\n                nombre2: docuSnap.nombre2,\r\n                apellido1: docuSnap.apellido1,\r\n                apellido2: docuSnap.apellido2,\r\n                celular: docuSnap.celular,\r\n                sede: docuSnap.sede\r\n            };\r\n        }\r\n        console.log(usuariofirebase);\r\n\r\n        setUser(usuariofirebase);  // Establece los datos del usuario en la sesión o donde corresponda\r\n\r\n        return true;\r\n    } catch (error) {\r\n        console.error(\"Error en el login:\", error);\r\n        return false;\r\n    }\r\n};\r\n    \r\n    const loginProfesores = async (uid) => {\r\n        const docuRef = doc(db, `Profesores/${uid}`);\r\n        const docuSnap = await getDoc(docuRef);\r\n        if (docuSnap.exists()) {\r\n            console.log(\"Datos del profesor:\", docuSnap.data());\r\n            return docuSnap.data();\r\n        } else {\r\n            console.log(\"No se encontró el documento del profesor\");\r\n            return null;\r\n        }\r\n    }\r\n\r\n    const loginAdmins = async (uid) => {\r\n        const docuRef = doc(db, `Admins/${uid}`);\r\n        const docuSnap = await getDoc(docuRef);\r\n        if (docuSnap.exists()) {\r\n            console.log(\"Datos del administrador:\", docuSnap.data());\r\n            return docuSnap.data();\r\n        } else {\r\n            console.log(\"No se encontró el documento del administrador\");\r\n            return null;\r\n        }\r\n    }\r\n\r\n    const register = async (email, password) => {\r\n        try {\r\n            const infouser = await createUserWithEmailAndPassword(auth, email, password).then((userCredential) => {\r\n                return userCredential;\r\n            });\r\n            const user = infouser.user;\r\n            const docuRef = doc(db, `Profesores/${user.uid}`);\r\n            setDoc(docuRef, {\r\n                email: email,\r\n                nombre: \"Rafael\",\r\n                nombre2: \"Mauricio\",\r\n                apellido1: \"Arroyo\",\r\n                apellido2: \"Herrera\",\r\n                codigo: \"CA-01\",\r\n                celular: \"88888888\",\r\n                numOficina: \"1\",\r\n                foto : \"\",\r\n                coordindor: false,\r\n                estado: \"activo\"\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const registerAdmin = async (email, password) => {\r\n        try {\r\n            const infouser = await createUserWithEmailAndPassword(auth, email, password).then((userCredential) => {\r\n                return userCredential;\r\n            });\r\n            const user = infouser.user;\r\n            const docuRef = doc(db, `Admins/${user.uid}`);\r\n            setDoc(docuRef, {\r\n                email: email,\r\n                nombre : \"Ariana\",\r\n                nombre2 : \"\",\r\n                apellido1 : \"Guillen\",\r\n                apellido2 : \"Masis\",\r\n                celular : \"12345678\",\r\n                sede : \"San Jose\",\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        try {\r\n            await signOut(auth);\r\n            setUser(null);\r\n            localStorage.removeItem(\"userDetails\");\r\n            console.log(user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            user,\r\n            login,\r\n            register,\r\n            logout,\r\n            registerAdmin\r\n        }}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default { AuthContext };","import React, {useState, useEffect} from \"react\";\r\nimport ContainerInicioSesion from \"../../components/ContainerInicioSesion\";\r\nimport { Helmet } from 'react-helmet';\r\nimport \"./IniciarSesion.css\"\r\nimport {Form, InputGroup, FormControl, Button} from \"react-bootstrap\";\r\nimport fotoP from \"../../images/fotoP.png\";\r\nimport Alerta from \"../../components/Alerta\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\n\r\n\r\n\r\nconst IniciarSesion = () => {\r\n    const { login, register, registerAdmin } = useAuth();\r\n    const navigate = useNavigate();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [estadoAlerta, setEstadoAlerta] = useState(false);\r\n    const [mensaje, setMensaje] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.id === \"email\"){\r\n            setEmail(e.target.value);\r\n        } else {\r\n            setPassword(e.target.value);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setEstadoAlerta(false);\r\n        setMensaje({});\r\n\r\n        const expresion = /[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+/;\r\n        const emailValido = expresion.test(email);\r\n\r\n        if(password === \"\"|| email === \"\"){\r\n            setEstadoAlerta(true);\r\n            setMensaje({tipo: 'error', mensaje: 'Todos los campos son obligatorios'});\r\n            return;\r\n        }\r\n\r\n        if(!emailValido){\r\n            setEstadoAlerta(true);\r\n            setMensaje({tipo: 'error', mensaje: 'Correo no válido'});\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const success = await login(email, password);\r\n            if (success) {\r\n                 navigate(\"/\"); // Navegar a la página de inicio solo si el login es exitoso\r\n             } else {\r\n                setEstadoAlerta(true);\r\n                setMensaje({ tipo: 'error', mensaje: 'No se pudo iniciar sesión' });\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(\"Error en login:\", error);\r\n            setEstadoAlerta(true);\r\n            setMensaje({ tipo: 'error', mensaje: 'No se pudo iniciar sesión' });\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Iniciar sesión</title>\r\n            </Helmet>\r\n            \r\n            <ContainerInicioSesion>\r\n            <div className = \"container\">\r\n                <div className = \"row img\" >\r\n                    <div className=\"col\">\r\n                        <img src= {fotoP} alt=\"fotoP\" className=\"mx-auto\"/>\r\n                    </div>\r\n\r\n                    <div className=\"col centered-column\">\r\n                        <h1 className=\"h1-custom\"> Ingrese su usuario </h1>\r\n                        <Form id=\"form\" onSubmit={handleSubmit}>\r\n                            <Form.Group className=\"input-control\">\r\n                                <Form.Label htmlFor=\"email\"> </Form.Label>\r\n                                <InputGroup>\r\n                                    <FormControl\r\n                                        type=\"email\"\r\n                                        id=\"email\"\r\n                                        value={email}\r\n                                        placeholder=\"Email\"\r\n                                        onChange={handleChange}\r\n                                        \r\n                                    />\r\n                                    <div className=\"error\"></div>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                                <Form.Group className=\"input-control\">\r\n                                    <Form.Label htmlFor=\"password\"></Form.Label>\r\n                                    <InputGroup>\r\n                                        <FormControl\r\n                                            type=\"password\"\r\n                                            id=\"password\"\r\n                                            value={password}\r\n                                            placeholder=\"Password\"\r\n                                            onChange={handleChange}\r\n                                            \r\n                                        />\r\n                                        <div className=\"error\"></div>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                <div className=\"text-center\">\r\n                                <Button className=\"boton\" type=\"submit\" id=\"submit\">Log In</Button>    \r\n                                </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </ContainerInicioSesion>\r\n            <Alerta \r\n                tipo={mensaje.tipo}\r\n                mensaje={mensaje.mensaje} \r\n                estadoAlerta={estadoAlerta}\r\n                setestadoAlerta={setEstadoAlerta}  \r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default IniciarSesion;","import styled from \"styled-components\";\r\n\r\nconst Fondo = styled.div`\r\n    background-color: #B7D0FF; // Color de fondo azul\r\n    height: 100vh; // Altura completa de la vista\r\n    width: 100vw; // Ancho completo de la vista\r\n    position: fixed; // Posicionamiento fijo respecto a la ventana del navegador\r\n    top: 0; // Inicio en la parte superior de la ventana\r\n    left: 0; // Inicio en la parte izquierda de la ventana\r\n    z-index: -1; // Establecer el índice Z negativo para enviar al fondo\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport default Fondo;\r\n","import React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport './navBar.css';\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst NavBar = ({titulo}) => {\r\n    const { logout } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const cerrarSesion = async () => {\r\n        logout();\r\n        navigate(\"/iniciarsesion\");\r\n    }\r\n\r\n    const handleInicio = () => {\r\n        navigate(\"/inicio\");\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" variant=\"light\" className=\"navbar\">\r\n            <Navbar.Brand className=\"brand\" onClick={handleInicio}>{titulo}</Navbar.Brand >\r\n            <Nav className=\"nav\">\r\n                <Nav.Link onClick={cerrarSesion} style={{color: '#2A67C3'}}> Cerrar sesión</Nav.Link>\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { Helmet } from 'react-helmet';\r\nimport NavBar from \"../../components/navBar/navBar\";\r\nimport fotoP from \"../../images/tec.png\";\r\nimport logotec from \"../../images/logotec.png\";\r\nimport './Inicio.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Inicio = () => {\r\n    const { user } = useAuth();\r\n    const navigate = useNavigate();\r\n    const handlePlanTrabajo = () => {\r\n        navigate(\"/planTrabajoGuia\");\r\n    }\r\n    const handleListaDeEstudiantes = () => {\r\n        navigate(\"/ListaDeEstudiantes\");\r\n    }\r\n    const handleListaDeEstudiantesProfesores = () => {\r\n        navigate(\"/ListaDeEstudiantesProfesores\");\r\n    }\r\n    let admin = false;\r\n    let coordinador = false;\r\n\r\n    if (user.coordinador === undefined) {\r\n        admin = true;\r\n    }\r\n   else if (user.coordinador) {\r\n        coordinador = true;\r\n    }\r\n    else {\r\n        coordinador = false;\r\n    }\r\n\r\n    const handleInfoProfes = () => {\r\n        navigate(\"/edicionGuia\");\r\n    }\r\n    \r\n    const handleHistoProfes = () => {\r\n        navigate(\"/historial\");\r\n    }\r\n\r\n    const handleEquipoGuia = () => {\r\n        navigate(\"/equipoGuia\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Helmet>\r\n            <title>Inicio - Tecnológico de Costa Rica</title>\r\n        </Helmet>\r\n        <div>\r\n            <NavBar titulo=\"Inicio\"/>\r\n            <div className=\"logo-image\">\r\n            <img src= {logotec} alt=\"Tecnológico de Costa Rica\" />\r\n            </div>\r\n            <div className=\"main-image\">\r\n                {/* You can use an <img> tag or a div with background-image depending on your preference */}\r\n                <img src= {fotoP} alt=\"Tecnológico de Costa Rica\" />\r\n            </div>\r\n           <div className = \"subtitulo\">\r\n                 <h1> Que desea realizar? </h1>\r\n            </div>\r\n            <div className=\"button-container\">\r\n                { admin &&(\r\n                <>\r\n                    <button className=\"menu-button\" onClick={handleInfoProfes}>Información Profesores</button>\r\n                    <button className=\"menu-button\" onClick={handleHistoProfes}>Historial Profesores</button>\r\n                    <button className=\"menu-button\" onClick={handleListaDeEstudiantes}>Lista Estudiantes</button> \r\n                </>)}\r\n                <button className=\"menu-button\" onClick={handleEquipoGuia}>Equipo Guia</button>\r\n                <button className=\"menu-button\" onClick={handlePlanTrabajo}>Plan de Trabajo</button>\r\n                { !admin &&(\r\n                    <button className=\"menu-button\" onClick={handleListaDeEstudiantesProfesores}>Lista Estudiantes</button> \r\n                )}\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Inicio;","import React from 'react';\r\nimport './UserCard.css'; // Link to the CSS file for styling\r\n\r\nconst UserCard = ({ user }) => {\r\n    return (\r\n        <div className=\"user-card\">\r\n            <div className=\"user-info\">\r\n                <img src={user.imageUrl} alt=\"user\" className=\"user-image\"/>\r\n                <div className=\"user-name\">{user.name}</div>\r\n            </div>\r\n            <div className=\"user-details\">\r\n                <div><strong>Sede:</strong> {user.location}</div>\r\n                <div><strong>Codigo:</strong> {user.code}</div>\r\n                <div><strong>Correo Electronico:</strong> {user.email}</div>\r\n                <div><strong>Número Oficina:</strong> {user.officeNumber}</div>\r\n                <div><strong>Telefono Celular:</strong> {user.cellNumber}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default UserCard;","\r\n import { db,storage } from \"../firebase/firebase\";\r\n import { addDoc, setDoc, getDoc,collection, getDocs, updateDoc, doc, deleteDoc, query, where } from \"firebase/firestore\";\r\nimport { createUserWithEmailAndPassword} from \"firebase/auth\";\r\nimport { auth } from \"../firebase/firebase\";\r\n\r\n\r\n\r\n //addProfessorToFirestore(name, photo, sede, correo, numeroOficina, telefono);\r\n\r\n// export const createprofesor = (name, photo, sede, correo, numeroOficina, telefono) => {\r\n//      addProfessorToFirestore(name, photo, sede, correo, numeroOficina, telefono);\r\n//     console.log(\"XD\");\r\n// }\r\n\r\n\r\n\r\nfunction isValidProfessor(name, photo, sede, correo, numeroOficina, telefono, nombre2, apellido1, apellido2, coordinador, estado) {\r\n    const validSedes = ['San Jose', 'Cartago', 'Limon', 'Alajuela', 'San Carlos'];\r\n    const hasValidName = typeof name === 'string' && name.trim() !== '' && typeof nombre2 === 'string' || nombre2 === null && typeof apellido1 === 'string' && apellido1.trim() !== '' && typeof apellido2 === 'string'  || nombre2 === null ;\r\n    const hasValidPhoto = typeof photo === 'string' || photo === null || photo === undefined;\r\n    const hasValidSede = validSedes.includes(sede);\r\n    const hasValidEmail = typeof correo === 'string' && correo.trim() !== '';\r\n    const hasValidOfficeNumber = typeof numeroOficina === \"string\";\r\n    const hasValidCellNumber = isValidPhoneNumber(telefono);\r\n    const hasValidCoordinador = typeof coordinador === \"boolean\";\r\n    const hasValidestado = typeof estado === \"boolean\";\r\n    console.log(hasValidName, hasValidPhoto, hasValidSede, hasValidEmail, hasValidOfficeNumber, hasValidCellNumber, hasValidCoordinador, hasValidestado);\r\n\r\n    return hasValidName && hasValidPhoto && hasValidSede && hasValidEmail && hasValidOfficeNumber && hasValidCellNumber && hasValidestado && hasValidCoordinador;\r\n    //return hasValidName && hasValidPhoto && hasValidSede && hasValidEmail && hasValidOfficeNumber && hasValidCellNumber && hasValidCoordinador && hasValidestado ;\r\n}\r\n\r\nfunction isValidPhoneNumber(phone) {\r\n    \tif (phone.length === 8){return true;} else {return false;}\r\n}\r\n\r\n\r\nasync function formatProf(name, photo, campus, correo, numeroOficina, telefono, nombre2, apellido1, apellido2, coordinador, estado, uid){\r\n    let codigo\r\n    let numOficina = numeroOficina.substring(0, 4) + '-' +numeroOficina.substring(4);\r\n    let teleCelular = telefono.substring(0, 4) + '-' +telefono.substring(4);\r\n    if(campus === \"San Jose\"){ \r\n\r\n        const counterData = await getContador('SJ'); // Adjusted to always fetch 'SJ' for demonstration\r\n        const newCount = 1;\r\n        await editContador(counterData.id, { cont: newCount }); // Pass the document ID and new count\r\n        codigo = `SJ-${counterData.count}`;}\r\n\r\n        // const counterData = await getContador('SJ'); // Adjusted to always fetch 'SJ' for demonstration\r\n        // const newCount = counterData.count + 1;\r\n        // await editContador(counterData.id, { cont: newCount }); // Pass the document ID and new count\r\n        // codigo = `SJ-${counterData.count}`;}\r\n        \r\n    else if(campus === \"Cartago\"){ \r\n        const counterData = await getContador('CA'); // Adjusted to always fetch 'SJ' for demonstration\r\n        const newCount = counterData.count + 1;\r\n        await editContador(counterData.id, { cont: newCount }); // Pass the document ID and new count\r\n        codigo = `CA-${counterData.count}`;\r\n    }\r\n    else if(campus === \"San Carlos\"){\r\n        const counterData = await getContador('SC'); // Adjusted to always fetch 'SJ' for demonstration\r\n        const newCount = counterData.count + 1;\r\n        await editContador(counterData.id, { cont: newCount }); // Pass the document ID and new count\r\n        codigo = `SC-${counterData.count}`;}\r\n    else if(campus === \"Alajuela\"){\r\n        const counterData = await getContador('AL'); // Adjusted to always fetch 'SJ' for demonstration\r\n        const newCount = counterData.count + 1;\r\n        await editContador(counterData.id, { cont: newCount }); // Pass the document ID and new count\r\n        codigo = `AL-${counterData.count}`;}\r\n    else if(campus === \"Limon\"){\r\n        const counterData = await getContador('LI'); // Adjusted to always fetch 'SJ' for demonstration\r\n        const newCount = counterData.count + 1;\r\n        await editContador(counterData.id, { cont: newCount }); // Pass the document ID and new count\r\n        codigo = `LI-${counterData.count}`;}\r\n    return {\r\n        nombre: name,\r\n        nombre2: nombre2,\r\n        apellido1: apellido1,\r\n        apellido2: apellido2,\r\n        foto: photo,\r\n        sede: campus,\r\n        email: correo,\r\n        numOficina: numOficina,\r\n        celular: teleCelular,\r\n        codigo: codigo,\r\n        coordinador: coordinador,\r\n        estado: estado,\r\n    };\r\n}\r\n\r\nasync function editProfesores(id, newField){\r\n    try{\r\n        updateDoc(doc(db, 'Profesores', id),newField);\r\n    }\r\n    catch(error){\r\n        console.error(\"Error updating Profesores: \", error);\r\n    }\r\n\r\n}\r\n\r\nexport const updateProfessor = async (codigoUnico, updatedData) => {\r\n    // Verificación inicial para asegurarse de que el código no es undefined\r\n    if (!codigoUnico) {\r\n        console.error(\"Provided 'codigoUnico' is undefined\");\r\n        throw new Error(\"Invalid 'codigoUnico' provided. It must not be undefined.\");\r\n    }\r\n\r\n    const professorsRef = collection(db, \"Profesores\");\r\n    const q = query(professorsRef, where(\"codigo\", \"==\", codigoUnico));\r\n\r\n    try {\r\n        const querySnapshot = await getDocs(q);\r\n        if (querySnapshot.empty) {\r\n            console.log(\"No matching documents found with code:\", codigoUnico);\r\n            throw new Error(\"No matching professor found to update\");\r\n        }\r\n\r\n        // Asumiendo que el código es único, solo debería haber un documento.\r\n        querySnapshot.forEach(async (document) => {\r\n            const professorRef = document.ref;\r\n            console.log(\"Updating professor with code:\", document.data());\r\n            updatedData = formatUpdateProfessor(updatedData);\r\n            console.log(\"New professor data:\", updatedData);\r\n            await updateDoc(professorRef, updatedData);\r\n            console.log(\"Professor updated successfully with code:\", codigoUnico);\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error updating professor: \", error);\r\n        throw new Error(\"Failed to update professor\");\r\n    }\r\n};\r\n\r\nexport const formatUpdateProfessor = (profesor) => {\r\n    // Divide el nombre completo en partes\r\n    const parts = profesor.name.split(\" \");\r\n\r\n    // Asegúrate de que hay suficientes partes para llenar los campos requeridos\r\n    const nombre = parts[0] || \"\"; // Primer nombre\r\n    const nombre2 = parts.length > 1 ? parts[1] : \"\"; // Segundo nombre, si existe\r\n    const apellido1 = parts.length > 2 ? parts[2] : \"\"; // Primer apellido\r\n    const apellido2 = parts.length > 3 ? parts[3] : \"\"; // Segundo apellido\r\n\r\n    return {\r\n        email: profesor.email,\r\n        nombre: nombre,\r\n        nombre2: nombre2,\r\n        apellido1: apellido1,\r\n        apellido2: apellido2,\r\n        celular: profesor.cellNumber,\r\n        numOficina: profesor.officeNumber,\r\n        coordinador: profesor.coordinador || false, // Asume falso si no está especificado\r\n        sede: profesor.location.trim() // Elimina espacios adicionales\r\n    };\r\n};\r\n\r\nexport const darBaja = async (codigoUnico) => {\r\n    // Verificación inicial para asegurarse de que el código no es undefined\r\n    if (!codigoUnico) {\r\n        console.error(\"Provided 'codigoUnico' is undefined\");\r\n        throw new Error(\"Invalid 'codigoUnico' provided. It must not be undefined.\");\r\n    }\r\n\r\n    const professorsRef = collection(db, \"Profesores\");\r\n    const q = query(professorsRef, where(\"codigo\", \"==\", codigoUnico));\r\n\r\n    try {\r\n        const querySnapshot = await getDocs(q);\r\n        if (querySnapshot.empty) {\r\n            console.log(\"No matching documents found with code:\", codigoUnico);\r\n            throw new Error(\"No matching professor found to delete\");\r\n        }\r\n\r\n        // Asumiendo que el código es único, solo debería haber un documento.\r\n        querySnapshot.forEach(async (document) => {\r\n            const professorRef = document.ref;\r\n            console.log(\"Deleting professor with code:\", document.data());\r\n            await updateDoc(professorRef, { estado: false });\r\n            console.log(\"Professor inactive successfully with code:\", codigoUnico);\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error deleting professor: \", error);\r\n        throw new Error(\"Failed to delete professor\");\r\n    }\r\n};\r\n\r\nexport const addProfessorToFirestore = async (name, photo, sede, correo, numeroOficina, telefono, nombre2, apellido1, apellido2, coordinador, estado, password) => {\r\n    if (isValidProfessor(name, photo, sede, correo, numeroOficina, telefono, nombre2, apellido1, apellido2, coordinador, estado)) {\r\n        //const professorCode = await incrementProfessorCounter(); // This ensures the code is incremented\r\n        try {\r\n            // Creación de usuario\r\n            const user = await createUserWithEmailAndPassword(auth, correo, password);\r\n            //formatted professor\r\n            const formatProfessor = await formatProf(name, photo, sede, correo, numeroOficina, telefono, nombre2, apellido1, apellido2, coordinador, estado);\r\n           // add professor to firestore\r\n            const docRef = doc(db, `Profesores/${user.user.uid}`);\r\n            setDoc(docRef, formatProfessor);\r\n    \r\n        } catch (error) {\r\n            console.error(\"Error adding document or creating user: \", error);\r\n        }\r\n    } else {\r\n        console.error(\"Invalid professor data\");\r\n    }\r\n};\r\n\r\n\r\nexport const getProfessors = async () => {\r\n    try {\r\n      const snapshot = await getDocs(collection(db, 'Profesores'));\r\n      const professorsList = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      return professorsList; // Returns an array of professors\r\n    } catch (error) {\r\n      console.error(\"Error fetching documents: \", error);\r\n      return []; // Returns an empty array in case of error\r\n    }\r\n  };\r\n\r\n\r\n  export const crearContador = async (name) => {\r\n        try {\r\n          let contador = {\r\n                Name: name,\r\n                cont: 1}\r\n           const docRef =  addDoc(collection (db,'Contador'),contador);\r\n\r\n\r\n\r\n            //const docRef = await db.collection('professors').add(formatProfessor);\r\n            console.log(\"Contador added with ID: \", (await docRef).id);\r\n        } catch (error) {\r\n            console.error(\"Error adding document: \", error);\r\n        }\r\n};\r\n\r\nasync function getContador(name) {\r\n    try {\r\n        const snapshot = await getDocs(collection(db, 'Contador'));\r\n        const doc = snapshot.docs.find(doc => doc.data().Name === name);\r\n        return doc ? { id: doc.id, count: doc.data().cont } : null; // Returns the document ID and count if found\r\n    } catch (error) {\r\n        console.error(\"Error fetching contador: \", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function editContador(id, newField){\r\n    try{\r\n        updateDoc(doc(db, 'Contador', id),newField);\r\n    }\r\n    catch(error){\r\n        console.error(\"Error updating contador: \", error);\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { Helmet } from 'react-helmet';\r\nimport NavBar from \"../../components/navBar/navBar\";\r\nimport UserCard from \"../../components/UserCard/UserCard\"; // Update this path as necessary\r\nimport userP from \"../../images/userPhoto.jpg\";\r\nimport './Historial.css';\r\nimport { getProfessors} from \"../../contexts/profesor\";\r\n\r\n\r\n\r\nconst Historial = () => {\r\n    // const { user } = useAuth();\r\n    // console.log(user);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    // Mock data array for users\r\n    const [users, setUsers] = useState([]);\r\n    \r\n\r\n    React.useEffect(() => {\r\n        const fetchAndConvertProfessors = async () => {\r\n            try {\r\n                const professors = await getProfessors();\r\n                const usersData = professors.map(professor => ({\r\n                    name: professor.nombre +\" \"+ professor.nombre2 +\" \"+ professor.apellido1 +\" \"+ professor.apellido2,\r\n                    imageUrl: professor.foto,\r\n                    location: professor.sede + \" \",\r\n                    code: professor.codigo, // Adjust if professor data structure has a Codigo property\r\n                    email: professor.email,\r\n                    officeNumber: professor.numOficina,\r\n                    cellNumber: professor.celular\r\n                }));\r\n                setUsers(usersData);\r\n            } catch (error) {\r\n                console.error(\"Error fetching professors: \", error);\r\n            }\r\n        };\r\n\r\n        fetchAndConvertProfessors();\r\n    }, []); // Empty dependency array to run only once on component mount\r\n\r\n\r\n    // Filter users based on search term\r\n    const filteredUsers = users.filter(user => \r\n        user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        user.location.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    return (\r\n        <>\r\n        <NavBar titulo=\"Historial\"/>\r\n        <Helmet>\r\n            <title >Historial - Tecnológico de Costa Rica</title>\r\n        </Helmet>\r\n        <div className = \".subtituloH\">\r\n                 <h1> Historial docentes asignados </h1>\r\n            </div>\r\n        <div className=\"card-container\">\r\n                {filteredUsers.map(user => <UserCard key={user.email} user={user} />)}\r\n        </div>\r\n        <div> \r\n            \r\n            <div className=\"search-bar-container\">\r\n            {/* <button className = \"groupBtn\" onClick={() => console.log('Regresar')}>Regresar</button>\r\n                <button className = \"groupBtn\" onClick={() => console.log('Finalizar')}>Finalizar</button> */}\r\n            \r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Ingrese la sede\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n                {/* <button className = \"groupBtn\" onClick={() => console.log('Buscar')}>Buscar</button> */}\r\n                </div>\r\n\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Historial;","import {Navigate, Outlet} from 'react-router-dom';\r\nimport { useAuth } from './contexts/auth';\r\nimport React from 'react';\r\n\r\n\r\nexport const ProtectedRoute = () => {\r\n    const { user } = useAuth();\r\n    if (user === null) {\r\n        return <Navigate to=\"/iniciarsesion\" />;\r\n    }\r\n    return <Outlet />;\r\n}","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Helmet } from 'react-helmet';\r\nimport NavBar from \"../../components/navBar/navBar\";\r\nimport UserCard from \"../../components/UserCard/UserCard\"; // Update this path as necessary\r\n\r\nimport './equipoGuia.css';\r\nimport { getProfessors} from \"../../contexts/profesor\";\r\n\r\n\r\nconst EquipoGuia = () => {\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [users, setUsers] = useState([]);\r\n    const [selectedLocation, setSelectedLocation] = useState('');\r\n\r\n    React.useEffect(() => {\r\n        const fetchAndConvertProfessors = async () => {\r\n            try {\r\n                const professors = await getProfessors();\r\n                const coordinators = professors.filter(professor => professor.estado === true);\r\n                const usersData = coordinators.map(professor => ({\r\n                    name: `${professor.nombre} ${professor.nombre2 || ''} ${professor.apellido1} ${professor.apellido2}`,\r\n                    imageUrl: professor.foto,\r\n                    location: professor.sede,\r\n                    code: professor.codigo,\r\n                    email: professor.email,\r\n                    officeNumber: professor.numOficina,\r\n                    cellNumber: professor.celular\r\n                }));\r\n                setUsers(usersData);\r\n            } catch (error) {\r\n                console.error(\"Error fetching professors: \", error);\r\n            }\r\n        };\r\n    \r\n        fetchAndConvertProfessors();\r\n    }, []);\r\n\r\n    // Filter users based on selected location\r\n    const filteredUsers = selectedLocation ? users.filter(user => user.location === selectedLocation) : users;\r\n\r\n    return (\r\n        <>\r\n            <NavBar titulo=\"Equipo Guia\"/>\r\n            <Helmet>\r\n                <title>Equipo Guia - Tecnológico de Costa Rica</title>\r\n            </Helmet>\r\n            <div className=\".subtituloH\">\r\n                <h1>Equipo Guia de docentes asignados</h1>\r\n            </div>\r\n            <div className=\"dropdown-container\">\r\n                <select onChange={(e) => setSelectedLocation(e.target.value)} className=\"location-dropdown\">\r\n                    <option value=\"\">Escoge la Sede</option>\r\n                    <option value=\"Cartago\">Cartago</option>\r\n                    <option value=\"San Jose\">San Jose</option>\r\n                    <option value=\"Limon\">Limon</option>\r\n                    <option value=\"San Carlos\">San Carlos</option>\r\n                    <option value=\"Puntarenas\">Puntarenas</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"card-container\">\r\n                {filteredUsers.map(user => <UserCard key={user.email} user={user} />)}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EquipoGuia;","import React, { useState, useEffect } from 'react';\r\nimport \"./EditProfesor.css\";\r\n\r\nfunction EditProfessorModal({ professor, onClose, onSave }) {\r\n    const [formData, setFormData] = useState({\r\n        name: professor.name,\r\n        email: professor.email,\r\n        location: professor.location,\r\n        officeNumber: professor.officeNumber,\r\n        cellNumber: professor.cellNumber\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        setFormData({\r\n            name: professor.name,\r\n            email: professor.email,\r\n            location: professor.location,\r\n            officeNumber: professor.officeNumber,\r\n            cellNumber: professor.cellNumber\r\n        });\r\n    }, [professor]);\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            console.log('Saving changes for professor:', professor.code, formData);\r\n            await onSave(professor.code, formData); // Pasar el código y los nuevos datos\r\n            onClose(); // Cerrar modal después de guardar\r\n        } catch (error) {\r\n            console.error('Failed to update professor:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Name:</label>\r\n                <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} />\r\n                <label>Email:</label>\r\n                <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n                <label>Office Number:</label>\r\n                <input type=\"text\" name=\"officeNumber\" value={formData.officeNumber} onChange={handleChange} />\r\n                <label>Cell Number:</label>\r\n                <input type=\"text\" name=\"cellNumber\" value={formData.cellNumber} onChange={handleChange} />\r\n                <button type=\"submit\">Save Changes</button>\r\n                <button type=\"button\" onClick={onClose}>Cancel</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default EditProfessorModal;","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport NavBar from \"../../components/navBar/navBar\";\r\nimport UserCard from \"../../components/UserCard/UserCard\";\r\nimport userP from \"../../images/userPhoto.jpg\";\r\nimport \"./EdicionGuia.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getProfessors, updateProfessor, darBaja } from \"../../contexts/profesor\";\r\nimport EditProfessorModal from \"../../components/EditProfesor/EditProfesor\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst EdicionGuia = () => {\r\n    const navigate = useNavigate();\r\n    const [users, setUsers] = useState([]);\r\n    const [editingUser, setEditingUser] = useState(null);\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        fetchAndConvertProfessors();\r\n    }, [location]); // Empty dependency array to run only once on component mount\r\n\r\n    const fetchAndConvertProfessors = async () => {\r\n        try {\r\n            const professors = await getProfessors();\r\n            const activeProfessors = professors.filter(professor => professor.estado === true);\r\n            const usersData = activeProfessors.map(professor => ({\r\n                name: professor.nombre +\" \"+ professor.nombre2 +\" \"+ professor.apellido1 +\" \"+ professor.apellido2,\r\n                imageUrl: professor.foto,\r\n                location: professor.sede + \" \",\r\n                code: professor.codigo, // Adjust if professor data structure has a Codigo property\r\n                email: professor.email,\r\n                officeNumber: professor.numOficina,\r\n                cellNumber: professor.celular,\r\n                estado: professor.estado\r\n            }));\r\n            setUsers(usersData);\r\n        } catch (error) {\r\n            console.error(\"Error fetching professors: \", error);\r\n        }\r\n    };\r\n\r\n    const handleAgregarProf = () => {\r\n        navigate(\"/agregarProfesor\");\r\n    };\r\n\r\nconst handleEdit = (user) => {\r\n    console.log(\"Editing user:\", user);\r\n    setEditingUser(user);\r\n};\r\n\r\nconst handleCloseModal = () => {\r\n    setEditingUser(null);\r\n};\r\n\r\nconst handleSaveChanges = async (code, updatedData) => {\r\n    await updateProfessor(code, updatedData);\r\n    fetchAndConvertProfessors();\r\n};\r\n\r\nconst handleBaja = async (user) => {\r\n    await darBaja(user.code);\r\n    fetchAndConvertProfessors();\r\n};\r\n\r\n    return (\r\n        <>\r\n            <NavBar titulo=\"Equipo Guía\" id/>\r\n            <Helmet>\r\n                <title>Equipo Guía - Tecnológico de Costa Rica</title>\r\n            </Helmet>\r\n            <div className=\"subtituloH\">\r\n                <h1>Docentes Asignados</h1>\r\n                <button className=\"add-button\" onClick={handleAgregarProf}>+</button>\r\n            </div>\r\n            <div className=\"card-container\">\r\n                {users.map(user => (\r\n                    <div className=\"user-card-wrapper\" key={user.email} style={{ marginBottom: '20px', border: '1px solid #ccc', padding: '20px', boxShadow: '0 2px 5px rgba(0, 0, 0, 0.1)' }}>\r\n                        <UserCard user={user} />\r\n                        <div className=\"pag-buttons\">\r\n                            <button type=\"button\" onClick={() => handleEdit(user)}>Editar</button>\r\n                            <button type=\"button\" onClick={() => handleBaja(user)}>Baja</button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {editingUser && (\r\n                <EditProfessorModal\r\n                    professor={editingUser}\r\n                    onClose={handleCloseModal}\r\n                    onSave={handleSaveChanges}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EdicionGuia;","import React from 'react';\r\nimport './ActivityCard.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst ActivityCard = ({ activity }) => {\r\n    // Función para manejar múltiples responsables\r\n    const displayResponsibles = (responsibles) => {\r\n        return responsibles.join(\", \");\r\n    };\r\n    \r\n    const navigate = useNavigate();\r\n\r\n    const handleVerEvi = (activityId) => {\r\n        navigate(`/verEvidencia/${activityId}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"activity-card\">\r\n            <div className=\"activity-info\">\r\n                <img src={activity.poster} alt=\"activity\" className=\"activity-image\" onClick={()=>handleVerEvi(activity.id)}/>\r\n                <div className=\"activity-name\">{activity.activityName}</div>\r\n                <div className=\"activity-type\">{activity.activityType}</div>\r\n            </div>\r\n            <div className=\"activity-details\">\r\n                <div><strong>Fecha:</strong> {new Date(activity.dateTime).toLocaleDateString()}</div>\r\n                <div><strong>Hora:</strong> {new Date(activity.dateTime).toLocaleTimeString()}</div>\r\n                <div><strong>Semana:</strong> {activity.week}</div>\r\n                <div><strong>Docente responsable:</strong> {displayResponsibles(activity.responsibles)}</div>\r\n                <div><strong>Dias antes de anunciar:</strong> {activity.daysBeforeAnnounce}</div>\r\n                <div><strong>Dias recordatorio:</strong> {activity.reminderDays}</div>\r\n                <div><strong>Modalidad:</strong> {activity.modality}</div>\r\n                <div><strong>Enlace:</strong> {activity.modality === \"Remota\" ? <a href={activity.link} target=\"_blank\">Link</a> : \"N/A\"}</div>\r\n                <div><strong>Estado:</strong> {activity.state}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActivityCard;","import React, { useState, useContext, useEffect, createContext } from \"react\";\r\nimport { getStorage, ref, uploadBytes } from \"firebase/storage\";\r\nimport { db } from \"../firebase/firebase\";\r\nimport { collection, addDoc, query, where, getDocs, getFirestore, serverTimestamp, orderBy } from \"firebase/firestore\";\r\n\r\n\r\n\r\n\r\nexport const guardarComentario = async (emailUsuario, texto, actividad) => {\r\n    try {\r\n        const comentariosCollection = collection(db, 'comentarios');\r\n\r\n        const docRef = await addDoc(comentariosCollection, {\r\n            emailUsuario: emailUsuario,\r\n            texto: texto,\r\n            actividad: actividad,\r\n            fecha: serverTimestamp()\r\n        });\r\n\r\n        console.log(\"Comentario guardado exitosamente:\", docRef);\r\n        return docRef.id;\r\n    } catch (error) {\r\n        console.error(\"Error al guardar el comentario:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const obtenerComentariosPorActividad = async (idActividad) => {\r\n    try {\r\n        const comentariosCollection = collection(db, 'comentarios');\r\n\r\n        const querySnapshot = await getDocs(query(comentariosCollection, where(\"actividad\", \"==\", idActividad)));\r\n\r\n        //console.log(\"querySnap: \", querySnapshot);\r\n\r\n        const comentarios = [];\r\n        querySnapshot.forEach((doc) => {\r\n            //console.log(doc.metadata.createTime.toDate());\r\n            comentarios.push({\r\n                id: doc.id,\r\n                emailUsuario: doc.data().emailUsuario,\r\n                texto: doc.data().texto,\r\n                actividad: doc.data().actividad, \r\n                fecha: doc.data().fecha\r\n            });\r\n        });\r\n\r\n        comentarios.sort((a, b) => a.fecha - b.fecha);\r\n\r\n        console.log(\"Comentarios obtenidos exitosamente:\", comentarios);\r\n        return comentarios;\r\n    }\r\n    catch(error) {\r\n        console.error(\"Error al obtener los comentarios del usuario:\", error);\r\n        throw error;\r\n    }\r\n};","import React, { useState } from 'react';\r\nimport { Form, Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { storage , db } from '../../firebase/firebase';\r\nimport \"./RegisterActivity.css\";\r\nimport { ref } from 'firebase/storage';\r\nimport { uploadBytesResumable, getDownloadURL } from 'firebase/storage';\r\nimport { doc, updateDoc,  } from 'firebase/firestore';\r\n\r\nfunction UploadActivityImagesModal({ activity, onClose }) {\r\n    const [images, setImages] = useState([]);\r\n    const [link, setLink] = useState('');\r\n    const [uploadProgress, setUploadProgress] = useState(0);\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    const handleImageChange = (event) => {\r\n        if (event.target.files && event.target.files.length > 5) {\r\n            alert(\"You can only upload up to 5 images.\");\r\n            return;\r\n        }\r\n        if (event.target.files && event.target.files.length > 0) {\r\n            setImages(event.target.files);\r\n        }\r\n    };\r\n\r\n    const handleLinkChange = (event) => {\r\n        setLink(event.target.value);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        setUploading(true);\r\n        const promises = [];\r\n        const urls = [];\r\n    \r\n        Array.from(images).forEach((image, index) => {\r\n            const imageRef = ref(storage, `evidences/${activity.id}/${image.name}`);\r\n            const uploadTask = uploadBytesResumable(imageRef, image);\r\n    \r\n            promises.push(\r\n                new Promise((resolve, reject) => {\r\n                    uploadTask.on(\r\n                        'state_changed',\r\n                        (snapshot) => {\r\n                            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                            console.log('Upload is ' + progress + '% done');\r\n                            setUploadProgress(progress); // Actualizar el progreso de carga\r\n                        },\r\n                        (error) => {\r\n                            console.error(\"Error uploading file:\", error);\r\n                            reject(error); // Rechazar la promesa en caso de error\r\n                            setUploading(false);\r\n                        },\r\n                        async () => {\r\n                            const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);\r\n                            console.log(`File available at ${downloadURL}`);\r\n                            urls.push(downloadURL); // Agregar URL al arreglo de URLs\r\n                            resolve(downloadURL); // Resolver la promesa con la URL\r\n                        }\r\n                    );\r\n                })\r\n            );\r\n        });\r\n    \r\n        try {\r\n            await Promise.all(promises);\r\n            console.log('All files uploaded');\r\n            console.log(activity);\r\n            // Actualizar el documento de la actividad en Firestore con las URLs de las imágenes\r\n            const activityRef = doc(db, 'activities', activity.id);\r\n            await updateDoc(activityRef, {\r\n                imageUrls: urls, // Guardar las URLs de las imágenes subidas\r\n                link: link, // Guardar el enlace de la grabación\r\n                state: \"REALIZADA\"\r\n            });\r\n            console.log('Activity updated with image URLs');\r\n            onClose(); // Cerrar modal después de la carga\r\n        } catch (error) {\r\n            console.error('Error while uploading:', error);\r\n            alert(\"Error al subir imágenes. Por favor, intenta de nuevo.\");\r\n        } finally {\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <Form>\r\n                <Form.Group className=\"input-control\">\r\n                    <Form.Label>Upload Images</Form.Label>\r\n                    <InputGroup>\r\n                        <FormControl\r\n                            type=\"file\"\r\n                            multiple\r\n                            accept=\"image/*\"\r\n                            onChange={handleImageChange}\r\n                        />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                {activity.modality === \"Remota\" && (\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Recording Link</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                placeholder=\"Enter recording link\"\r\n                                value={link}\r\n                                onChange={handleLinkChange}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                )}\r\n\r\n                <Button className=\"Button\" variant=\"primary\" onClick={handleUpload} disabled={uploading}>\r\n                    {uploading ? `Uploading (${uploadProgress.toFixed(2)}%)` : \"Upload\"}\r\n                </Button>\r\n                <Button className=\"Button\" variant=\"secondary\" onClick={onClose}>\r\n                    Cancel\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadActivityImagesModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport \"./EditActivity.css\";\r\n\r\nfunction EditActivityModal({ activity, onClose, onSave }) {\r\n    const [formData, setFormData] = useState({\r\n        activityName: activity.activityName,\r\n        activityType: activity.activityType,\r\n        dateTime: activity.dateTime,\r\n        week: activity.week,\r\n        responsibles: activity.responsibles,\r\n        daysBeforeAnnounce: activity.daysBeforeAnnounce,\r\n        reminderDays: activity.reminderDays,\r\n        modality: activity.modality,\r\n        link: activity.link,\r\n        poster: activity.poster,\r\n        state: activity.state,\r\n        justification: activity.justification || ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    function formatDate(isoString) {\r\n        const date = new Date(isoString);\r\n        const year = date.getFullYear();\r\n        const month = `${date.getMonth() + 1}`.padStart(2, '0');\r\n        const day = `${date.getDate()}`.padStart(2, '0');\r\n        const hour = `${date.getHours()}`.padStart(2, '0');\r\n        const minute = `${date.getMinutes()}`.padStart(2, '0');\r\n        return `${year}-${month}-${day}T${hour}:${minute}`;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setFormData({\r\n            activityName: activity.activityName,\r\n            activityType: activity.activityType,\r\n            dateTime: formatDate(activity.dateTime),\r\n            week: activity.week,\r\n            responsibles: activity.responsibles,\r\n            daysBeforeAnnounce: activity.daysBeforeAnnounce,\r\n            reminderDays: activity.reminderDays,\r\n            modality: activity.modality,\r\n            link: activity.link,\r\n            poster: activity.poster,\r\n            state: activity.state,\r\n            justification: activity.justification || ''\r\n        });\r\n    }, [activity]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            // cambiar el id, no existe en la base de datos\r\n            console.log('Saving changes for activity:', activity.id, formData);\r\n            await onSave(activity.id, formData); // Pass the activity ID and new data\r\n            onClose(); // Close modal after saving\r\n        } catch (error) {\r\n            console.error('Failed to update activity:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-content\">\r\n                <Form id=\"form\" onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Nombre de la actividad</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"activityName\"\r\n                                placeholder=\"Enter the name of the activity\"\r\n                                value={formData.activityName}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Tipo de actividad</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                as=\"select\"\r\n                                name=\"activityType\"\r\n                                value={formData.activityType}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <option value=\"\">Selecciona un tipo de actividad</option>\r\n                                <option value=\"Orientadora\">Orientadora</option>\r\n                                <option value=\"Motivacional\">Motivacional</option>\r\n                                <option value=\"Apoyo a la vida estudiantil\">Apoyo a la vida estudiantil</option>\r\n                                <option value=\"Orden tecnico\">Orden tecnico</option>\r\n                                <option value=\"Recreacion\">Recreacion</option>\r\n                            </FormControl>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Fecha y hora</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                type=\"datetime-local\"\r\n                                name=\"dateTime\"\r\n                                value={formData.dateTime}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Semana</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                type=\"number\"\r\n                                name=\"week\"\r\n                                min=\"1\"\r\n                                max=\"16\"\r\n                                placeholder=\"Semana del semestre\"\r\n                                value={formData.week}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </InputGroup>\r\n                        <Form.Text className=\"text-muted\">\r\n                            Semana del semestre en la que se realizará la actividad.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Responsables</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"responsibles\"\r\n                                placeholder=\"Responsables\"\r\n                                value={formData.responsibles}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </InputGroup>\r\n                        <Form.Text className=\"text-muted\">\r\n                            Ingrese los nombres de los responsables separados por comas.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Días antes de anunciar</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                type=\"number\"\r\n                                name=\"daysBeforeAnnounce\"\r\n                                placeholder=\"Días antes de anunciar\"\r\n                                value={formData.daysBeforeAnnounce}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Días de recordatorio</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                type=\"number\"\r\n                                name=\"reminderDays\"\r\n                                placeholder=\"Días de recordatorio\"\r\n                                value={formData.reminderDays}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Modalidad</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                as=\"select\"\r\n                                name=\"modality\"\r\n                                value={formData.modality}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <option value=\"\">Seleccione una modalidad</option>\r\n                                <option value=\"Presencial\">Presencial</option>\r\n                                <option value=\"Remota\">Remoto</option>\r\n                            </FormControl>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Link</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"link\"\r\n                                placeholder=\"Enter link if remote\"\r\n                                value={formData.link}\r\n                                disabled={formData.modality !== 'Remota'}\r\n                                readOnly={formData.modality !== 'Remota'}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Estado</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                as=\"select\"\r\n                                name=\"state\"\r\n                                value={formData.state}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <option value=\"\">Seleccione un estado</option>\r\n                                <option value=\"Planeada\">Planeada</option>\r\n                                <option value=\"Cancelada\">Cancelada</option>\r\n                            </FormControl>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Justificación por cambio</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                as=\"textarea\"\r\n                                name=\"justification\"\r\n                                placeholder=\"Justifcacion\"\r\n                                value={formData.justification}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </InputGroup>\r\n                        <Form.Text className=\"text-muted\">\r\n                            Por favor brinde una justificación si el estado de la actividad cambia.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Button className=\"Button\" variant=\"primary\" type=\"submit\">\r\n                        Guardar cambios\r\n                    </Button>\r\n                    <Button className=\"Button\" variant=\"secondary\" type=\"button\" onClick={onClose}>\r\n                        Cancelar\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditActivityModal;","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport NavBar from \"../../components/navBar/navBar\";\r\nimport ActivityCard from \"../../components/ActivityCard/ActivityCard\";\r\nimport \"./PlanTrabajoGuia.css\";\r\nimport \"../../components/ActivityCard/ActivityCard\";\r\nimport userP from \"../../images/userPhoto.jpg\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\n//import { Modal } from \"react-bootstrap\";\r\nimport { db } from \"../../firebase/firebase\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\nimport { Modal , Button } from \"react-bootstrap\";\r\nimport {guardarComentario, obtenerComentariosPorActividad} from \"../../contexts/comentario\";\r\nimport UploadActivityImagesModal from \"../../components/RegisterActivity/RegisterActivity\";\r\nimport EditActivityModal from \"../../components/EditActivity/EditActivity\";\r\nimport { doc, updateDoc } from \"firebase/firestore\";\r\n\r\n\r\nconst PlanTrabajoGuia = () => {\r\n    const { user } = useAuth();\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [activities, setActivities] = useState([]); \r\n    const [IndexActivity, setIndexActivity] = useState(0); \r\n    const navigate = useNavigate();\r\n    const [editingActivity, setEditingActivity] = useState(null);\r\n    const [editeActivity, setEditActivity] = useState(null);\r\n    const [showUploadModal, setShowUploadModal] = useState(false);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n\r\n    const handleOnClick = () => {\r\n        window.history.back();\r\n    };\r\n\r\n    const handleShowModal = (index) => {\r\n        console.log(activities[index].id);\r\n        obtenerComentariosPorActividad(activities[index].id)\r\n            .then(comentarios => {\r\n                setComentarios(comentarios);\r\n                setShowModal(true);\r\n            })\r\n            .catch (error => {\r\n                setShowModal(true);\r\n                console.error(\"No hay comentarios\");\r\n            });\r\n    };\r\n\r\n    const handleShowModal2 = () => {\r\n        console.log(activities[IndexActivity].id);\r\n        obtenerComentariosPorActividad(activities[IndexActivity].id)\r\n            .then(comentarios => {\r\n                setComentarios(comentarios);\r\n                setShowModal(true);\r\n            })\r\n            .catch (error => {\r\n                setShowModal(true);\r\n                console.error(\"No hay comentarios\");\r\n            });\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setShowModal(false);\r\n    };\r\n\r\n    const addActivity = () => {\r\n        navigate(\"/agregarActividad\");\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n         \r\n\r\n         fetchActivities();\r\n    }, []);\r\n\r\n    const fetchActivities = async () => {\r\n        try { \r\n            const snapshot = await getDocs(collection(db, \"activities\"));\r\n            const activitiesData = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data()}));\r\n            setActivities(activitiesData);\r\n            console.log(activitiesData);\r\n        } catch (error) {\r\n            console.error(\"Error fetching activities:\", error);\r\n        }\r\n    };\r\n    //const comentarios = [\"Comentario 1\", \"Comentario 2\", \"Comentario 3\"];\r\n\r\n    const [comentarioNuevo, setComentarioNuevo] = useState(\"\");\r\n    const [comentarios, setComentarios] = useState([]);\r\n\r\n    const handleOnChangeComentario = (event) => {\r\n        setComentarioNuevo(event.target.value);\r\n    };\r\n\r\n    const handlePublicarComentario = async () => {\r\n        try {\r\n            const userMail = user.email;\r\n            //console.log(\"Valor de idUsuario:\", userMail);\r\n\r\n            await guardarComentario(userMail, comentarioNuevo, activities[IndexActivity].id);\r\n\r\n            //setComentarios([...comentarios, comentario]);\r\n\r\n            setComentarioNuevo(\"\");\r\n            \r\n            handleShowModal2();\r\n            //setShowModal(false);\r\n        } catch (error) {\r\n            console.error(\"Error al publicar comentario:\", error);\r\n        }\r\n    };\r\n\r\n    const handleEdit = (activity) => {\r\n        console.log(\"Editing activity:\", activity);\r\n        setEditingActivity(activity);\r\n        setShowUploadModal(true);\r\n    };\r\n\r\n    const handleCloseUploadModal = () => {\r\n        setShowUploadModal(false);\r\n    };\r\n\r\n    const handleEditAct = (activity) => {\r\n        console.log(\"Editing activity:\", activity);\r\n        setEditActivity(activity);\r\n        setShowEditModal(true);\r\n    };\r\n\r\n    const handleSaveChanges = async (activityId, formData) => {\r\n        const activityRef = doc(db, \"activities\", activityId);\r\n        try {\r\n            await updateDoc(activityRef, formData);\r\n            console.log(\"Activity updated successfully!\");\r\n            setShowEditModal(false); // Cerrar modal después de guardar\r\n        } catch (error) {\r\n            console.error(\"Error updating activity:\", error);\r\n            alert(\"Failed to update activity.\");\r\n        }\r\n        fetchActivities();\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <NavBar titulo=\"Plan de Trabajo\" id=\"navBar\" />\r\n            <Helmet>\r\n                <title>Plan de Trabajo - Tecnológico de Costa Rica</title>\r\n            </Helmet>\r\n            <div className=\"subtituloH\">\r\n                <h1>Lista de trabajos existentes</h1>\r\n                {user.coordinador && (\r\n                    <button className=\"add-button\" onClick={addActivity}>+</button>\r\n                )} \r\n            </div>\r\n                \r\n            <div className=\"PlanTrabajoGuia\">\r\n                {activities.map((activity, index) => (\r\n                    <div key={index} className=\"activity-full-container\">\r\n                        <ActivityCard activity={activity} />\r\n                        <div className=\"activity-buttons\">\r\n                            {user.coordinador &&(\r\n                            <>\r\n                                <button type=\"button\" onClick={() => handleEdit(activity)}>Registrar Evidencia</button>\r\n                                \r\n                                <button type=\"button\" onClick={() => handleEditAct(activity)}>Editar Actividad</button>\r\n                            </>\r\n                            )}\r\n                            <button type=\"button\" onClick={() => {handleShowModal(index); setIndexActivity(index);}}>Comentarios</button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {showModal && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={handleCloseModal}>&times;</span>\r\n                        <h2>Comentarios</h2>\r\n                        {/* Lista de comentarios */}\r\n                        <div className=\"comentarios-lista\">\r\n                            {comentarios.map((comentario, index) => (\r\n                                <div key={index} className=\"comentario\">\r\n                                    <p>Usuario: {comentario.emailUsuario}</p>\r\n                                    <p>Comentario: {comentario.texto}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {/* Formulario para añadir comentario */}\r\n                        <div className=\"comentario-nuevo\">\r\n                            <textarea value={comentarioNuevo} onChange={handleOnChangeComentario} placeholder=\"Escribe tu comentario aquí...\" />\r\n                            <button onClick={handlePublicarComentario}>Publicar</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {showUploadModal && (\r\n                <UploadActivityImagesModal activity={editingActivity} onClose={handleCloseUploadModal}/>\r\n            )}                \r\n            {showEditModal && (\r\n                <EditActivityModal\r\n                    activity={editeActivity}\r\n                    onClose={() => setShowEditModal(false)}\r\n                    onSave={handleSaveChanges}\r\n                />\r\n            )}\r\n\r\n                \r\n            <div className=\"page-buttons\">\r\n                <button type=\"button\" onClick={handleOnClick}>Regresar</button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlanTrabajoGuia;\r\n","import React, { useState, useContext, useEffect, createContext } from \"react\";\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport { db } from \"../firebase/firebase\";\r\nimport { collection, addDoc, query, where, getDocs, getFirestore, updateDoc} from \"firebase/firestore\";\r\n\r\n\r\n\r\n\r\nexport const uploadFileAndSaveReference = async (file, nameSede) => {\r\n    try {\r\n        // Obtener una referencia al Storage service\r\n        const storage = getStorage();\r\n        console.log(file.name);\r\n\r\n        // Crear una referencia a la ubicación donde se almacenará el archivo\r\n        const fileRef = ref(storage, `/excel/${nameSede}.xlsx`);\r\n\r\n        // Subir el archivo\r\n        await uploadBytes(fileRef, file);\r\n\r\n        // Obtener una referencia a la colección en Firestore\r\n        const archivosCollection = collection(db, 'archivos');\r\n\r\n        // Buscar si ya existe un documento con la misma sede\r\n        const querySnapshot = await getDocs(query(collection(db, 'archivos'), where('sede', '==', nameSede)));\r\n\r\n\r\n        if (!querySnapshot.empty) {\r\n            // Si ya existe un documento con la misma sede, actualizarlo\r\n            const docSnapshot = querySnapshot.docs[0]; // Suponiendo que solo habrá uno\r\n            await updateDoc(docSnapshot.ref, {\r\n                archivoRef: `/excel/${nameSede}.xlsx`\r\n            });\r\n            return docSnapshot.ref;\r\n        } else {\r\n            // Si no existe un documento con la misma sede, agregar uno nuevo\r\n            const docRef = await addDoc(archivosCollection, {\r\n                sede: nameSede,\r\n                archivoRef: `/excel/${nameSede}.xlsx`\r\n            });\r\n            return docRef;\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(\"Error al subir el archivo:\", error);\r\n        throw error; // Propagar el error para que sea manejado por el código que llama a esta función\r\n    }\r\n};\r\n\r\n\r\nexport const obtenerExcel = async (nameSede) => {\r\n    try {\r\n        // Obtener una referencia a la colección en Firestore\r\n        const archivosCollection = collection(db, 'archivos');\r\n\r\n        // Consultar los documentos donde el campo 'sede' sea igual al nombre de la sede\r\n        const querySnapshot = await getDocs(query(archivosCollection, where(\"sede\", \"==\", nameSede)));\r\n\r\n        // Obtener los datos del primer documento encontrado\r\n        let archivo = null;\r\n        querySnapshot.forEach((doc) => {\r\n            archivo = {\r\n                archivoRef: doc.data().archivoRef,\r\n                sede: doc.data().sede\r\n            };\r\n            // Solo necesitamos el primero, así que salimos del bucle después de encontrar uno\r\n            return;\r\n        });\r\n        if (!archivo) {\r\n            throw new Error(\"No se encontraron archivos para la sede especificada.\");\r\n        }\r\n        const storage = getStorage();\r\n        const fileRef = ref(storage, archivo.archivoRef);\r\n        const fileUrl = await getDownloadURL(fileRef);\r\n\r\n        // Descargar el archivo y retornarlo como un objeto File\r\n        const response = await fetch(fileUrl);\r\n        const blob = await response.blob();\r\n        const file = new File([blob], archivo.archivoRef);\r\n\r\n        console.log(\"Archivo descargado exitosamente:\", file);\r\n        return file;\r\n    } catch (error) {\r\n        console.error(\"Error al cargar los archivos:\", error);\r\n        //throw error; // Propagar el error para que sea manejado por el código que llama a esta función\r\n    }\r\n};\r\n\r\n\r\nexport const obtenerTodosLosExcels = async () => {\r\n    try {\r\n        // Obtener una referencia a la colección en Firestore\r\n        const archivosCollection = collection(db, 'archivos');\r\n\r\n        // Obtener todos los documentos de la colección\r\n        const querySnapshot = await getDocs(archivosCollection);\r\n\r\n        // Obtener los datos de los documentos y devolverlos\r\n        const archivos = [];\r\n        for (const doc of querySnapshot.docs) {\r\n            const archivo = {\r\n                archivoRef: doc.data().archivoRef,\r\n                sede: doc.data().sede\r\n            };\r\n            archivos.push(archivo);\r\n        }\r\n\r\n        // Descargar todos los archivos y retornarlos como objetos File\r\n        const storage = getStorage();\r\n        const archivosDescargados = await Promise.all(archivos.map(async (archivo) => {\r\n            const fileRef = ref(storage, archivo.archivoRef);\r\n            const fileUrl = await getDownloadURL(fileRef);\r\n            const response = await fetch(fileUrl);\r\n            const blob = await response.blob();\r\n            return new File([blob], archivo.archivoRef);\r\n        }));\r\n\r\n        console.log(\"Archivos descargados exitosamente:\", archivosDescargados);\r\n        return archivosDescargados;\r\n    } catch (error) {\r\n        console.error(\"Error al obtener todos los archivos:\", error);\r\n        //throw error; // Propagar el error para que sea manejado por el código que llama a esta función\r\n    }\r\n};\r\n\r\n\r\n\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Helmet } from 'react-helmet';\r\nimport NavBar from \"../../components/navBar/navBar\";\r\nimport './ListaDeEstudiantes.css';\r\nimport * as XLSX from 'xlsx';\r\nimport { uploadFileAndSaveReference, obtenerExcel, obtenerTodosLosExcels } from \"../../contexts/excel\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\n\r\nconst ListaDeEstudiantes = () => {\r\n    const { user } = useAuth();\r\n    const [excelData, setExcelData] = useState([[]]); // Inicializar con una hoja de Excel vacía\r\n    const [excelButton2Text, setExcelButton2Text] = useState('Cambiar Excel');\r\n    const [isButtonDisabled, setIsButtonDisabled] = useState(true);\r\n    const [estadoAlerta, setEstadoAlerta] = useState(false);\r\n    const [mensaje, setMensaje] = useState({});\r\n    const boton2Ref = useRef(null);\r\n    const boton3Ref = useRef(null);\r\n    const boton4Ref = useRef(null);\r\n    const [isButton2Active, setIsButton2Active] = useState(false);\r\n    const [showSuccessModal, setShowSuccessModal] = useState(false); // Estado para controlar la visibilidad del modal\r\n\r\n    useEffect(() => {\r\n        obtenerExcel(user.sede)\r\n            .then(archivos => {\r\n                console.log(archivos);\r\n                cargarArchivoPredeterminado(archivos);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error al cargar los archivos:\", error);\r\n                setEstadoAlerta(true);\r\n                setMensaje({ tipo: 'error', mensaje: 'No se pudo cargar los archivos' });\r\n            });\r\n    }, [user.sede]);\r\n\r\n    const cargarArchivoPredeterminado = (archivo) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = function (event) {\r\n            const data = new Uint8Array(event.target.result);\r\n            const workbook = XLSX.read(data, { type: 'array' });\r\n\r\n            // Obtener la primera hoja de cálculo\r\n            const sheetName = workbook.SheetNames[0];\r\n            const sheet = workbook.Sheets[sheetName];\r\n\r\n            // Convertir la hoja de cálculo a JSON\r\n            const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });\r\n\r\n            // Almacena los datos del Excel en el estado\r\n            setExcelData(jsonData);\r\n        };\r\n\r\n        reader.readAsArrayBuffer(archivo);\r\n    }\r\n\r\n    const handleFileSelect = (event) => {\r\n        const file = event.target.files[0];\r\n        cargarArchivoPredeterminado(file);\r\n    }\r\n\r\n    const upload = async () => {\r\n        try {\r\n            const fileInput = document.getElementById('excelFileInput');\r\n            if (fileInput.files.length === 0) {\r\n                console.log(\"No se ha seleccionado ningún archivo.\");\r\n                return; // Salir de la función si no hay ningún archivo seleccionado\r\n            }\r\n            const file = fileInput.files[0]; // Obtener el primer archivo seleccionado\r\n            console.log(user.sede);\r\n            await uploadFileAndSaveReference(file, user.sede);\r\n\r\n            // Mostrar modal de éxito\r\n            setShowSuccessModal(true);\r\n\r\n            toggleButton2();\r\n        } catch (error) {\r\n            console.error(\"Error en subir archivo:\", error);\r\n            setEstadoAlerta(true);\r\n            setMensaje({ tipo: 'error', mensaje: 'No se pudo iniciar sesión' });\r\n        }\r\n    }\r\n\r\n    const toggleButton2 = () => {\r\n        setIsButtonDisabled(!isButtonDisabled);\r\n        if (isButton2Active) {\r\n            boton2Ref.current.disabled = true;\r\n            boton3Ref.current.disabled = true;\r\n            boton4Ref.current.disabled = true;\r\n            setExcelButton2Text('Cambiar Excel');\r\n        } else {\r\n            boton2Ref.current.disabled = false;\r\n            boton3Ref.current.disabled = false;\r\n            boton4Ref.current.disabled = false;\r\n            setExcelButton2Text('Cancelar');\r\n        }\r\n        setIsButton2Active(!isButton2Active);\r\n    };\r\n\r\n    const generateAlphabet = () => {\r\n        const alphabet = [];\r\n        for (let i = 65; i <= 90; i++) {\r\n            alphabet.push(String.fromCharCode(i));\r\n        }\r\n        return alphabet;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar titulo=\"Lista De Estudiantes\" />\r\n            <Helmet>\r\n                <title>Lista De Estudiantes - Tecnológico de Costa Rica</title>\r\n            </Helmet>\r\n            <div className=\"subtituloH\">\r\n                <h1>Lista de Estudiantes de la sede del TEC</h1>\r\n            </div>\r\n            <label className=\"file-label\" ref={boton4Ref} htmlFor=\"excelFileInput\" disabled>Subir archivo</label>\r\n            <input className=\"file\" type=\"file\" id=\"excelFileInput\" ref={boton3Ref} accept=\".xlsx, .xls\" onChange={handleFileSelect} disabled />\r\n\r\n            <div className=\"excelDataContainer\">\r\n                <div className=\"tableWrapper\">\r\n                    <table className=\"excelTable\">\r\n                        <tbody>\r\n                            {/* Encabezado de columna */}\r\n                            <tr>\r\n                                <td className=\"indexCell\"></td> {/* Celda en blanco para el índice de fila */}\r\n                                {excelData.length > 0 && excelData[0].map((_, index) => (\r\n                                    <td key={index} className=\"indexCell\">{generateAlphabet()[index]}</td>\r\n                                ))}\r\n                            </tr>\r\n                            {/* Contenido de la tabla */}\r\n                            {[...Array(excelData.length).keys()].map(rowIndex => (\r\n                                <tr key={rowIndex}>\r\n                                    <td className=\"indexCell\">{rowIndex + 1}</td> {/* Índice de fila */}\r\n                                    {excelData[rowIndex].map((cell, cellIndex) => (\r\n                                        <td key={cellIndex}>{cell}</td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <button ref={boton2Ref} className=\"excel-button\" onClick={upload} disabled={isButtonDisabled}>Guardar Excel</button>\r\n            <button className=\"excel-button2\" onClick={toggleButton2}>{excelButton2Text}</button>\r\n\r\n            {/* Modal de éxito */}\r\n            {showSuccessModal && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={() => setShowSuccessModal(false)}>&times;</span>\r\n                        <div className=\"alert alert-success\" role=\"alert\">\r\n                            El archivo se ha cargado correctamente.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListaDeEstudiantes;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport NavBar from \"../../components/navBar/navBar\";\r\nimport { Form, InputGroup, FormControl, Button, FormLabel} from \"react-bootstrap\";\r\nimport \"./AgregarActividad.css\";\r\nimport Alerta  from \"../../components/Alerta\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { db, storage } from \"../../firebase/firebase\";\r\nimport { uploadBytes, ref, getDownloadURL} from \"firebase/storage\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\n\r\n\r\n\r\n\r\nconst AgregarActividad = () => {\r\n    const navigate = useNavigate();\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [week, setWeek] = useState('');\r\n    const [activityType, setActivityType] = useState('');\r\n    const [activityName, setActivityName] = useState('');\r\n    const [responsibles, setResponsibles] = useState('');\r\n    const [daysBeforeAnnounce, setDaysBeforeAnnounce] = useState(0);\r\n    const [reminderDays, setReminderDays] = useState(0);\r\n    const [modality, setModality] = useState('');\r\n    const [link, setLink] = useState('');\r\n    const [poster, setPoster] = useState(null);\r\n    const [posterName, setPosterName] = useState('');\r\n    const [state, setState] = useState('');\r\n\r\n    const [alertState, setAlertState] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState({});\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const uniqueFilename = `${uuidv4()}-${file.name}`; // Create a unique filename\r\n            setPoster(file);\r\n            setPosterName(uniqueFilename);\r\n        }\r\n    };\r\n\r\n    const backButton = () => {  \r\n        navigate(\"/planTrabajoGuia\");\r\n    };\r\n\r\n    const handleDateChange = (e) => {\r\n        const newDate = e.target.value;\r\n        setDate(newDate);\r\n    };\r\n\r\n    const handleModalityChange = (e) => {\r\n        setModality(e.target.value);\r\n        if (modality !== \"Remota\") {\r\n            setLink(\"No aplica\");\r\n        } else if (modality === \"Remota\") {\r\n            setLink(\"\");\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setAlertState(false);\r\n        setAlertMessage(\"\");\r\n\r\n        console.log(responsibles);\r\n\r\n        if (activityName === \"\" || activityType === \"\" || date === \"\" || time === \"\" || week === \"\" || responsibles === \"\" || daysBeforeAnnounce === \"\" || reminderDays === \"\" || modality === \"\" || poster === null) {\r\n            setAlertState(true);\r\n            setAlertMessage({tipo: \"error\", mensaje: \"Todos los campos son obligatorios\"});\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const posterRef = ref(storage, `posters/${posterName}`);\r\n            await uploadBytes(posterRef, poster)\r\n            const posterURL = await getDownloadURL(posterRef);\r\n\r\n            // Combine the date and time into a firebase datetime object\r\n            const dateTime = new Date(`${date}T${time}:00`);\r\n            const isoDateTime = dateTime.toISOString();\r\n            // Separate the responsibles into an array, splitting by commas\r\n            const responsiblesArray = responsibles.split(\",\").map((responsible) => responsible.trim());\r\n\r\n\r\n            const docRef = doc(db, `activities/${activityName}`);\r\n            setDoc(docRef, {\r\n                activityName,\r\n                activityType,\r\n                dateTime: isoDateTime,\r\n                week,\r\n                responsibles: responsiblesArray,\r\n                daysBeforeAnnounce,\r\n                reminderDays,\r\n                modality,\r\n                link,\r\n                poster: posterURL,\r\n                state: \"PLANEADA\",\r\n                justification: \"\"\r\n            });\r\n\r\n            setAlertState(true);\r\n            setAlertMessage({tipo: \"exito\", mensaje: \"Actividad agregada correctamente\"});\r\n            navigate(\"/planTrabajoGuia\");\r\n        } catch (error) {\r\n            console.error(\"Error adding activity:\", error);\r\n            setAlertState(true);\r\n            setAlertMessage({tipo: \"error\", mensaje: \"Ocurrió un error al agregar la actividad\"});\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Helmet>\r\n            <title>Agregar Actividad - Tecnológico de Costa Rica</title>\r\n        </Helmet>\r\n        <div>\r\n            <NavBar titulo=\"Agregar Actividad\"/>\r\n            <div className=\"Container\">\r\n                <Form id=\"form\" onSubmit={handleSubmit}>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Nombre de la actividad</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl \r\n                            type=\"text\" \r\n                            placeholder=\"Nombre de la actividad\" \r\n                            value={activityName}\r\n                            onChange={(e) => setActivityName(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Tipo de actividad</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Select aria-label=\"Tipo de actividad\" value={activityType} onChange={(e) => setActivityType(e.target.value)}>\r\n                                <option value=\"\">Seleccione un tipo de actividad</option>\r\n                                <option value=\"Orientadora\">Orientadora</option>\r\n                                <option value=\"Motivacional\">Motivacional</option>\r\n                                <option value=\"Apoyo a la vida estudiantil\">Apoyo a la vida estudiantil</option>\r\n                                <option value=\"Orden tecnico\">Orden tecnico</option>\r\n                                <option value=\"Recreacion\">Recreacion</option>\r\n                            </Form.Select>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Fecha programada</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                            type=\"date\"\r\n                            placeholder=\"Fecha programada\"\r\n                            value={date}\r\n                            onChange={handleDateChange}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Hora programada</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                            type=\"time\"\r\n                            placeholder=\"Hora programada\"\r\n                            value={time}\r\n                            onChange={(e) => setTime(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Semana</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                            type=\"number\"\r\n                            placeholder=\"Semana\"\r\n                            value={week}\r\n                            onChange={(e) => setWeek(e.target.value)}\r\n                            min=\"1\"\r\n                            max=\"16\"\r\n                            />\r\n                        </InputGroup>\r\n                        <Form.Text className=\"text-muted\">\r\n                            Semana del semestre en la que se realizará la actividad.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Responsables</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Responsables\"\r\n                            value={responsibles}\r\n                            onChange={(e) => setResponsibles(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                        <Form.Text className=\"text-muted\">\r\n                            Ingrese los nombres de los responsables separados por comas.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Días antes de anunciar</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                            type=\"number\"\r\n                            placeholder=\"Días antes de anunciar\"\r\n                            value={daysBeforeAnnounce}\r\n                            onChange={(e) => setDaysBeforeAnnounce(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Días de recordatorio</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                            type=\"number\"\r\n                            placeholder=\"Días de recordatorio\"\r\n                            value={reminderDays}\r\n                            onChange={(e) => setReminderDays(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Modalidad</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Select aria-label=\"Modalidad\" value={modality} onChange={handleModalityChange}>\r\n                                <option value=\"\">Seleccione una modalidad</option>\r\n                                <option value=\"Presencial\">Presencial</option>\r\n                                <option value=\"Remota\">Remota</option>\r\n                            </Form.Select>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Link</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Link\"\r\n                            value={link}\r\n                            disabled={modality !== \"Remota\"}\r\n                            readOnly={modality !== \"Remota\"}\r\n                            onChange={(e) => setLink(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Cartel</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={handleFileChange}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Button className=\"Button\" variant=\"primary\" type=\"submit\">\r\n                        Agregar\r\n                    </Button>\r\n                    \r\n                    <Button className=\"Button\" variant=\"secondary\" type=\"button\" onClick={backButton}>\r\n                    Regresar\r\n                    </Button>\r\n                </Form>\r\n\r\n            </div>\r\n        </div>\r\n        \r\n        <Alerta\r\n            tipo={alertMessage.tipo}\r\n            mensaje={alertMessage.mensaje}\r\n            estadoAlerta={alertState}\r\n            setestadoAlerta={setAlertState}\r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AgregarActividad;","import React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport NavBar from \"../../components/navBar/navBar\";\r\nimport { Form, InputGroup, FormControl, Button, FormLabel } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { addProfessorToFirestore } from \"../../contexts/profesor\";\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { storage } from \"../../firebase/firebase\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\n\r\nconst AgregarProfesor = () => {\r\n    const { user } = useAuth();\r\n    const navigate = useNavigate();\r\n    const [nombre1, setNombre1] = useState(\"\");\r\n    const [nombre2, setNombre2] = useState(\"\");\r\n    const [apellido1, setApellido1] = useState(\"\");\r\n    const [apellido2, setApellido2] = useState(\"\");\r\n    const [sede, setSede] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [numOficina, setNumOficina] = useState(\"\");\r\n    const [celular, setCelular] = useState(\"\");\r\n    const [coordinador, setCoordinador] = useState(false);\r\n    const [file, setFile] = useState(null);\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const admin = user.coordinador === undefined;\r\n    const cartago = user.sede === \"Cartago\";\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (nombre1 === \"\" || apellido1 === \"\" || sede === \"\" || email === \"\" || numOficina === \"\" || celular === \"\") {\r\n            alert(\"Por favor, llena todos los campos\");\r\n            return;\r\n        }\r\n        try {\r\n            const photoRef = ref(storage, `Profesores/${nombre1}-${file.name}`);\r\n            const uploadTask = uploadBytesResumable(photoRef, file);\r\n    \r\n            uploadTask.on('state_changed',\r\n                (snapshot) => {\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log('Upload is ' + progress + '% done');\r\n                },\r\n                (error) => {\r\n                    throw error;\r\n                },\r\n                async () => {\r\n                    const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);\r\n                    console.log('File available at', downloadURL);\r\n                    // Llamar a la función para agregar el profesor con todos los datos incluyendo la URL de la imagen\r\n                    await addProfessorToFirestore(nombre1, downloadURL, sede, email, numOficina, celular, nombre2, apellido1, apellido2, coordinador, true, password);\r\n                    navigate(\"/edicionGuia\");\r\n                }\r\n            );\r\n        } catch (error) {\r\n            console.error(\"Error during the image upload: \", error);\r\n            alert(\"Error al subir la imagen. Por favor, intenta de nuevo.\");\r\n        }\r\n        \r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        setFile(e.target.files[0]); // Guarda el primer archivo seleccionado\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Helmet>\r\n            <title>Agregar Profesor - Tecnológico de Costa Rica</title>\r\n        </Helmet>\r\n        <div>\r\n            <NavBar titulo=\"Agregar Profesor\"/>\r\n            <div className=\"Container\">\r\n                <Form id=\"form\" onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Subir Imagen</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                type=\"file\"\r\n                                onChange={handleFileChange}\r\n                                accept=\"image/*\" // Acepta solo imágenes\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Nombre</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Nombre\"\r\n                            value={nombre1}\r\n                            onChange={(e) => setNombre1(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Segundo Nombre</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl \r\n                            type=\"text\" \r\n                            placeholder=\"Segundo Nombre\" \r\n                            value={nombre2}\r\n                            onChange={(e) => setNombre2(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Apellido</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Apellido\"\r\n                            value={apellido1}\r\n                            onChange={(e) => setApellido1(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Segundo Apellido</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Segundo Apellido\"\r\n                            value={apellido2}\r\n                            onChange={(e) => setApellido2(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Sede</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Select\r\n                                value={sede}\r\n                                onChange={(e) => setSede(e.target.value)}\r\n                                aria-label=\"Selecciona una sede\"\r\n                            >\r\n                                <option value=\"\">Selecciona una sede</option>\r\n                                <option value=\"Cartago\">Cartago</option>\r\n                                <option value=\"San Jose\">San Jose</option>\r\n                                <option value=\"Alajuela\">Alajuela</option>\r\n                                <option value=\"San Carlos\">San Carlos</option>\r\n                                <option value=\"Limon\">Limón</option>\r\n                            </Form.Select>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                type=\"password\"\r\n                                value={password}\r\n                                placeholder=\"Password\"\r\n                                onChange={(e) => setPassword(e.target.value)}     \r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Número de oficina</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Número de oficina\"\r\n                            value={numOficina}\r\n                            onChange={(e) => setNumOficina(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"input-control\">\r\n                        <Form.Label>Celular</Form.Label>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Celular\"\r\n                            value={celular}\r\n                            onChange={(e) => setCelular(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    {admin && cartago &&( \r\n                        <>\r\n                        <Form.Group className=\"input-control\">\r\n                            <Form.Label></Form.Label>\r\n                            <InputGroup>\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    label=\"Coordinador\"\r\n                                    value={coordinador}\r\n                                    onChange={(e) => setCoordinador(e.target.checked)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        </>\r\n                    )}\r\n                    <Button className=\"Button\" variant=\"primary\" type=\"submit\">\r\n                        Agregar\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AgregarProfesor;","import React, { useState, useEffect } from \"react\";\r\nimport { Helmet } from 'react-helmet';\r\nimport NavBar from \"../../components/navBar/navBar\";\r\nimport './ListaEstudiantesProfesores.css';\r\nimport { obtenerExcel, obtenerTodosLosExcels } from \"../../contexts/excel\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst ListaDeEstudiantesProfesores = () => {\r\n    const { user } = useAuth();\r\n    const [activeTab, setActiveTab] = useState('estudiantes');\r\n    const [excelData, setExcelData] = useState([[]]); // Inicializar con una hoja de Excel vacía\r\n    const [opcionesMenu, setOpcionesMenu] = useState([]); // Opciones del menú\r\n    const [selectedOption, setSelectedOption] = useState(null); // Estado para la opción seleccionada\r\n    const [estadoAlerta, setEstadoAlerta] = useState(false);\r\n    const [mensaje, setMensaje] = useState({});\r\n\r\n    const [archivosExcel, setArchivosExcel] = useState([]);\r\n    const [ultimoArchivoSeleccionado, setUltimoArchivoSeleccionado] = useState(null);\r\n\r\n    useEffect(() => { \r\n        if (activeTab === 'estudiantes') {\r\n            sedeUser();\r\n        }\r\n    }, [user.sede]);\r\n\r\n    const todos = () => {\r\n        obtenerTodosLosExcels(user.sede)\r\n            .then(archivos => {\r\n                // Extraer los nombres de los archivos\r\n                const nombresArchivos = archivos.map(archivo => archivo.name);\r\n                cargarArchivoPredeterminado(archivos[0]);\r\n                setArchivosExcel(archivos);\r\n                setUltimoArchivoSeleccionado(archivos[0]);\r\n                // Establecer los nombres de los archivos como opciones de menú\r\n                setOpcionesMenu(nombresArchivos);\r\n                // Si deseas seleccionar automáticamente el primer archivo, descomenta la siguiente línea:\r\n                setSelectedOption(nombresArchivos[0]);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error al cargar los archivos:\", error);\r\n                setEstadoAlerta(true);\r\n                setMensaje({ tipo: 'error', mensaje: 'No se pudo cargar los archivos' });\r\n            });\r\n    };\r\n\r\n    const sedeUser = () => {\r\n        obtenerExcel(user.sede)\r\n            .then(archivos => {\r\n                console.log(archivos);\r\n                cargarArchivoPredeterminado(archivos);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error al cargar los archivos:\", error);\r\n                setEstadoAlerta(true);\r\n                setMensaje({ tipo: 'error', mensaje: 'No se pudo cargar los archivos' });\r\n            });\r\n    }\r\n\r\n\r\n    const cargarArchivoPredeterminado = (archivo) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = function (event) {\r\n            const data = event.target.result;\r\n            const workbook = XLSX.read(data, { type: 'binary' });\r\n\r\n            // Obtener la primera hoja de cálculo\r\n            const sheetName = workbook.SheetNames[0];\r\n            const sheet = workbook.Sheets[sheetName];\r\n\r\n            // Convertir la hoja de cálculo a JSON\r\n            const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });\r\n\r\n            // Almacena los datos del Excel en el estado\r\n            setExcelData(jsonData);\r\n        };\r\n        reader.readAsBinaryString(archivo);\r\n    }\r\n\r\n    const handleOptionClick = (opcion, archivo) => {\r\n        setSelectedOption(opcion);\r\n        setUltimoArchivoSeleccionado(archivo);\r\n        cargarArchivoPredeterminado(archivo);\r\n    };\r\n\r\n    // Función para generar los botones del menú dinámicamente\r\n    const renderizarBotones = () => {\r\n        return opcionesMenu.map((opcion, index) => (\r\n            <button\r\n                key={index}\r\n                className={`menuButton ${opcion === selectedOption ? 'active' : ''}`}\r\n                onClick={() => handleOptionClick(opcion, archivosExcel[index])}\r\n            >\r\n                {opcion}\r\n            </button>\r\n        ));\r\n    };\r\n\r\n    // Función para cambiar de pestaña\r\n    const switchTab = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n\r\n    const downloadAll = () => {\r\n        // Crear un nuevo libro de trabajo vacío\r\n        let combinedWorkbook = XLSX.utils.book_new();\r\n    \r\n        // Iterar sobre cada opción seleccionada del menú\r\n        archivosExcel.forEach((archivo) => {\r\n            // Obtener el archivo correspondiente al nombre de la opción\r\n            \r\n    \r\n            if (archivo) {\r\n                // Leer el contenido del archivo\r\n                const reader = new FileReader();\r\n                reader.onload = function (event) {\r\n                    const data = event.target.result;\r\n                    const workbook = XLSX.read(data, { type: 'binary' });\r\n    \r\n                    // Agregar cada hoja del archivo al libro de trabajo combinado\r\n                    workbook.SheetNames.forEach((sheetName) => {\r\n                        const sheet = workbook.Sheets[sheetName];\r\n                        XLSX.utils.book_append_sheet(combinedWorkbook, sheet, sheetName);\r\n                    });\r\n    \r\n                    // Si has procesado todos los archivos, descarga el archivo combinado\r\n                    if (archivo === archivosExcel[archivosExcel.length - 1]) {\r\n                        XLSX.writeFile(combinedWorkbook, 'sedes.xlsx');\r\n                    }\r\n                };\r\n                reader.readAsBinaryString(archivo);\r\n            }\r\n        });\r\n    };\r\n    const download = () => {\r\n        if (ultimoArchivoSeleccionado) {\r\n            const archivo = ultimoArchivoSeleccionado;\r\n            const reader = new FileReader();\r\n            reader.onload = function (event) {\r\n                const data = event.target.result;\r\n                const workbook = XLSX.read(data, { type: 'binary' });\r\n                workbook.SheetNames.forEach((sheetName) => {\r\n                    const sheet = workbook.Sheets[sheetName];\r\n                    const combinedWorkbook = XLSX.utils.book_new();\r\n                    XLSX.utils.book_append_sheet(combinedWorkbook, sheet, sheetName);\r\n                    XLSX.writeFile(combinedWorkbook, archivo.name);\r\n                });\r\n            };\r\n            reader.readAsBinaryString(archivo);\r\n        }\r\n    };\r\n\r\n\r\n    const generateAlphabet = () => {\r\n        const alphabet = [];\r\n        for (let i = 65; i <= 90; i++) {\r\n            alphabet.push(String.fromCharCode(i));\r\n        }\r\n        return alphabet;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar titulo=\"Lista De Estudiantes\" />\r\n            <Helmet>\r\n                <title>Lista De Estudiantes - Tecnológico de Costa Rica</title>\r\n            </Helmet>\r\n            <div className=\"tabs\">\r\n                {/* Botones de pestaña */}\r\n                <button className={activeTab === 'estudiantes' ? 'active' : ''} onClick={() => {switchTab('estudiantes'); sedeUser()}}>Mi Sede</button>\r\n                <button className={activeTab === 'profesores' ? 'active' : ''} onClick={() => {switchTab('profesores'); todos()}}>Todas las Sedes</button>\r\n            </div>\r\n            <div className=\"subtituloH\">\r\n                <h1>Lista de Estudiantes de la sede del TEC</h1>\r\n            </div>\r\n            <div className=\"excelDataContainer\">\r\n                <div className=\"tableWrapper\">\r\n                    <table className=\"excelTable\">\r\n                        <tbody>\r\n                            {/* Encabezado de columna */}\r\n                            <tr>\r\n                                <td className=\"indexCell\"></td> {/* Celda en blanco para el índice de fila */}\r\n                                {excelData.length > 0 && excelData[0].map((_, index) => (\r\n                                    <td key={index} className=\"indexCell\">{generateAlphabet()[index]}</td>\r\n                                ))}\r\n                            </tr>\r\n                            {/* Contenido de la tabla */}\r\n                            {[...Array(excelData.length).keys()].map(rowIndex => (\r\n                                <tr key={rowIndex}>\r\n                                    <td className=\"indexCell\">{rowIndex + 1}</td> {/* Índice de fila */}\r\n                                    {excelData[rowIndex].map((cell, cellIndex) => (\r\n                                        <td key={cellIndex}>{cell}</td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            {/* Contenido de la tabla dependiendo de la pestaña activa */}\r\n            {activeTab === 'estudiantes' && (\r\n                <div className=\"excelDataContainer\">\r\n                    {/* Contenido de la tabla de estudiantes */}\r\n                    <div className=\"tableWrapper\">\r\n                        {/* Contenido de la tabla de estudiantes */}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {activeTab === 'profesores' && (\r\n                <div className=\"excelDataContainer\">\r\n                     <div className=\"menuContainer\">\r\n                        <div className=\"menu\">\r\n                            {renderizarBotones()} {/* Renderiza los botones del menú */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tableWrapper\">\r\n                        {/* Contenido de la tabla de profesores */}\r\n                    </div>\r\n                    <button className=\"excel-button2\" onClick={downloadAll}>Descargar Todo</button>\r\n                </div>\r\n            )}\r\n            \r\n            {/* Botón para descargar el archivo */}\r\n            <button className=\"excel-button\" onClick={download}>Descargar Sede</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListaDeEstudiantesProfesores;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { db } from \"../../firebase/firebase\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport \"./VerEvidencia.css\";\r\n\r\nconst VerEvidencia = () => {\r\n    const { activityId } = useParams();\r\n    const [activity, setActivity] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const fetchActivity = async () => {\r\n            const docRef = doc(db, \"activities\", activityId);\r\n            const docSnap = await getDoc(docRef);\r\n\r\n            if (docSnap.exists()) {\r\n                setActivity(docSnap.data());\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        };\r\n\r\n        fetchActivity();\r\n    }, [activityId]);\r\n\r\n    if (!activity) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Evidencias de la Actividad</h1>\r\n            <div className=\"container-evidencias\">\r\n                {activity.imageUrls && activity.imageUrls.length > 0 ? (\r\n                    activity.imageUrls.map((url, index) => (\r\n                        <div key={index} className=\"evidencia\">\r\n                            <img src={url} alt={`Evidencia ${index + 1}`} />\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>Actividad no finalizada</p> // Mensaje alternativo si no hay imágenes\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VerEvidencia;","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport NavBar from \"../../components/navBar/navBar\";\r\nimport ActivityCard from \"../../components/ActivityCard/ActivityCard\";\r\nimport \"./PlanTrabajoCentroAcademico.css\";\r\nimport \"../../components/ActivityCard/ActivityCard\";\r\n//import { Modal } from \"react-bootstrap\";\r\nimport { db } from \"../../firebase/firebase\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\n\r\n\r\nconst PlanTrabajoCentroAcademico = () => {\r\n    const [activities, setActivities] = useState([]);\r\n    const [displayedActivity, setDisplayedActivity] = useState([]);\r\n    const [showClosest, setShowClosest] = useState(false);  // Estado para controlar qué botón se muestra\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetchActivities();\r\n    }, []);\r\n\r\n    const fetchActivities = async () => {\r\n        try {\r\n            const snapshot = await getDocs(collection(db, \"activities\"));\r\n            const activitiesData = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data()}));\r\n            setActivities(activitiesData);\r\n            setDisplayedActivity(activitiesData);  // Inicialmente mostrar todas las actividades\r\n        } catch (error) {\r\n            console.error(\"Error fetching activities:\", error);\r\n        }\r\n    };\r\n\r\n    const handleFindClosestActivity = () => {\r\n        const now = new Date();\r\n        const futureActivities = activities.filter(activity => {\r\n            const activityDate = new Date(activity.dateTime);\r\n            return activityDate > now && (activity.state === \"PLANEADA\" || activity.state === \"NOTIFICADA\");\r\n        });\r\n\r\n        if (futureActivities.length > 0) {\r\n            const closest = futureActivities.reduce((closest, current) => {\r\n                const closestDate = new Date(closest.dateTime);\r\n                const currentDate = new Date(current.dateTime);\r\n                return (closestDate - now < currentDate - now) ? closest : current;\r\n            });\r\n\r\n            setDisplayedActivity([closest]);\r\n        } else {\r\n            setDisplayedActivity([]);\r\n        }\r\n        setShowClosest(true);  // Cambiar a mostrar el botón de devolverse\r\n    };\r\n\r\n    const handleReturn = () => {\r\n        setDisplayedActivity(activities);  // Mostrar todas las actividades de nuevo\r\n        setShowClosest(false);  // Cambiar a mostrar el botón de consultar último proyecto\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <NavBar titulo=\"Plan de Trabajo\" id=\"navBar\" />\r\n            <Helmet>\r\n                <title>Plan de Trabajo - Tecnológico de Costa Rica</title>\r\n            </Helmet>\r\n            <div className=\"subtituloH\">\r\n                <h1>Lista de trabajos existentes</h1>\r\n            </div>\r\n\r\n            <div className=\"PlanTrabajoGuia\">\r\n                {displayedActivity && displayedActivity.length > 0 ? (\r\n                    displayedActivity.map((activity, index) => (\r\n                        <div key={index} className=\"activity-full-container\">\r\n                            <ActivityCard activity={activity} />\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>No hay actividades próximas.</p>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"page-buttons\">\r\n                {showClosest ? (\r\n                    <button type=\"button\" onClick={handleReturn}>Devolverse</button>\r\n                ) : (\r\n                    <button type=\"button\" onClick={handleFindClosestActivity}>Consultar Último Proyecto</button>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlanTrabajoCentroAcademico;","import React from 'react';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport IniciarSesion from './pages/IniciarSesion/IniciarSesion';\r\nimport { Helmet } from 'react-helmet';\r\nimport favicon from './images/faviconTD.ico';\r\nimport Fondo from './components/Fondo';\r\nimport { AuthProvider } from './contexts/auth';\r\nimport Inicio from './pages/inicio/inicio';\r\nimport Historial from './pages/historial/Historial';\r\nimport { ProtectedRoute } from './ProtectedRoute';\r\nimport EquipoGuia from './pages/equipoGuia/equipoGuia';\r\nimport EdicionGuia from './pages/EdicionGuia/EdicionGuia';\r\nimport PlanTrabajoGuia from './pages/PlanTrabajoGuia/PlanTrabajoGuia';\r\nimport ListaDeEstudiantes from './pages/ListaDeEstudiantes/ListaDeEstudiantes';\r\nimport AgregarActividad from './pages/AgregarActividad/AgregarActividad';\r\nimport AgregarProfesor from './pages/AgregarProfesor/AgregarProfesor';\r\nimport ListaDeEstudiantesProfesores from './pages/ListaEstudiantesProfesores/ListaEstudiantesProfesores';\r\nimport VerEvidencia from './pages/VerEvidencia/VerEvidencia';\r\nimport PlanTrabajoCentroAcademico from './pages/PlanTrabajoCentroAcademico/PlanTrabajoCentroAcademico';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <link rel = \"shortcut icon\" href = {favicon} type = \"image/x-ico\"/>\r\n      </Helmet>\r\n      <AuthProvider>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path=\"/iniciarsesion\" element={<IniciarSesion/>} />\r\n            <Route path=\"/historial\" element={<Historial/>} />\r\n            <Route path=\"/inicio\" element={<Inicio/>} /> \r\n            <Route path=\"/equipoGuia\" element={<EquipoGuia/>} /> \r\n            <Route path=\"/edicionGuia\" element={<EdicionGuia/>} />\r\n            <Route path=\"/planTrabajoGuia\" element={<PlanTrabajoGuia/>} />\r\n            <Route path=\"/agregarActividad\" element={<AgregarActividad/>} />\r\n            <Route path=\"/ListaDeEstudiantes\" element={<ListaDeEstudiantes/>} />\r\n            <Route path=\"/ListaDeEstudiantesProfesores\" element={<ListaDeEstudiantesProfesores/>} />\r\n            <Route path=\"/agregarProfesor\" element={<AgregarProfesor/>} />\r\n            <Route path=\"/planTrabajoCentroAcademico\" element={<PlanTrabajoCentroAcademico/>} />\r\n            <Route path=\"/verEvidencia/:activityId\" element={<VerEvidencia />} />\r\n            <Route  element={<ProtectedRoute/>}>\r\n              <Route path=\"/\" element={<Inicio/>} />\r\n            </Route>\r\n          </Routes>\r\n        </BrowserRouter>\r\n        <Fondo/>\r\n      </AuthProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}