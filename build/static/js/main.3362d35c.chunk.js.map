{"version":3,"sources":["images/fotoP.png","images/faviconTD.ico","images/tec.png","images/logotec.png","components/ContainerInicioSesion.js","theme.js","components/Alerta.js","firebase/firebase.js","contexts/auth.js","pages/IniciarSesion/IniciarSesion.js","components/Fondo.js","components/navBar/navBar.js","pages/inicio/inicio.js","components/UserCard/UserCard.js","contexts/profesor.js","pages/historial/Historial.js","ProtectedRoute.js","pages/equipoGuia/equipoGuia.js","components/EditProfesor/EditProfesor.js","pages/EdicionGuia/EdicionGuia.js","contexts/canceledActivities.js","contexts/reminderActivities.js","components/notificationCenter.js","components/Visitor.js","contexts/buzon.js","components/activityObserver.js","components/ActivityCard/ActivityCard.js","contexts/comentario.js","components/RegisterActivity/RegisterActivity.js","components/EditActivity/EditActivity.js","pages/PlanTrabajoGuia/PlanTrabajoGuia.js","pages/ListaDeEstudiantes/ListaDeEstudiantes.js","contexts/excel.js","pages/AgregarActividad/AgregarActividad.js","pages/AgregarProfesor/AgregarProfesor.js","pages/ListaEstudiantesProfesores/ListaEstudiantesProfesores.js","pages/VerEvidencia/VerEvidencia.js","pages/BuzonEntrada/Message.js","pages/BuzonEntrada/BuzonEntrada.js","pages/PlanTrabajoCentroAcademico/PlanTrabajoCentroAcademico.js","pages/Perfil/perfil.js","components/ModelActivity/modelActivity.js","pages/CalendarioEstudiantes/calendarioEstudiantes.js","pages/ForgotPassword/forgotpassword.js","App.js","index.js","images/userPhoto.jpg"],"names":["module","exports","ContainerInicioSesion","styled","div","_templateObject","_taggedTemplateLiteral","theme","fondo","colorPrimario","colorSecundario","verde","rojo","grisClaro","grisClaro2","azulClaro","slideDown","keyframes","ContenedorAlerta","_templateObject2","props","tipo","Alerta","_ref","mensaje","estadoAlerta","setestadoAlerta","useEffect","tiempo","setTimeout","clearTimeout","React","createElement","Fragment","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","storage","getStorage","AuthContext","createContext","useAuth","context","useContext","Error","AuthProvider","children","user","setUser","useState","loading","setLoading","async","fetchUserDetails","uid","userDetails","localStorage","getItem","JSON","parse","docSnap","loginProfesores","loginAdmins","loginEstudiante","setItem","stringify","getUserDetailsCacheOrFirebase","onAuthStateChanged","firebaseUser","docuRef","doc","concat","docuSnap","getDoc","exists","console","log","data","Provider","value","login","email","password","userinfo","signInWithEmailAndPassword","usuariofirebase","hasOwnProperty","nombre","nombre2","apellido1","apellido2","codigo","celular","numOficina","foto","coordinador","estado","sede","estudiante","error","register","createUserWithEmailAndPassword","then","userCredential","setDoc","coordindor","logout","signOut","removeItem","registerAdmin","actualizarUser","collections","collectionName","q","query","collection","where","querySnapshot","getDocs","empty","userData","docs","IniciarSesion","navigate","useNavigate","setEmail","setPassword","setEstadoAlerta","setMensaje","handleChange","e","target","id","Helmet","className","src","fotoP","alt","Form","onSubmit","preventDefault","emailValido","test","Group","Label","htmlFor","InputGroup","FormControl","type","placeholder","onChange","href","Button","Fondo","NavBar","titulo","Navbar","bg","variant","Brand","onClick","handleInicio","Nav","Link","verPerfil","style","color","Inicio","updateUser","admin","undefined","logotec","handleInfoProfes","handleHistoProfes","handleListaDeEstudiantes","handleBuzon","handleCalendario","handleEquipoGuia","handlePlanTrabajo","handleListaDeEstudiantesProfesores","UserCard","imageUrl","name","location","code","officeNumber","cellNumber","formatUpdateProfessor","profesor","parts","split","length","trim","addProfessorToFirestore","photo","correo","numeroOficina","telefono","hasValidName","hasValidPhoto","hasValidSede","includes","hasValidEmail","hasValidOfficeNumber","hasValidCellNumber","hasValidCoordinador","hasValidestado","isValidProfessor","formatProfessor","campus","substring","teleCelular","counterData","getContador","newCount","editContador","cont","count","formatProf","docRef","getProfessors","snapshot","map","find","Name","newField","updateDoc","Historial","searchTerm","setSearchTerm","users","setUsers","usersData","professor","fetchAndConvertProfessors","filteredUsers","filter","toLowerCase","key","ProtectedRoute","Navigate","to","Outlet","EquipoGuia","selectedLocation","setSelectedLocation","professors","EditProfessorModal","onClose","onSave","formData","setFormData","checked","prev","cartago","EdicionGuia","editingUser","setEditingUser","useLocation","handleBaja","codigoUnico","professorsRef","forEach","professorRef","document","ref","darBaja","handleAgregarProf","marginBottom","border","padding","boxShadow","handleEdit","handleCloseModal","updatedData","updateProfessor","actividadesCanceladas","sentRemindersCollection","addSentReminder","activityId","date","reminderId","isReminderSent","notificationCenter","constructor","this","observers","addObserver","observer","push","removeObserver","obs","notify","message","update","Visitor","visit","activity","currentDate","PublicationVisitor","activityDate","Date","dateTime","setDate","getDate","daysBeforeAnnounce","state","activityRef","emisor","responsibles","fecha","toDateString","hora","toTimeString","contenido","activityName","CancelationVisitor","isActivityCanceled","addCanceledActivity","ReminderVisitor","reminderDates","amountOfReminders","Math","floor","reminderDays","startDate","getTime","i","reminderDate","diffDays","abs","diffTime","ceil","getMessagesByEmail","messageStudentRef","messageStudentDoc","listamensajes","getEstudiantes","estudiantesCollection","estudiantes","activityObserver","hour","content","contador","formatomsg","emailEstudiantes","emailEstudiante","listaMensajes","msg","addMessageToFirestore","ActivityCard","activityData","setActivityData","FECHA_SISTEMA","publicationVisitor","reminderVisitor","cancelationVisitor","unsuscribe","onSnapshot","newData","poster","handleVerEvi","activityType","toLocaleDateString","toLocaleTimeString","week","join","modality","link","obtenerComentariosPorActividad","comentariosCollection","idActividad","comentarios","emailUsuario","texto","actividad","sort","a","b","UploadActivityImagesModal","images","setImages","setLink","uploadProgress","setUploadProgress","uploading","setUploading","multiple","accept","event","files","alert","promises","urls","Array","from","image","index","imageRef","uploadTask","uploadBytesResumable","Promise","resolve","reject","on","progress","bytesTransferred","totalBytes","downloadURL","getDownloadURL","all","imageUrls","disabled","toFixed","EditActivityModal","justification","formatDate","isoString","year","getFullYear","month","getMonth","padStart","day","getHours","minute","getMinutes","as","min","max","Text","readOnly","PlanTrabajoGuia","showModal","setShowModal","activities","setActivities","IndexActivity","setIndexActivity","editingActivity","setEditingActivity","editeActivity","setEditActivity","showUploadModal","setShowUploadModal","showEditModal","setShowEditModal","fetchActivities","activitiesData","comentarioNuevo","setComentarioNuevo","setComentarios","addActivity","handleEditAct","catch","handleShowModal","comentario","text","emailRegex","matches","match","part","highlightEmails","handleResponder","userMail","addDoc","serverTimestamp","guardarComentario","handleCloseUploadModal","handleOnClick","window","history","back","ListaDeEstudiantes","excelData","setExcelData","excelButton2Text","setExcelButton2Text","isButtonDisabled","setIsButtonDisabled","boton2Ref","useRef","boton3Ref","boton4Ref","isButton2Active","setIsButton2Active","showSuccessModal","setShowSuccessModal","archivosCollection","nameSede","archivo","archivoRef","fileRef","fileUrl","response","fetch","blob","file","File","obtenerExcel","archivos","cargarArchivoPredeterminado","reader","FileReader","onload","Uint8Array","result","workbook","XLSX","sheetName","SheetNames","sheet","Sheets","jsonData","sheet_to_json","header","readAsArrayBuffer","toggleButton2","current","_","generateAlphabet","alphabet","String","fromCharCode","keys","rowIndex","cell","cellIndex","fileInput","getElementById","worksheet","columns","row","uploadEstudiantesSede","role","AgregarActividad","time","setTime","setWeek","setActivityType","setActivityName","setResponsibles","setDaysBeforeAnnounce","setReminderDays","setModality","setPoster","posterName","setPosterName","setState","alertState","setAlertState","alertMessage","setAlertMessage","posterRef","uploadBytes","posterURL","isoDateTime","toISOString","responsiblesArray","responsible","Select","aria-label","newDate","Control","uniqueFilename","uuidv4","backButton","AgregarProfesor","nombre1","setNombre1","setNombre2","setApellido1","setApellido2","setSede","setNumOficina","setCelular","setCoordinador","setFile","photoRef","Check","label","ListaDeEstudiantesProfesores","activeTab","setActiveTab","setWorkbook","opcionesMenu","setOpcionesMenu","selectedOption","setSelectedOption","setEstudiantes","archivosExcel","setArchivosExcel","sedeUser","todos","obtenerEstudiantes","sedes","nombresSedesUnicas","Set","estudiantesFiltrados","namesede","obtenerEstudiantesPorSede","json_to_sheet","newWorkbook","book_new","book_append_sheet","switchTab","tab","opcion","handleOptionClick","downloadAll","combinedWorkbook","estudiantesPorSede","Object","download","VerEvidencia","useParams","setActivity","fetchActivity","url","rel","Message","isOpen","setIsOpen","messageId","updateMessageInFirestore","sender","BuzonEntrada","messages","setMessages","setFilter","fetchMessages","sortedMessages","dateA","messageStudent","readMessages","deleteDoc","updatedMessages","deleteReadMessages","PlanTrabajoCentroAcademico","displayedActivity","setDisplayedActivity","showClosest","setShowClosest","handleReturn","handleFindClosestActivity","now","futureActivities","closest","reduce","closestDate","Perfil","profileData","setProfileData","fotoFile","onloadend","prevState","readAsDataURL","updatedProfileData","photoURL","updated","filteredProfileData","currentCollection","userDoc","userDocRef","merge","updateUserData","ModalActivity","localizer","momentLocalizer","moment","CalendarioEstudiantes","selectedActivity","setSelectedActivity","Calendar","events","titleAccessor","startAccessor","endAccessor","onSelectEvent","charAt","toUpperCase","slice","ForgotPassword","sendPasswordResetEmail","required","App","favicon","BrowserRouter","Routes","Route","path","element","Calendario","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.3362d35c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fotoP.e647a224.png\";","module.exports = __webpack_public_path__ + \"static/media/faviconTD.19086bdd.ico\";","module.exports = __webpack_public_path__ + \"static/media/tec.421bf85a.png\";","module.exports = __webpack_public_path__ + \"static/media/logotec.c3695aa9.png\";","import styled from 'styled-components';\n\nconst ContainerInicioSesion = styled.div`\nbackground: #fff;\nwidth: 50%;\nmax-width: 70rem; /* 1110px */\nheight: 50vh;\nmax-height: 50rem;  /* 800px */\nbox-shadow: 0px 1.25rem 2.5rem rgba(0,0,0,.05);\nborder-radius: 2rem; /* 10px */\nmargin: 25vh auto 0 auto; /* Margen superior variable para evitar pegarse arriba */\ndisplay: flex;\nflex-direction: column;\njustify-content: space-between; /* Centra el contenido verticalmente dentro del contenedor */\nposition: relative;\nz-index: 100;\n\n@media(max-width: 60rem){ /* 950px */\n    height: 95vh;\n    max-height: none;\n    margin-top: 2.5vh; /* Margen superior ajustado para mantener el contenedor centrado verticalmente */\n}\n`;\n\nexport default ContainerInicioSesion;","const theme = {\n    fondo: '#F9F9F9',\n    colorPrimario: '#5B69E2',\n    colorSecundario: '#000',\n    verde: '#43A854',\n    rojo: '#E34747',\n    grisClaro: '#E8EFF1',\n    grisClaro2: '#CBDDE2',\n    azulClaro: '#8792F1'\n}\n\nexport default theme;","import React, { useEffect } from \"react\";\nimport styled, {keyframes} from \"styled-components\";\nimport theme from \"../theme\";\n\nconst slideDown = keyframes`\n    0% {\n        transform: translateY(-1.25rem); /* 20px */\n        opacity: 0;\n    }\n \n    10% {\n        transform: translateY(1.25rem);\n        opacity: 1;\n    }\n    \n    90% {\n        transform: translateY(1.25rem);\n        opacity: 1;\n    }\n \n    100% {\n        transform: translateY(1.25rem);\n        opacity: 0;\n    }\n`;\n \nconst ContenedorAlerta = styled.div`\n    z-index: 1000;\n    width: 100%;\n    left: 0;\n    top: 1.25rem; /* 20px */\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    animation: ${slideDown} 4s ease forwards;\n \n    p {\n \n        background: ${(props) => {\n            if(props.tipo === 'error'){\n                return theme.rojo;\n            } else if (props.tipo === 'exito') {\n                return theme.verde;\n            } else {\n                return '#000';\n            }\n        }};\n        color: #fff;\n        padding: 1.25rem 2.5rem; /* 20px 40px */\n        border-radius: 0.31rem; /* 5px */\n        box-shadow: 0px 0px 15px rgba(0,0,0,.1);\n        text-align: center;\n    }\n`;\n\nconst Alerta = ({tipo, mensaje, estadoAlerta, setestadoAlerta}) => {\n    useEffect(() => {\n        let tiempo;\n        if(estadoAlerta){\n            tiempo = setTimeout(() => {\n                setestadoAlerta(false);\n            }, 4000);\n        }\n        return(() => clearTimeout(tiempo));\n    }, [estadoAlerta, setestadoAlerta]);\n    return (\n        <>\n        {estadoAlerta &&\n            <ContenedorAlerta tipo = {tipo}>\n                <p>{mensaje}</p>\n            </ContenedorAlerta>\n        }\n        </>\n    );\n}\n\nexport default Alerta;","import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth } from \"firebase/auth\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\ninitializeApp(firebaseConfig);\nconst db = getFirestore();\nconst auth = getAuth();\nconst storage = getStorage();\n\nexport { db, auth, storage };\n","import React, { useState, useContext, useEffect, createContext } from \"react\";\nimport { auth, db } from \"../firebase/firebase\";\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { doc, setDoc, getDoc, collection, getDocs, query, where} from \"firebase/firestore\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error(\"useAuth debe ser usado dentro de un AuthProvider\");\n    }\n    return context;\n}\n\nexport const AuthProvider = ({children}) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {\n            if (firebaseUser) {\n                fetchUserDetails(firebaseUser.uid);\n            } else {\n                setUser(null);\n                setLoading(false);\n            }\n        });\n\n        return unsubscribe; \n    }, []);\n\n    async function fetchUserDetails(uid) {\n        setLoading(true);\n        const userDetails = await getUserDetailsCacheOrFirebase(uid);\n        setUser(userDetails);\n        setLoading(false);\n    }\n\n    async function getUserDetailsCacheOrFirebase(uid) {\n        // Obtener el usuario de la caché si está disponible\n        let userDetails = localStorage.getItem(\"userDetails\");\n        // Si no hay usuario en la caché, obtenerlo de Firebase\n        if (!userDetails) {\n            let docSnap = await loginProfesores(uid);\n            if (!docSnap) {\n                docSnap = await loginAdmins(uid);\n            }\n            if (!docSnap) {\n                docSnap = await loginEstudiante(uid);\n            }\n            // Si se encontró el documento, almacenarlo en la caché\n            if (docSnap) {\n                localStorage.setItem(\"userDetails\", JSON.stringify(docSnap));\n                return docSnap;\n            // Si no se encontró el documento, devolver nulo\n            } else {\n                return null;\n            }\n        // Si hay usuario en la caché, devolverlo\n        } else {\n            return JSON.parse(userDetails);\n        }\n    }\n\n    const login = async (email, password) => {\n    try {\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\n        const userinfo = userCredential.user;\n\n        if (!userinfo.uid) {\n            throw new Error(\"UID del usuario no está disponible\");\n        }\n\n        let docuSnap = await loginProfesores(userinfo.uid);  // Intenta obtener datos como profesor\n\n        if (!docuSnap) {\n            docuSnap = await loginAdmins(userinfo.uid);  // Si no es profesor, intenta como administrador\n        }\n\n        if (!docuSnap) {\n            docuSnap = await loginEstudiante(userinfo.uid);  // Si no es profesor, intenta como administrador\n        }\n\n        if (!docuSnap) {\n            throw new Error(\"No se pudieron obtener los datos del usuario\");\n        }\n\n        let usuariofirebase;\n\n        // Verifica si el documento contiene el campo 'coordinador'\n        if (docuSnap.hasOwnProperty(\"coordinador\")) {\n            usuariofirebase = {\n                uid: userinfo.uid,\n                email: userinfo.email,\n                nombre: docuSnap.nombre,\n                nombre2: docuSnap.nombre2,\n                apellido1: docuSnap.apellido1,\n                apellido2: docuSnap.apellido2,\n                codigo: docuSnap.codigo,\n                celular: docuSnap.celular,\n                numOficina: docuSnap.numOficina,\n                foto: docuSnap.foto,\n                coordinador: docuSnap.coordinador,\n                estado: docuSnap.estado,\n                sede: docuSnap.sede                \n            };\n        } else if (docuSnap.hasOwnProperty(\"estudiante\")) {\n            usuariofirebase = {\n                uid: userinfo.uid,\n                email: userinfo.email,\n                nombre: docuSnap.nombre,\n                nombre2: docuSnap.nombre2,\n                apellido1: docuSnap.apellido1,\n                apellido2: docuSnap.apellido2,\n                codigo: docuSnap.codigo,\n                celular: docuSnap.celular,\n                numOficina: docuSnap.numOficina,\n                foto: docuSnap.foto,\n                estudiante: docuSnap.estudiante,\n                estado: docuSnap.estado,\n                sede: docuSnap.sede                \n            };\n        }\n        else{\n            usuariofirebase = {\n                uid: userinfo.uid,\n                email: userinfo.email,\n                nombre: docuSnap.nombre,\n                nombre2: docuSnap.nombre2,\n                apellido1: docuSnap.apellido1,\n                apellido2: docuSnap.apellido2,\n                celular: docuSnap.celular,\n                sede: docuSnap.sede\n            };\n        }\n        console.log(usuariofirebase);\n\n        setUser(usuariofirebase);  // Establece los datos del usuario en la sesión o donde corresponda\n\n        return true;\n    } catch (error) {\n        console.error(\"Error en el login:\", error);\n        return false;\n    }\n};\n    \n    const loginProfesores = async (uid) => {\n        const docuRef = doc(db, `Profesores/${uid}`);\n        const docuSnap = await getDoc(docuRef);\n        if (docuSnap.exists()) {\n            console.log(\"Datos del profesor:\", docuSnap.data());\n            return docuSnap.data();\n        } else {\n            console.log(\"No se encontró el documento del profesor\");\n            return null;\n        }\n    }\n\n    const loginAdmins = async (uid) => {\n        const docuRef = doc(db, `Admins/${uid}`);\n        const docuSnap = await getDoc(docuRef);\n        if (docuSnap.exists()) {\n            console.log(\"Datos del administrador:\", docuSnap.data());\n            return docuSnap.data();\n        } else {\n            console.log(\"No se encontró el documento del administrador\");\n            return null;\n        }\n    }\n\n    const loginEstudiante = async (uid) => {\n        const docuRef = doc(db, `Estudiantes/${uid}`);\n        const docuSnap = await getDoc(docuRef);\n        if (docuSnap.exists()) {\n            console.log(\"Datos del estudiante:\", docuSnap.data());\n            return docuSnap.data();\n        } else {\n            console.log(\"No se encontró el documento del estudiante\");\n            return null;\n        }\n    }\n\n    const register = async (email, password) => {\n        try {\n            const infouser = await createUserWithEmailAndPassword(auth, email, password).then((userCredential) => {\n                return userCredential;\n            });\n            const user = infouser.user;\n            const docuRef = doc(db, `Profesores/${user.uid}`);\n            setDoc(docuRef, {\n                email: email,\n                nombre: \"Rafael\",\n                nombre2: \"Mauricio\",\n                apellido1: \"Arroyo\",\n                apellido2: \"Herrera\",\n                codigo: \"CA-01\",\n                celular: \"88888888\",\n                numOficina: \"1\",\n                foto : \"\",\n                coordindor: false,\n                estado: \"activo\"\n            });\n\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const registerAdmin = async (email, password) => {\n        try {\n            const infouser = await createUserWithEmailAndPassword(auth, email, password).then((userCredential) => {\n                return userCredential;\n            });\n            const user = infouser.user;\n            const docuRef = doc(db, `Admins/${user.uid}`);\n            setDoc(docuRef, {\n                email: email,\n                nombre : \"Ariana\",\n                nombre2 : \"\",\n                apellido1 : \"Guillen\",\n                apellido2 : \"Masis\",\n                celular : \"12345678\",\n                sede : \"San Jose\",\n            });\n\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const logout = async () => {\n        try {\n            await signOut(auth);\n            setUser(null);\n            localStorage.removeItem(\"userDetails\");\n            console.log(user);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const actualizarUser = async (email) => {\n        const collections = [\"Profesores\", \"Admins\", \"Estudiantes\"];\n    \n        for (const collectionName of collections) {\n            const q = query(collection(db, collectionName), where(\"email\", \"==\", email));\n            const querySnapshot = await getDocs(q);\n    \n            if (!querySnapshot.empty) {\n                const userDoc = querySnapshot.docs[0];\n                const userData = userDoc.data();\n                setUser(userData);\n                localStorage.setItem(\"userDetails\", JSON.stringify(userData));\n                break;\n            }\n        }\n    }; \n\n    return (\n        <AuthContext.Provider value={{\n            user,\n            login,\n            register,\n            logout,\n            registerAdmin,\n            fetchUserDetails,\n            actualizarUser\n        }}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default { AuthContext };","import React, {useState, useEffect} from \"react\";\nimport ContainerInicioSesion from \"../../components/ContainerInicioSesion\";\nimport { Helmet } from 'react-helmet';\nimport \"./IniciarSesion.css\"\nimport {Form, InputGroup, FormControl, Button} from \"react-bootstrap\";\nimport fotoP from \"../../images/fotoP.png\";\nimport Alerta from \"../../components/Alerta\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/auth\";\n\n\n\nconst IniciarSesion = () => {\n    const { login, register, registerAdmin } = useAuth();\n    const navigate = useNavigate();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [estadoAlerta, setEstadoAlerta] = useState(false);\n    const [mensaje, setMensaje] = useState({});\n\n    const handleChange = (e) => {\n        if(e.target.id === \"email\"){\n            setEmail(e.target.value);\n        } else {\n            setPassword(e.target.value);\n        }\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setEstadoAlerta(false);\n        setMensaje({});\n\n        const expresion = /[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+/;\n        const emailValido = expresion.test(email);\n\n        if(password === \"\"|| email === \"\"){\n            setEstadoAlerta(true);\n            setMensaje({tipo: 'error', mensaje: 'Todos los campos son obligatorios'});\n            return;\n        }\n\n        if(!emailValido){\n            setEstadoAlerta(true);\n            setMensaje({tipo: 'error', mensaje: 'Correo no válido'});\n            return;\n        }\n\n        try {\n            const success = await login(email, password);\n            if (success) {\n                 navigate(\"/\"); // Navegar a la página de inicio solo si el login es exitoso\n             } else {\n                setEstadoAlerta(true);\n                setMensaje({ tipo: 'error', mensaje: 'No se pudo iniciar sesión' });\n            }\n        }\n        catch (error) {\n            console.error(\"Error en login:\", error);\n            setEstadoAlerta(true);\n            setMensaje({ tipo: 'error', mensaje: 'No se pudo iniciar sesión' });\n        }\n    }\n    return (\n        <>\n            <Helmet>\n                <title>Iniciar sesión</title>\n            </Helmet>\n            \n            <ContainerInicioSesion>\n            <div className = \"container\">\n                <div className = \"row img\" >\n                    <div className=\"col\">\n                        <img src= {fotoP} alt=\"fotoP\" className=\"mx-auto\"/>\n                    </div>\n\n                    <div className=\"col centered-column\">\n                        <h1 className=\"h1-custom\"> Ingrese su usuario </h1>\n                        <Form id=\"form\" onSubmit={handleSubmit}>\n                            <Form.Group className=\"input-control\">\n                                <Form.Label htmlFor=\"email\"> </Form.Label>\n                                <InputGroup>\n                                    <FormControl\n                                        type=\"email\"\n                                        id=\"email\"\n                                        value={email}\n                                        placeholder=\"Email\"\n                                        onChange={handleChange}\n                                        \n                                    />\n                                    <div className=\"error\"></div>\n                                </InputGroup>\n                            </Form.Group>\n                                <Form.Group className=\"input-control\">\n                                    <Form.Label htmlFor=\"password\"></Form.Label>\n                                    <InputGroup>\n                                        <FormControl\n                                            type=\"password\"\n                                            id=\"password\"\n                                            value={password}\n                                            placeholder=\"Password\"\n                                            onChange={handleChange}\n                                            \n                                        />\n                                        <div className=\"error\"></div>\n                                    </InputGroup>\n                                </Form.Group>\n                                <div className=\"text-center h-custom\">\n                                <a href=\"/forgot-password\" className=\"forgot-password-link\">¿Olvidó su contraseña?</a>\n                                <Button className=\"boton\" type=\"submit\" id=\"submit\">Log In</Button>    \n                                </div>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n            </ContainerInicioSesion>\n            <Alerta \n                tipo={mensaje.tipo}\n                mensaje={mensaje.mensaje} \n                estadoAlerta={estadoAlerta}\n                setestadoAlerta={setEstadoAlerta}  \n            />\n        </>\n    );\n}\n\nexport default IniciarSesion;","import styled from \"styled-components\";\n\nconst Fondo = styled.div`\n    background-color: #B7D0FF; // Color de fondo azul\n    height: 100vh; // Altura completa de la vista\n    width: 100vw; // Ancho completo de la vista\n    position: fixed; // Posicionamiento fijo respecto a la ventana del navegador\n    top: 0; // Inicio en la parte superior de la ventana\n    left: 0; // Inicio en la parte izquierda de la ventana\n    z-index: -1; // Establecer el índice Z negativo para enviar al fondo\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport default Fondo;\n","import React from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport './navBar.css';\nimport { useAuth } from \"../../contexts/auth\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NavBar = ({titulo}) => {\n    const { logout } = useAuth();\n    const navigate = useNavigate();\n\n    const cerrarSesion = async () => {\n        logout();\n        navigate(\"/iniciarsesion\");\n    }\n\n    const verPerfil = () => {\n        navigate(\"/perfil\");\n    }\n\n    const handleInicio = () => {\n        navigate(\"/inicio\");\n    }\n\n    return (\n        <Navbar bg=\"light\" variant=\"light\" className=\"navbar\">\n            <Navbar.Brand className=\"brand\" onClick={handleInicio}>{titulo}</Navbar.Brand >\n            <Nav className=\"nav\">\n                <Nav.Link onClick={verPerfil} style={{color: '#2A67C3'}}> Ver perfil</Nav.Link>\n                <Nav.Link onClick={cerrarSesion} style={{color: '#2A67C3'}}> Cerrar sesión</Nav.Link>\n            </Nav>\n        </Navbar>\n    );\n}\n\n\nexport default NavBar;","import React from \"react\";\nimport { useAuth } from \"../../contexts/auth\";\nimport { Helmet } from 'react-helmet';\nimport NavBar from \"../../components/navBar/navBar\";\nimport fotoP from \"../../images/tec.png\";\nimport logotec from \"../../images/logotec.png\";\nimport './Inicio.css';\nimport { useNavigate } from \"react-router-dom\";\n\nconst Inicio = () => {\n    const { user, updateUser} = useAuth();\n    const navigate = useNavigate();\n    const handlePlanTrabajo = () => {\n        navigate(\"/planTrabajoGuia\");\n    }\n    const handleCalendario = () => {\n        navigate(\"/calendarioEstudiantes\");\n    }\n    const handleListaDeEstudiantes = () => {\n        navigate(\"/ListaDeEstudiantes\");\n    }\n\n    const handleBuzon = () => {\n        navigate(\"/BuzonEntrada\");\n    }\n    const handleListaDeEstudiantesProfesores = () => {\n        navigate(\"/ListaDeEstudiantesProfesores\");\n    }\n    let admin = false;\n    let coordinador = false;\n    let estudiante = false;\n\n    if (user.coordinador === undefined) {\n        if (user.estudiante === undefined) {\n            admin = true;\n        }\n        else if (user.estudiante) {\n            estudiante = true;\n        }\n    }\n   else if (user.coordinador) {\n        coordinador = true;\n    }\n    else {\n        coordinador = false;\n    }\n\n    const handleInfoProfes = () => {\n        navigate(\"/edicionGuia\");\n    }\n    \n    const handleHistoProfes = () => {\n        navigate(\"/historial\");\n    }\n\n    const handleEquipoGuia = () => {\n        navigate(\"/equipoGuia\");\n    }\n\n    return (\n        <>\n        <Helmet>\n            <title>Inicio - Tecnológico de Costa Rica</title>\n        </Helmet>\n        <div>\n            <NavBar titulo=\"Inicio\"/>\n            <div className=\"logo-image\">\n            <img src= {logotec} alt=\"Tecnológico de Costa Rica\" />\n            </div>\n            <div className=\"main-image\">\n                {/* You can use an <img> tag or a div with background-image depending on your preference */}\n                <img src= {fotoP} alt=\"Tecnológico de Costa Rica\" />\n            </div>\n           <div className = \"subtitulo\">\n                 <h1> Que desea realizar? </h1>\n            </div>\n            <div className=\"button-container\">\n                { admin &&(\n                <>\n                    <button className=\"menu-button\" onClick={handleInfoProfes}>Información Profesores</button>\n                    <button className=\"menu-button\" onClick={handleHistoProfes}>Historial Profesores</button>\n                    <button className=\"menu-button\" onClick={handleListaDeEstudiantes}>Lista Estudiantes</button> \n                </>)}\n                { estudiante &&(\n                <>\n                    <button className=\"menu-button\" onClick={handleBuzon}>Buzon de Entrada</button>\n                    <button className=\"menu-button\" onClick={handleCalendario}>Calendario</button>\n                </>)}\n                { !estudiante &&(\n                <>\n                    <button className=\"menu-button\" onClick={handleEquipoGuia}>Equipo Guia</button>\n                    <button className=\"menu-button\" onClick={handlePlanTrabajo}>Plan de Trabajo</button>\n                </>)}\n                \n                { !admin && !estudiante &&(\n                    <button className=\"menu-button\" onClick={handleListaDeEstudiantesProfesores}>Lista Estudiantes</button> \n                )}\n            </div>\n        </div>\n        </>\n    );\n}\n\nexport default Inicio;","import React from 'react';\nimport './UserCard.css'; // Link to the CSS file for styling\n\nconst UserCard = ({ user }) => {\n    return (\n        <div className=\"user-card\">\n            <div className=\"user-info\">\n                <img src={user.imageUrl} alt=\"user\" className=\"user-image\"/>\n                <div className=\"user-name\">{user.name}</div>\n            </div>\n            <div className=\"user-details\">\n                <div><strong>Sede:</strong> {user.location}</div>\n                <div><strong>Codigo:</strong> {user.code}</div>\n                <div><strong>Correo Electronico:</strong> {user.email}</div>\n                <div><strong>Número Oficina:</strong> {user.officeNumber}</div>\n                <div><strong>Telefono Celular:</strong> {user.cellNumber}</div>\n                <div><strong>Coordinador:</strong> {user.coordinador ? 'Sí' : 'No'}</div>\n            </div>\n        </div>\n    );\n};\nexport default UserCard;","\n import { db,storage } from \"../firebase/firebase\";\n import { addDoc, setDoc, getDoc,collection, getDocs, updateDoc, doc, deleteDoc, query, where } from \"firebase/firestore\";\nimport { createUserWithEmailAndPassword} from \"firebase/auth\";\nimport { auth } from \"../firebase/firebase\";\n\n\n\n //addProfessorToFirestore(name, photo, sede, correo, numeroOficina, telefono);\n\n// export const createprofesor = (name, photo, sede, correo, numeroOficina, telefono) => {\n//      addProfessorToFirestore(name, photo, sede, correo, numeroOficina, telefono);\n//     console.log(\"XD\");\n// }\n\n\n\nfunction isValidProfessor(name, photo, sede, correo, numeroOficina, telefono, nombre2, apellido1, apellido2, coordinador, estado) {\n    const validSedes = ['San Jose', 'Cartago', 'Limon', 'Alajuela', 'San Carlos'];\n    const hasValidName = typeof name === 'string' && name.trim() !== '' && typeof nombre2 === 'string' || nombre2 === null && typeof apellido1 === 'string' && apellido1.trim() !== '' && typeof apellido2 === 'string'  || nombre2 === null ;\n    const hasValidPhoto = typeof photo === 'string' || photo === null || photo === undefined;\n    const hasValidSede = validSedes.includes(sede);\n    const hasValidEmail = typeof correo === 'string' && correo.trim() !== '';\n    const hasValidOfficeNumber = typeof numeroOficina === \"string\";\n    const hasValidCellNumber = isValidPhoneNumber(telefono);\n    const hasValidCoordinador = typeof coordinador === \"boolean\";\n    const hasValidestado = typeof estado === \"boolean\";\n    console.log(hasValidName, hasValidPhoto, hasValidSede, hasValidEmail, hasValidOfficeNumber, hasValidCellNumber, hasValidCoordinador, hasValidestado);\n\n    return hasValidName && hasValidPhoto && hasValidSede && hasValidEmail && hasValidOfficeNumber && hasValidCellNumber && hasValidestado && hasValidCoordinador;\n    //return hasValidName && hasValidPhoto && hasValidSede && hasValidEmail && hasValidOfficeNumber && hasValidCellNumber && hasValidCoordinador && hasValidestado ;\n}\n\nfunction isValidPhoneNumber(phone) {\n    \tif (phone.length === 8){return true;} else {return false;}\n}\n\n\nasync function formatProf(name, photo, campus, correo, numeroOficina, telefono, nombre2, apellido1, apellido2, coordinador, estado, uid){\n    let codigo\n    let numOficina = numeroOficina.substring(0, 4) + '-' +numeroOficina.substring(4);\n    let teleCelular = telefono.substring(0, 4) + '-' +telefono.substring(4);\n    if(campus === \"San Jose\"){ \n\n        const counterData = await getContador('SJ'); // Adjusted to always fetch 'SJ' for demonstration\n        const newCount = 1;\n        await editContador(counterData.id, { cont: newCount }); // Pass the document ID and new count\n        codigo = `SJ-${counterData.count}`;}\n\n        // const counterData = await getContador('SJ'); // Adjusted to always fetch 'SJ' for demonstration\n        // const newCount = counterData.count + 1;\n        // await editContador(counterData.id, { cont: newCount }); // Pass the document ID and new count\n        // codigo = `SJ-${counterData.count}`;}\n        \n    else if(campus === \"Cartago\"){ \n        const counterData = await getContador('CA'); // Adjusted to always fetch 'SJ' for demonstration\n        const newCount = counterData.count + 1;\n        await editContador(counterData.id, { cont: newCount }); // Pass the document ID and new count\n        codigo = `CA-${counterData.count}`;\n    }\n    else if(campus === \"San Carlos\"){\n        const counterData = await getContador('SC'); // Adjusted to always fetch 'SJ' for demonstration\n        const newCount = counterData.count + 1;\n        await editContador(counterData.id, { cont: newCount }); // Pass the document ID and new count\n        codigo = `SC-${counterData.count}`;}\n    else if(campus === \"Alajuela\"){\n        const counterData = await getContador('AL'); // Adjusted to always fetch 'SJ' for demonstration\n        const newCount = counterData.count + 1;\n        await editContador(counterData.id, { cont: newCount }); // Pass the document ID and new count\n        codigo = `AL-${counterData.count}`;}\n    else if(campus === \"Limon\"){\n        const counterData = await getContador('LI'); // Adjusted to always fetch 'SJ' for demonstration\n        const newCount = counterData.count + 1;\n        await editContador(counterData.id, { cont: newCount }); // Pass the document ID and new count\n        codigo = `LI-${counterData.count}`;}\n    return {\n        nombre: name,\n        nombre2: nombre2,\n        apellido1: apellido1,\n        apellido2: apellido2,\n        foto: photo,\n        sede: campus,\n        email: correo,\n        numOficina: numOficina,\n        celular: teleCelular,\n        codigo: codigo,\n        coordinador: coordinador,\n        estado: estado,\n    };\n}\n\nasync function editProfesores(id, newField){\n    try{\n        updateDoc(doc(db, 'Profesores', id),newField);\n    }\n    catch(error){\n        console.error(\"Error updating Profesores: \", error);\n    }\n\n}\n\nexport const updateProfessor = async (codigoUnico, updatedData) => {\n    // Verificación inicial para asegurarse de que el código no es undefined\n    if (!codigoUnico) {\n        console.error(\"Provided 'codigoUnico' is undefined\");\n        throw new Error(\"Invalid 'codigoUnico' provided. It must not be undefined.\");\n    }\n\n    const professorsRef = collection(db, \"Profesores\");\n    const q = query(professorsRef, where(\"codigo\", \"==\", codigoUnico));\n\n    try {\n        const querySnapshot = await getDocs(q);\n        if (querySnapshot.empty) {\n            console.log(\"No matching documents found with code:\", codigoUnico);\n            throw new Error(\"No matching professor found to update\");\n        }\n\n        // Asumiendo que el código es único, solo debería haber un documento.\n        querySnapshot.forEach(async (document) => {\n            const professorRef = document.ref;\n            console.log(\"Updating professor with code:\", document.data());\n            updatedData = formatUpdateProfessor(updatedData);\n            console.log(\"New professor data:\", updatedData);\n            await updateDoc(professorRef, updatedData);\n            console.log(\"Professor updated successfully with code:\", codigoUnico);\n        });\n    } catch (error) {\n        console.error(\"Error updating professor: \", error);\n        throw new Error(\"Failed to update professor\");\n    }\n};\n\nexport const formatUpdateProfessor = (profesor) => {\n    // Divide el nombre completo en partes\n    const parts = profesor.name.split(\" \");\n\n    // Asegúrate de que hay suficientes partes para llenar los campos requeridos\n    const nombre = parts[0] || \"\"; // Primer nombre\n    const nombre2 = parts.length > 1 ? parts[1] : \"\"; // Segundo nombre, si existe\n    const apellido1 = parts.length > 2 ? parts[2] : \"\"; // Primer apellido\n    const apellido2 = parts.length > 3 ? parts[3] : \"\"; // Segundo apellido\n\n    return {\n        email: profesor.email,\n        nombre: nombre,\n        nombre2: nombre2,\n        apellido1: apellido1,\n        apellido2: apellido2,\n        celular: profesor.cellNumber,\n        numOficina: profesor.officeNumber,\n        coordinador: profesor.coordinador || false, // Asume falso si no está especificado\n        sede: profesor.location.trim() // Elimina espacios adicionales\n    };\n};\n\nexport const darBaja = async (codigoUnico) => {\n    // Verificación inicial para asegurarse de que el código no es undefined\n    if (!codigoUnico) {\n        console.error(\"Provided 'codigoUnico' is undefined\");\n        throw new Error(\"Invalid 'codigoUnico' provided. It must not be undefined.\");\n    }\n\n    const professorsRef = collection(db, \"Profesores\");\n    const q = query(professorsRef, where(\"codigo\", \"==\", codigoUnico));\n\n    try {\n        const querySnapshot = await getDocs(q);\n        if (querySnapshot.empty) {\n            console.log(\"No matching documents found with code:\", codigoUnico);\n            throw new Error(\"No matching professor found to delete\");\n        }\n\n        // Asumiendo que el código es único, solo debería haber un documento.\n        querySnapshot.forEach(async (document) => {\n            const professorRef = document.ref;\n            console.log(\"Deleting professor with code:\", document.data());\n            await updateDoc(professorRef, { estado: false });\n            console.log(\"Professor inactive successfully with code:\", codigoUnico);\n        });\n    } catch (error) {\n        console.error(\"Error deleting professor: \", error);\n        throw new Error(\"Failed to delete professor\");\n    }\n};\n\nexport const addProfessorToFirestore = async (name, photo, sede, correo, numeroOficina, telefono, nombre2, apellido1, apellido2, coordinador, estado, password) => {\n    if (isValidProfessor(name, photo, sede, correo, numeroOficina, telefono, nombre2, apellido1, apellido2, coordinador, estado)) {\n        //const professorCode = await incrementProfessorCounter(); // This ensures the code is incremented\n        try {\n            // Creación de usuario\n            const user = await createUserWithEmailAndPassword(auth, correo, password);\n            //formatted professor\n            const formatProfessor = await formatProf(name, photo, sede, correo, numeroOficina, telefono, nombre2, apellido1, apellido2, coordinador, estado);\n           // add professor to firestore\n            const docRef = doc(db, `Profesores/${user.user.uid}`);\n            setDoc(docRef, formatProfessor);\n    \n        } catch (error) {\n            console.error(\"Error adding document or creating user: \", error);\n        }\n    } else {\n        console.error(\"Invalid professor data\");\n    }\n};\n\n\nexport const getProfessors = async () => {\n    try {\n      const snapshot = await getDocs(collection(db, 'Profesores'));\n      const professorsList = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      return professorsList; // Returns an array of professors\n    } catch (error) {\n      console.error(\"Error fetching documents: \", error);\n      return []; // Returns an empty array in case of error\n    }\n  };\n\n\n  export const crearContador = async (name) => {\n        try {\n          let contador = {\n                Name: name,\n                cont: 1}\n           const docRef =  addDoc(collection (db,'Contador'),contador);\n\n\n\n            //const docRef = await db.collection('professors').add(formatProfessor);\n            console.log(\"Contador added with ID: \", (await docRef).id);\n        } catch (error) {\n            console.error(\"Error adding document: \", error);\n        }\n};\n\nexport async function getContador(name) {\n    try {\n        const snapshot = await getDocs(collection(db, 'Contador'));\n        const doc = snapshot.docs.find(doc => doc.data().Name === name);\n        return doc ? { id: doc.id, count: doc.data().cont } : null; // Returns the document ID and count if found\n    } catch (error) {\n        console.error(\"Error fetching contador: \", error);\n        return null;\n    }\n}\n\nexport async function editContador(id, newField){\n    try{\n        updateDoc(doc(db, 'Contador', id),newField);\n    }\n    catch(error){\n        console.error(\"Error updating contador: \", error);\n    }\n\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useAuth } from \"../../contexts/auth\";\nimport { Helmet } from 'react-helmet';\nimport NavBar from \"../../components/navBar/navBar\";\nimport UserCard from \"../../components/UserCard/UserCard\"; // Update this path as necessary\nimport userP from \"../../images/userPhoto.jpg\";\nimport './Historial.css';\nimport { getProfessors} from \"../../contexts/profesor\";\n\n\n\nconst Historial = () => {\n    // const { user } = useAuth();\n    // console.log(user);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    // Mock data array for users\n    const [users, setUsers] = useState([]);\n    \n\n    React.useEffect(() => {\n        const fetchAndConvertProfessors = async () => {\n            try {\n                const professors = await getProfessors();\n                const usersData = professors.map(professor => ({\n                    name: professor.nombre +\" \"+ professor.nombre2 +\" \"+ professor.apellido1 +\" \"+ professor.apellido2,\n                    imageUrl: professor.foto,\n                    location: professor.sede + \" \",\n                    code: professor.codigo, // Adjust if professor data structure has a Codigo property\n                    email: professor.email,\n                    officeNumber: professor.numOficina,\n                    cellNumber: professor.celular\n                }));\n                setUsers(usersData);\n            } catch (error) {\n                console.error(\"Error fetching professors: \", error);\n            }\n        };\n\n        fetchAndConvertProfessors();\n    }, []); // Empty dependency array to run only once on component mount\n\n\n    // Filter users based on search term\n    const filteredUsers = users.filter(user => \n        user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        user.location.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    return (\n        <>\n        <NavBar titulo=\"Historial\"/>\n        <Helmet>\n            <title >Historial - Tecnológico de Costa Rica</title>\n        </Helmet>\n        <div className = \".subtituloH\">\n                 <h1> Historial docentes asignados </h1>\n            </div>\n        <div className=\"card-container\">\n                {filteredUsers.map(user => <UserCard key={user.email} user={user} />)}\n        </div>\n        <div> \n            \n            <div className=\"search-bar-container\">\n            {/* <button className = \"groupBtn\" onClick={() => console.log('Regresar')}>Regresar</button>\n                <button className = \"groupBtn\" onClick={() => console.log('Finalizar')}>Finalizar</button> */}\n            \n                <input\n                    type=\"text\"\n                    placeholder=\"Ingrese la sede\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n                {/* <button className = \"groupBtn\" onClick={() => console.log('Buscar')}>Buscar</button> */}\n                </div>\n\n        </div>\n        </>\n    );\n};\n\nexport default Historial;","import {Navigate, Outlet} from 'react-router-dom';\nimport { useAuth } from './contexts/auth';\nimport React from 'react';\n\n\nexport const ProtectedRoute = () => {\n    const { user } = useAuth();\n    if (user === null) {\n        return <Navigate to=\"/iniciarsesion\" />;\n    }\n    return <Outlet />;\n}","import React from \"react\";\nimport { useState } from \"react\";\nimport { Helmet } from 'react-helmet';\nimport NavBar from \"../../components/navBar/navBar\";\nimport UserCard from \"../../components/UserCard/UserCard\"; // Update this path as necessary\n\nimport './equipoGuia.css';\nimport { getProfessors} from \"../../contexts/profesor\";\n\n\nconst EquipoGuia = () => {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [users, setUsers] = useState([]);\n    const [selectedLocation, setSelectedLocation] = useState('');\n\n    React.useEffect(() => {\n        const fetchAndConvertProfessors = async () => {\n            try {\n                const professors = await getProfessors();\n                const coordinators = professors.filter(professor => professor.estado === true);\n                const usersData = coordinators.map(professor => ({\n                    name: `${professor.nombre} ${professor.nombre2 || ''} ${professor.apellido1} ${professor.apellido2}`,\n                    imageUrl: professor.foto,\n                    location: professor.sede,\n                    code: professor.codigo,\n                    email: professor.email,\n                    officeNumber: professor.numOficina,\n                    cellNumber: professor.celular,\n                    coordinador: professor.coordinador // no se si esto tiene sentido o no hace nada\n                }));\n                setUsers(usersData);\n            } catch (error) {\n                console.error(\"Error fetching professors: \", error);\n            }\n        };\n    \n        fetchAndConvertProfessors();\n    }, []);\n\n    // Filter users based on selected location\n    const filteredUsers = selectedLocation ? users.filter(user => user.location === selectedLocation) : users;\n\n    return (\n        <>\n            <NavBar titulo=\"Equipo Guia\"/>\n            <Helmet>\n                <title>Equipo Guia - Tecnológico de Costa Rica</title>\n            </Helmet>\n            <div className=\".subtituloH\">\n                <h1>Equipo Guia de docentes asignados</h1>\n            </div>\n            <div className=\"dropdown-container\">\n                <select onChange={(e) => setSelectedLocation(e.target.value)} className=\"location-dropdown\">\n                    <option value=\"\">Escoge la Sede</option>\n                    <option value=\"Cartago\">Cartago</option>\n                    <option value=\"San Jose\">San Jose</option>\n                    <option value=\"Limon\">Limon</option>\n                    <option value=\"San Carlos\">San Carlos</option>\n                    <option value=\"Puntarenas\">Puntarenas</option>\n                </select>\n            </div>\n            <div className=\"card-container\">\n                {filteredUsers.map(user => <UserCard key={user.email} user={user} />)}\n            </div>\n        </>\n    );\n};\n\nexport default EquipoGuia;","import React, { useState, useEffect } from 'react';\nimport \"./EditProfesor.css\";\nimport { useAuth } from \"../../contexts/auth\";\n\nfunction EditProfessorModal({ professor, onClose, onSave }) {\n    const [formData, setFormData] = useState({\n        name: professor.name,\n        email: professor.email,\n        location: professor.location,\n        officeNumber: professor.officeNumber,\n        cellNumber: professor.cellNumber,\n        coordinador: professor.coordinador\n    });\n\n    const handleChange = (e) => {\n        const { name, value, type, checked } = e.target;\n        setFormData(prev => ({\n            ...prev,\n            [name]: type === 'checkbox' ? checked : value\n        }));\n    };\n\n    useEffect(() => {\n        setFormData({\n            name: professor.name,\n            email: professor.email,\n            location: professor.location,\n            officeNumber: professor.officeNumber,\n            cellNumber: professor.cellNumber,\n            coordinador: professor.coordinador\n        });\n    }, [professor]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            console.log('Saving changes for professor:', professor.code, formData);\n            await onSave(professor.code, formData); // Pasar el código y los nuevos datos\n            onClose(); // Cerrar modal después de guardar\n        } catch (error) {\n            console.error('Failed to update professor:', error);\n        }\n    };\n\n    const { user } = useAuth();\n    const admin = user.coordinador === undefined;\n    const cartago = user.sede === \"Cartago\";\n\n    return (\n        <div className=\"modal\">\n            <form onSubmit={handleSubmit}>\n                <label>Name:</label>\n                <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} />\n                <label>Email:</label>\n                <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\n                <label>Office Number:</label>\n                <input type=\"text\" name=\"officeNumber\" value={formData.officeNumber} onChange={handleChange} />\n                <label>Cell Number:</label>\n                <input type=\"text\" name=\"cellNumber\" value={formData.cellNumber} onChange={handleChange} />\n                {admin && cartago && (\n                    <>\n                        <label>Coordinador:</label>\n                        <input\n                            type=\"checkbox\"\n                            name=\"coordinador\"\n                            checked={formData.coordinador}\n                            onChange={handleChange}\n                        />\n                    </>\n                )}\n                <button type=\"submit\">Save Changes</button>\n                <button type=\"button\" onClick={onClose}>Cancel</button>\n            </form>\n        </div>\n    );\n}\nexport default EditProfessorModal;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport NavBar from \"../../components/navBar/navBar\";\nimport UserCard from \"../../components/UserCard/UserCard\";\nimport userP from \"../../images/userPhoto.jpg\";\nimport \"./EdicionGuia.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getProfessors, updateProfessor, darBaja } from \"../../contexts/profesor\";\nimport EditProfessorModal from \"../../components/EditProfesor/EditProfesor\";\nimport { useLocation } from \"react-router-dom\";\n\n\nconst EdicionGuia = () => {\n    const navigate = useNavigate();\n    const [users, setUsers] = useState([]);\n    const [editingUser, setEditingUser] = useState(null);\n    const location = useLocation();\n\n    useEffect(() => {\n        fetchAndConvertProfessors();\n    }, [location]); // Empty dependency array to run only once on component mount\n\n    const fetchAndConvertProfessors = async () => {\n        try {\n            const professors = await getProfessors();\n            const activeProfessors = professors.filter(professor => professor.estado === true);\n            const usersData = activeProfessors.map(professor => ({\n                name: professor.nombre +\" \"+ professor.nombre2 +\" \"+ professor.apellido1 +\" \"+ professor.apellido2,\n                imageUrl: professor.foto,\n                location: professor.sede + \" \",\n                code: professor.codigo, // Adjust if professor data structure has a Codigo property\n                email: professor.email,\n                officeNumber: professor.numOficina,\n                cellNumber: professor.celular,\n                estado: professor.estado,\n                coordinador: professor.coordinador\n            }));\n            setUsers(usersData);\n        } catch (error) {\n            console.error(\"Error fetching professors: \", error);\n        }\n    };\n\n    const handleAgregarProf = () => {\n        navigate(\"/agregarProfesor\");\n    };\n\nconst handleEdit = (user) => {\n    console.log(\"Editing user:\", user);\n    setEditingUser(user);\n};\n\nconst handleCloseModal = () => {\n    setEditingUser(null);\n};\n\nconst handleSaveChanges = async (code, updatedData) => {\n    await updateProfessor(code, updatedData);\n    fetchAndConvertProfessors();\n};\n\nconst handleBaja = async (user) => {\n    await darBaja(user.code);\n    fetchAndConvertProfessors();\n};\n\n    return (\n        <>\n            <NavBar titulo=\"Equipo Guía\" id/>\n            <Helmet>\n                <title>Equipo Guía - Tecnológico de Costa Rica</title>\n            </Helmet>\n            <div className=\"subtituloH\">\n                <h1>Docentes Asignados</h1>\n                <button className=\"add-button\" onClick={handleAgregarProf}>+</button>\n            </div>\n            <div className=\"card-container\">\n                {users.map(user => (\n                    <div className=\"user-card-wrapper\" key={user.email} style={{ marginBottom: '20px', border: '1px solid #ccc', padding: '20px', boxShadow: '0 2px 5px rgba(0, 0, 0, 0.1)' }}>\n                        <UserCard user={user} />\n                        <div className=\"pag-buttons\">\n                            <button type=\"button\" onClick={() => handleEdit(user)}>Editar</button>\n                            <button type=\"button\" onClick={() => handleBaja(user)}>Baja</button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n            {editingUser && (\n                <EditProfessorModal\n                    professor={editingUser}\n                    onClose={handleCloseModal}\n                    onSave={handleSaveChanges}\n                />\n            )}\n        </>\n    );\n};\n\nexport default EdicionGuia;","import { collection, doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase/firebase\";\n\nconst actividadesCanceladas = collection(db, 'canceledActivities');\n\nexport const addCanceledActivity = async (activityId) => {\n\n    try {\n        await setDoc(doc(actividadesCanceladas, activityId), {id: activityId});\n        console.log(`Actividad ${activityId} cancelada`);\n    } catch (error) {\n        console.error(\"Error adding canceled activity: \", error);\n    }\n};\n\n\nexport const isActivityCanceled = async (activityId) => {\n    try {\n        const docRef = doc(actividadesCanceladas, activityId);\n        const docSnap = await getDoc(docRef);\n        return docSnap.exists();\n    } catch (error) {\n        console.error(\"Error getting canceled activity: \", error);\n        return false;\n    }\n};","// firebase/sentReminders.js\nimport { collection, doc, setDoc, getDoc } from 'firebase/firestore';\nimport { db } from '../firebase/firebase';\n\nconst sentRemindersCollection = collection(db, 'sentReminders');\n\nexport const addSentReminder = async (activityId, date) => {\n    try {\n        const reminderId = `${activityId}_${date}`;\n        await setDoc(doc(sentRemindersCollection, reminderId), { activityId, date });\n        console.log(`Recordatorio para la actividad ${activityId} añadido para el día ${date}`);\n    } catch (error) {\n        console.error('Error añadiendo recordatorio enviado:', error);\n    }\n};\n\nexport const isReminderSent = async (activityId, date) => {\n    try {\n        const reminderId = `${activityId}_${date}`;\n        const docRef = doc(sentRemindersCollection, reminderId);\n        const docSnap = await getDoc(docRef);\n        return docSnap.exists();\n    } catch (error) {\n        console.error('Error comprobando recordatorio enviado:', error);\n        return false;\n    }\n};","class NotificationCenter {\n    constructor() {\n        this.observers = [];\n    }\n\n    addObserver(observer) {\n        this.observers.push(observer);\n    }\n\n    removeObserver(observer) {\n        this.observers = this.observers.filter(obs => obs !== observer);\n    }\n\n    notify(message) {\n        this.observers.forEach(observer => observer.update(message));\n    }\n}\n\nconst notificationCenter = new NotificationCenter();\nexport default notificationCenter;\n\n\n\n\n","import { doc, updateDoc,  } from 'firebase/firestore';\nimport { db } from '../firebase/firebase';\nimport { addCanceledActivity, isActivityCanceled } from '../contexts/canceledActivities';\nimport { addSentReminder, isReminderSent } from '../contexts/reminderActivities';\nimport notificationCenter from './notificationCenter';\n\nexport class Visitor {\n    visit(activity, currentDate) {\n        throw new Error('Este metodo debe implementarse');\n    }\n}\n\nexport class PublicationVisitor extends Visitor {\n    async visit(activity, currentDate) {\n        const activityDate = new Date(activity.dateTime);\n        activityDate.setDate(activityDate.getDate() - activity.daysBeforeAnnounce);\n        // console.log(`Entra al visitor de publicacion para la actividad ${activity.activityName}`);\n        // console.log(activity);\n\n        if (currentDate >= activityDate && activity.state === 'PLANEADA') {\n            const activityRef = doc(db, 'activities', activity.id);\n            await updateDoc(activityRef, { state: 'NOTIFICADA' });\n\n            activity.state = 'NOTIFICADA';\n\n            const message = \n            {\n                emisor: activity.responsibles[0],\n                fecha: currentDate.toDateString(),\n                hora: currentDate.toTimeString(),\n                contenido: `Se ha publicado la actividad ${activity.activityName}`,\n            }\n\n            notificationCenter.notify(message);\n        }\n    }\n}\n\nexport class CancelationVisitor extends Visitor {\n    async visit(activity, currentDate) {\n        if (activity.state === 'CANCELADA') {\n            const isNotified= await isActivityCanceled(activity.id);\n            if (!isNotified) {\n                await addCanceledActivity(activity.id);\n                const message = \n                {\n                    emisor: activity.responsibles[0],\n                    fecha: currentDate.toDateString(),\n                    hora: currentDate.toTimeString(),\n                    contenido: `Se ha cancelado la actividad ${activity.activityName}`,\n                }\n                notificationCenter.notify(message);\n                console.log(`Actividad ${activity.id} cancelada`);\n            } else {\n                console.log(`Actividad ${activity.id} ya ha sido avisada de su cancelacion`);\n            }\n        }\n    }\n}\n\nexport class ReminderVisitor extends Visitor {\n    async visit(activity, currentDate) {\n        const activityDate = new Date(activity.dateTime);\n        const reminderDates = [];\n\n        if (currentDate < activityDate && activity.state === 'NOTIFICADA') {\n            const amountOfReminders = Math.floor(activity.daysBeforeAnnounce / activity.reminderDays);\n            const startDate = new Date(activityDate.getTime() - (activity.daysBeforeAnnounce * 24 * 60 * 60 * 1000));\n\n            for (let i = 0; i < amountOfReminders; i++) {\n                const reminderDate = new Date(startDate.getTime() + (i * activity.reminderDays * 24 * 60 * 60 * 1000));\n                if (reminderDate <= activityDate) {\n                    reminderDates.push(reminderDate);\n                }\n            }\n\n            for (const reminderDate of reminderDates) {\n                if (currentDate.toDateString() === reminderDate.toDateString()) {\n                    const isSent = await isReminderSent(activity.id, reminderDate);\n                    if (!isSent) {\n                        await addSentReminder(activity.id, reminderDate);\n                        console.log(`Recordatorio generado para la actividad ${activity.id}`);\n\n                        const diffDays = Math.abs(activityDate - currentDate);\n                        const diffTime = Math.ceil(diffDays / (1000 * 60 * 60 * 24));\n\n\n                        const message =\n                        {\n                            emisor: activity.responsibles[0],\n                            fecha: currentDate.toDateString(),\n                            hora: currentDate.toTimeString(),\n                            contenido: `Recordatorio para la actividad ${activity.activityName}. Faltan ${diffTime-1} dias`\n                        }\n                        notificationCenter.notify(message); \n                        \n                    } else {\n                        console.log(`Recordatorio ya enviado para la actividad ${activity.id}`);\n                    }\n                }\n            }\n        }\n    }\n}\n\n","\n import { db } from \"../firebase/firebase\";\n import { setDoc, getDoc,collection, getDocs, doc, deleteDoc, query, where } from \"firebase/firestore\";\n import { auth } from \"../firebase/firebase\";\n import { crearContador, getContador, editContador } from \"./profesor.js\";\n\n\n\n\n\nexport const addMessageToFirestore = async (emisor, date, hour, content) => {\n    try {\n        const contador = await getContador('mensajeId'); // Adjusted to always fetch 'SJ' for demonstration\n\n\n        const formatomsg = {\n            id: contador.count,\n            emisor: emisor,\n            fecha: date,\n            hora: hour,\n            contenido: content,\n            estado: \"sent\"\n        };\n\n        const newCount = contador.count + 1;\n        await editContador(contador.id, { cont: newCount });\n\n        const emailEstudiantes = await getEstudiantes();\n\n        for (const estudiante of emailEstudiantes) {\n            const emailEstudiante = estudiante.email;\n            const messageStudentRef = doc(collection(db, 'messageStudent'), emailEstudiante);\n\n            const messageStudentDoc = await getDoc(messageStudentRef);\n\n            let listaMensajes = [];\n            if (messageStudentDoc.exists()) {\n                listaMensajes = messageStudentDoc.data().listamensajes || [];\n            }\n            listaMensajes = listaMensajes.filter(msg => contador.count !== msg.id);\n\n            listaMensajes.push(formatomsg);\n\n            await setDoc(messageStudentRef, { correo: emailEstudiante, listamensajes: listaMensajes });\n            console.log(\"MessageStudent updated successfully with new message\");\n        }\n    } catch (error) {\n        console.error(\"Error adding document: \", error);\n    }\n};\n\nexport const deleteReadMessages = async (email) => {\n    try {\n        const messageStudentRef = collection(db, 'messageStudent');\n        const q = query(messageStudentRef, where('correo', '==', email));\n        const querySnapshot = await getDocs(q);\n\n        querySnapshot.forEach(async (doc) => {\n            const messageStudent = doc.data();\n            const { listamensajes } = messageStudent;\n\n            const readMessages = listamensajes.filter(message => message.estado === 'visto');\n\n            for (const message of readMessages) {\n                await deleteDoc(doc.ref);\n            }\n\n            const updatedMessages = listamensajes.filter(message => message.estado !== 'visto');\n            await setDoc(doc.ref, { correo: email, listamensajes: updatedMessages });\n        });\n\n        console.log(\"Read messages deleted successfully\");\n    } catch (error) {\n        console.error(\"Error deleting read messages: \", error);\n    }\n};\n\nexport const getMessagesByEmail = async (email) => {\n    try {\n        const messageStudentRef = doc(collection(db, 'messageStudent'), email);\n\n        const messageStudentDoc = await getDoc(messageStudentRef);\n\n        if (!messageStudentDoc.exists()) {\n            console.log(\"No messages found for this email\");\n            return [];\n        }\n\n        const listaMensajes = messageStudentDoc.data().listamensajes || [];\n\n        return listaMensajes;\n    } catch (error) {\n        console.error(\"Error getting messages by email: \", error);\n        throw error; \n    }\n};\n\n\nexport const getEstudiantes = async () => {\n    try {\n        const estudiantesCollection = collection(db, 'Estudiantes');\n\n        const querySnapshot = await getDocs(query(estudiantesCollection));\n\n        const estudiantes = [];\n\n        querySnapshot.forEach((doc) => {\n            estudiantes.push({\n                email: doc.data().email\n            });\n        });\n\n        console.log(\"Estudiantes obtenidos y ordenados exitosamente:\", estudiantes);\n        return estudiantes;\n    } catch (error) {\n        console.error(\"Error al obtener y ordenar los estudiantes:\", error);\n        throw error; \n    }\n};\n\nexport const getMessagesFromFirestore = async () => {\n    try {\n        const messagesCollection = collection(db, 'message');\n        const messagesSnapshot = await getDocs(messagesCollection);\n        const messagesList = messagesSnapshot.docs.map(doc => ({\n            id: doc.id,\n            ref: doc.ref,  \n            ...doc.data()\n        }));\n        return messagesList;\n    } catch (error) {\n        console.error(\"Error getting documents: \", error);\n        throw error;\n    }\n};\n\nexport const updateMessageInFirestore = async (email, messageId) => {\n    try {\n        const messageStudentRef = doc(collection(db, 'messageStudent'), email);\n\n        const messageStudentDoc = await getDoc(messageStudentRef);\n\n        if (!messageStudentDoc.exists()) {\n            console.log(\"No messages found for this email\");\n            return;\n        }\n\n        let listaMensajes = messageStudentDoc.data().listamensajes || [];\n\n        listaMensajes = listaMensajes.map((msg) =>\n            \n            msg.id === messageId ? { ...msg, estado: 'visto' } : msg\n        );\n\n        await setDoc(messageStudentRef, { ...messageStudentDoc.data(), listamensajes: listaMensajes });\n        console.log(\"Message updated successfully\");\n    } catch (error) {\n        console.error(\"Error updating document: \", error);\n    }\n};\n\n","import { addMessageToFirestore} from '../contexts/buzon';\n\nclass ActivityObserver {\n    async update(message) {\n\n\n        console.log(`Se ha realizado la siguiente notificacion ${message}`);\n        const { emisor, fecha, hora, contenido } = message;\n        await addMessageToFirestore(emisor, fecha, hora, contenido);\n\n\n    }\n}\n\nconst activityObserver = new ActivityObserver();\nexport default activityObserver;\n\n\n","import React, { useEffect, useState } from 'react';\nimport './ActivityCard.css';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, onSnapshot } from 'firebase/firestore';\nimport { db } from '../../firebase/firebase';\nimport { PublicationVisitor, ReminderVisitor, CancelationVisitor } from '../Visitor';\nimport notificationCenter from '../notificationCenter';\nimport activityObserver from '../activityObserver';\n\n// activityInfo recibe los datos de la actividad para el componente\nconst ActivityCard = ({ activity }) => {\n\n    // activityData guarda los datos de la actividad\n    const [activityData, setActivityData] = useState(activity);\n    const FECHA_SISTEMA = new Date();\n    const navigate = useNavigate();\n    const publicationVisitor = new PublicationVisitor();\n    const reminderVisitor = new ReminderVisitor();\n    const cancelationVisitor = new CancelationVisitor();\n\n\n    // Función para manejar múltiples responsables\n    const displayResponsibles = (responsibles) => {\n        return responsibles.join(\", \");\n    };\n    \n \n\n    const handleVerEvi = (activityId) => {\n        navigate(`/verEvidencia/${activityId}`);\n    }\n\n\n    useEffect(() => {\n        const activityRef = doc(db, 'activities', activity.id);\n        const unsuscribe = onSnapshot(activityRef, (doc) => {\n            if (doc.exists()) {\n                let id = activity.id;\n                const newData = {id, ...doc.data()};\n                setActivityData(newData);\n                // Llamar a los visitantes\n                publicationVisitor.visit(newData, FECHA_SISTEMA);\n                reminderVisitor.visit(newData, FECHA_SISTEMA);\n                cancelationVisitor.visit(newData, FECHA_SISTEMA);\n\n            } else {\n                console.log(\"No such document!\");\n            }\n        }, (error) => {\n            console.error(\"Error fetching document: \", error);\n        });\n\n         // Suscribirse al observer\n         notificationCenter.addObserver(activityObserver);\n    \n        return () => { \n            notificationCenter.removeObserver(activityObserver);\n            unsuscribe();\n        }\n    }, [activity.id]);\n\n    return (\n        <div className=\"activity-card\">\n            <div className=\"activity-info\">\n                <img src={activityData.poster} alt=\"activity\" className=\"activity-image\" onClick={()=>handleVerEvi(activity.id)}/>\n                <div className=\"activity-name\">{activityData.activityName}</div>\n                <div className=\"activity-type\">{activityData.activityType}</div>\n            </div>\n            <div className=\"activity-details\">\n                <div><strong>Fecha:</strong> {new Date(activityData.dateTime).toLocaleDateString()}</div>\n                <div><strong>Hora:</strong> {new Date(activityData.dateTime).toLocaleTimeString()}</div>\n                <div><strong>Semana:</strong> {activityData.week}</div>\n                <div><strong>Docente responsable:</strong> {displayResponsibles(activityData.responsibles)}</div>\n                <div><strong>Dias antes de anunciar:</strong> {activityData.daysBeforeAnnounce}</div>\n                <div><strong>Dias recordatorio:</strong> {activityData.reminderDays}</div>\n                <div><strong>Modalidad:</strong> {activityData.modality}</div>\n                <div><strong>Enlace:</strong> {activityData.modality === \"Remota\" ? <a href={activityData.link} target=\"_blank\">Link</a> : \"N/A\"}</div>\n                <div><strong>Estado:</strong> {activityData.state}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default ActivityCard;","import React, { useState, useContext, useEffect, createContext } from \"react\";\nimport { getStorage, ref, uploadBytes } from \"firebase/storage\";\nimport { db } from \"../firebase/firebase\";\nimport { collection, addDoc, query, where, getDocs, getFirestore, serverTimestamp, orderBy } from \"firebase/firestore\";\n\n\n\n\nexport const guardarComentario = async (emailUsuario, texto, actividad) => {\n    try {\n        const comentariosCollection = collection(db, 'comentarios');\n\n        const docRef = await addDoc(comentariosCollection, {\n            emailUsuario: emailUsuario,\n            texto: texto,\n            actividad: actividad,\n            fecha: serverTimestamp()\n        });\n\n        console.log(\"Comentario guardado exitosamente:\", docRef);\n        return docRef.id;\n    } catch (error) {\n        console.error(\"Error al guardar el comentario:\", error);\n        throw error;\n    }\n};\n\n\n\n\n\nexport const obtenerComentariosPorActividad = async (idActividad) => {\n    try {\n        const comentariosCollection = collection(db, 'comentarios');\n\n        const querySnapshot = await getDocs(query(comentariosCollection, where(\"actividad\", \"==\", idActividad)));\n\n        //console.log(\"querySnap: \", querySnapshot);\n\n        const comentarios = [];\n        querySnapshot.forEach((doc) => {\n            //console.log(doc.metadata.createTime.toDate());\n            comentarios.push({\n                id: doc.id,\n                emailUsuario: doc.data().emailUsuario,\n                texto: doc.data().texto,\n                actividad: doc.data().actividad, \n                fecha: doc.data().fecha\n            });\n        });\n\n        comentarios.sort((a, b) => a.fecha - b.fecha);\n\n        console.log(\"Comentarios obtenidos exitosamente:\", comentarios);\n        return comentarios;\n    }\n    catch(error) {\n        console.error(\"Error al obtener los comentarios del usuario:\", error);\n        throw error;\n    }\n};","import React, { useState } from 'react';\nimport { Form, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { storage , db } from '../../firebase/firebase';\nimport \"./RegisterActivity.css\";\nimport { ref } from 'firebase/storage';\nimport { uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { doc, updateDoc,  } from 'firebase/firestore';\n\nfunction UploadActivityImagesModal({ activity, onClose }) {\n    const [images, setImages] = useState([]);\n    const [link, setLink] = useState('');\n    const [uploadProgress, setUploadProgress] = useState(0);\n    const [uploading, setUploading] = useState(false);\n\n    const handleImageChange = (event) => {\n        if (event.target.files && event.target.files.length > 5) {\n            alert(\"You can only upload up to 5 images.\");\n            return;\n        }\n        if (event.target.files && event.target.files.length > 0) {\n            setImages(event.target.files);\n        }\n    };\n\n    const handleLinkChange = (event) => {\n        setLink(event.target.value);\n    };\n\n    const handleUpload = async () => {\n        setUploading(true);\n        const promises = [];\n        const urls = [];\n    \n        Array.from(images).forEach((image, index) => {\n            const imageRef = ref(storage, `evidences/${activity.id}/${image.name}`);\n            const uploadTask = uploadBytesResumable(imageRef, image);\n    \n            promises.push(\n                new Promise((resolve, reject) => {\n                    uploadTask.on(\n                        'state_changed',\n                        (snapshot) => {\n                            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                            console.log('Upload is ' + progress + '% done');\n                            setUploadProgress(progress); // Actualizar el progreso de carga\n                        },\n                        (error) => {\n                            console.error(\"Error uploading file:\", error);\n                            reject(error); // Rechazar la promesa en caso de error\n                            setUploading(false);\n                        },\n                        async () => {\n                            const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);\n                            console.log(`File available at ${downloadURL}`);\n                            urls.push(downloadURL); // Agregar URL al arreglo de URLs\n                            resolve(downloadURL); // Resolver la promesa con la URL\n                        }\n                    );\n                })\n            );\n        });\n    \n        try {\n            await Promise.all(promises);\n            console.log('All files uploaded');\n            console.log(activity);\n            // Actualizar el documento de la actividad en Firestore con las URLs de las imágenes\n            const activityRef = doc(db, 'activities', activity.id);\n            await updateDoc(activityRef, {\n                imageUrls: urls, // Guardar las URLs de las imágenes subidas\n                link: link, // Guardar el enlace de la grabación\n                state: \"REALIZADA\"\n            });\n            console.log('Activity updated with image URLs');\n            onClose(); // Cerrar modal después de la carga\n        } catch (error) {\n            console.error('Error while uploading:', error);\n            alert(\"Error al subir imágenes. Por favor, intenta de nuevo.\");\n        } finally {\n            setUploading(false);\n        }\n    };\n\n    return (\n        <div className=\"modal\">\n            <Form>\n                <Form.Group className=\"input-control\">\n                    <Form.Label>Upload Images</Form.Label>\n                    <InputGroup>\n                        <FormControl\n                            type=\"file\"\n                            multiple\n                            accept=\"image/*\"\n                            onChange={handleImageChange}\n                        />\n                    </InputGroup>\n                </Form.Group>\n\n                {activity.modality === \"Remota\" && (\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Recording Link</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                                type=\"text\"\n                                placeholder=\"Enter recording link\"\n                                value={link}\n                                onChange={handleLinkChange}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                )}\n\n                <Button className=\"Button\" variant=\"primary\" onClick={handleUpload} disabled={uploading}>\n                    {uploading ? `Uploading (${uploadProgress.toFixed(2)}%)` : \"Upload\"}\n                </Button>\n                <Button className=\"Button\" variant=\"secondary\" onClick={onClose}>\n                    Cancel\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default UploadActivityImagesModal;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport \"./EditActivity.css\";\n\nfunction EditActivityModal({ activity, onClose, onSave }) {\n    const [formData, setFormData] = useState({\n        activityName: activity.activityName,\n        activityType: activity.activityType,\n        dateTime: activity.dateTime,\n        week: activity.week,\n        responsibles: activity.responsibles,\n        daysBeforeAnnounce: activity.daysBeforeAnnounce,\n        reminderDays: activity.reminderDays,\n        modality: activity.modality,\n        link: activity.link,\n        poster: activity.poster,\n        state: activity.state,\n        justification: activity.justification || ''\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({ ...prev, [name]: value }));\n    };\n\n    function formatDate(isoString) {\n        const date = new Date(isoString);\n        const year = date.getFullYear();\n        const month = `${date.getMonth() + 1}`.padStart(2, '0');\n        const day = `${date.getDate()}`.padStart(2, '0');\n        const hour = `${date.getHours()}`.padStart(2, '0');\n        const minute = `${date.getMinutes()}`.padStart(2, '0');\n        return `${year}-${month}-${day}T${hour}:${minute}`;\n    }\n\n    useEffect(() => {\n        setFormData({\n            activityName: activity.activityName,\n            activityType: activity.activityType,\n            dateTime: formatDate(activity.dateTime),\n            week: activity.week,\n            responsibles: activity.responsibles,\n            daysBeforeAnnounce: activity.daysBeforeAnnounce,\n            reminderDays: activity.reminderDays,\n            modality: activity.modality,\n            link: activity.link,\n            poster: activity.poster,\n            state: activity.state,\n            justification: activity.justification || ''\n        });\n    }, [activity]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            // cambiar el id, no existe en la base de datos\n            console.log('Saving changes for activity:', activity.id, formData);\n            await onSave(activity.id, formData); // Pass the activity ID and new data\n            onClose(); // Close modal after saving\n        } catch (error) {\n            console.error('Failed to update activity:', error);\n        }\n    };\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-content\">\n                <Form id=\"form\" onSubmit={handleSubmit}>\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Nombre de la actividad</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                                type=\"text\"\n                                name=\"activityName\"\n                                placeholder=\"Enter the name of the activity\"\n                                value={formData.activityName}\n                                onChange={handleChange}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Tipo de actividad</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                                as=\"select\"\n                                name=\"activityType\"\n                                value={formData.activityType}\n                                onChange={handleChange}\n                            >\n                                <option value=\"\">Selecciona un tipo de actividad</option>\n                                <option value=\"Orientadora\">Orientadora</option>\n                                <option value=\"Motivacional\">Motivacional</option>\n                                <option value=\"Apoyo a la vida estudiantil\">Apoyo a la vida estudiantil</option>\n                                <option value=\"Orden tecnico\">Orden tecnico</option>\n                                <option value=\"Recreacion\">Recreacion</option>\n                            </FormControl>\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Fecha y hora</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                                type=\"datetime-local\"\n                                name=\"dateTime\"\n                                value={formData.dateTime}\n                                onChange={handleChange}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Semana</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                                type=\"number\"\n                                name=\"week\"\n                                min=\"1\"\n                                max=\"16\"\n                                placeholder=\"Semana del semestre\"\n                                value={formData.week}\n                                onChange={handleChange}\n                            />\n                        </InputGroup>\n                        <Form.Text className=\"text-muted\">\n                            Semana del semestre en la que se realizará la actividad.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Responsables</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                                type=\"text\"\n                                name=\"responsibles\"\n                                placeholder=\"Responsables\"\n                                value={formData.responsibles}\n                                onChange={handleChange}\n                            />\n                        </InputGroup>\n                        <Form.Text className=\"text-muted\">\n                            Ingrese los nombres de los responsables separados por comas.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Días antes de anunciar</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                                type=\"number\"\n                                name=\"daysBeforeAnnounce\"\n                                placeholder=\"Días antes de anunciar\"\n                                value={formData.daysBeforeAnnounce}\n                                onChange={handleChange}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Días de recordatorio</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                                type=\"number\"\n                                name=\"reminderDays\"\n                                placeholder=\"Días de recordatorio\"\n                                value={formData.reminderDays}\n                                onChange={handleChange}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Modalidad</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                                as=\"select\"\n                                name=\"modality\"\n                                value={formData.modality}\n                                onChange={handleChange}\n                            >\n                                <option value=\"\">Seleccione una modalidad</option>\n                                <option value=\"Presencial\">Presencial</option>\n                                <option value=\"Remota\">Remoto</option>\n                            </FormControl>\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Link</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                                type=\"text\"\n                                name=\"link\"\n                                placeholder=\"Enter link if remote\"\n                                value={formData.link}\n                                disabled={formData.modality !== 'Remota'}\n                                readOnly={formData.modality !== 'Remota'}\n                                onChange={handleChange}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Estado</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                                as=\"select\"\n                                name=\"state\"\n                                value={formData.state}\n                                onChange={handleChange}\n                            >\n                                <option value=\"\">Seleccione un estado</option>\n                                <option value=\"Planeada\">Planeada</option>\n                                <option value=\"Cancelada\">Cancelada</option>\n                            </FormControl>\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Justificación por cambio</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                                as=\"textarea\"\n                                name=\"justification\"\n                                placeholder=\"Justifcacion\"\n                                value={formData.justification}\n                                onChange={handleChange}\n                            />\n                        </InputGroup>\n                        <Form.Text className=\"text-muted\">\n                            Por favor brinde una justificación si el estado de la actividad cambia.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Button className=\"Button\" variant=\"primary\" type=\"submit\">\n                        Guardar cambios\n                    </Button>\n                    <Button className=\"Button\" variant=\"secondary\" type=\"button\" onClick={onClose}>\n                        Cancelar\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    );\n}\n\nexport default EditActivityModal;","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport NavBar from \"../../components/navBar/navBar\";\nimport ActivityCard from \"../../components/ActivityCard/ActivityCard\";\nimport \"./PlanTrabajoGuia.css\";\nimport \"../../components/ActivityCard/ActivityCard\";\nimport userP from \"../../images/userPhoto.jpg\";\nimport { useAuth } from \"../../contexts/auth\";\n//import { Modal } from \"react-bootstrap\";\nimport { db } from \"../../firebase/firebase\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { Modal , Button } from \"react-bootstrap\";\nimport {guardarComentario, obtenerComentariosPorActividad} from \"../../contexts/comentario\";\nimport UploadActivityImagesModal from \"../../components/RegisterActivity/RegisterActivity\";\nimport EditActivityModal from \"../../components/EditActivity/EditActivity\";\nimport notificationCenter from '../../components/notificationCenter';\nimport activityObserver from '../../components/activityObserver';\n\n\n\nconst PlanTrabajoGuia = () => {\n    const { user } = useAuth();\n    const [showModal, setShowModal] = useState(false);\n    const [activities, setActivities] = useState([]); \n    const [IndexActivity, setIndexActivity] = useState(0); \n    const navigate = useNavigate();\n    const [editingActivity, setEditingActivity] = useState(null);\n    const [editeActivity, setEditActivity] = useState(null);\n    const [showUploadModal, setShowUploadModal] = useState(false);\n    const [showEditModal, setShowEditModal] = useState(false);\n\n    const handleOnClick = () => {\n        window.history.back();\n    };\n\n    const handleShowModal = (index) => {\n        console.log(activities[index].id);\n        obtenerComentariosPorActividad(activities[index].id)\n            .then(comentarios => {\n                setComentarios(comentarios);\n                setShowModal(true);\n            })\n            .catch (error => {\n                setShowModal(true);\n                console.error(\"No hay comentarios\");\n            });\n    };\n\n    const handleShowModal2 = () => {\n        console.log(activities[IndexActivity].id);\n        obtenerComentariosPorActividad(activities[IndexActivity].id)\n            .then(comentarios => {\n                setComentarios(comentarios);\n                setShowModal(true);\n            })\n            .catch (error => {\n                setShowModal(true);\n                console.error(\"No hay comentarios\");\n            });\n    };\n\n    const handleResponder = (emailUsuario) => {\n        setComentarioNuevo(`@${emailUsuario} `);\n        setShowModal(true);\n    };\n\n    const highlightEmails = (text) => {\n        const emailRegex = /@[\\w.-]+/g;\n        const matches = text.match(emailRegex);\n        if (!matches) return text;\n    \n        return text.split(emailRegex).map((part, index) => (\n            <React.Fragment key={index}>\n                {part}\n                {index < matches.length && <span className=\"email-highlight\">{matches[index]}</span>}\n            </React.Fragment>\n        ));\n    };\n\n    const handleCloseModal = () => {\n        setShowModal(false);\n    };\n\n    const addActivity = () => {\n        navigate(\"/agregarActividad\");\n    };\n\n\n    useEffect(() => {\n         \n\n         fetchActivities();\n    }, []);\n\n    const fetchActivities = async () => {\n        try { \n            const snapshot = await getDocs(collection(db, \"activities\"));\n            const activitiesData = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data()}));\n            setActivities(activitiesData);\n            console.log(activitiesData);\n        } catch (error) {\n            console.error(\"Error fetching activities:\", error);\n        }\n    };\n    //const comentarios = [\"Comentario 1\", \"Comentario 2\", \"Comentario 3\"];\n\n    const [comentarioNuevo, setComentarioNuevo] = useState(\"\");\n    const [comentarios, setComentarios] = useState([]);\n\n    const handleOnChangeComentario = (event) => {\n        setComentarioNuevo(event.target.value);\n    };\n\n    const handlePublicarComentario = async () => {\n        try {\n            const userMail = user.email;\n            //console.log(\"Valor de idUsuario:\", userMail);\n\n            await guardarComentario(userMail, comentarioNuevo, activities[IndexActivity].id);\n\n            //setComentarios([...comentarios, comentario]);\n\n            setComentarioNuevo(\"\");\n            \n            handleShowModal2();\n            //setShowModal(false);\n        } catch (error) {\n            console.error(\"Error al publicar comentario:\", error);\n        }\n    };\n\n    const handleEdit = (activity) => {\n        console.log(\"Editing activity:\", activity);\n        setEditingActivity(activity);\n        setShowUploadModal(true);\n    };\n\n    const handleCloseUploadModal = () => {\n        setShowUploadModal(false);\n    };\n\n    const handleEditAct = (activity) => {\n        console.log(\"Editing activity:\", activity);\n\n        setEditActivity(activity);\n        setShowEditModal(true);\n\n    };\n\n    const handleSaveChanges = async (activityId, formData) => {\n        const activityRef = doc(db, \"activities\", activityId);\n        try {\n            await updateDoc(activityRef, formData);\n            console.log(\"Activity updated successfully!\");\n            setShowEditModal(false); \n        } catch (error) {\n            console.error(\"Error updating activity:\", error);\n            alert(\"Failed to update activity.\");\n        }\n        fetchActivities();\n    };\n\n\n    return (\n        <>\n            <NavBar titulo=\"Plan de Trabajo\" id=\"navBar\" />\n            <Helmet>\n                <title>Plan de Trabajo - Tecnológico de Costa Rica</title>\n            </Helmet>\n            <div className=\"subtituloH\">\n                <h1>Lista de trabajos existentes</h1>\n                {user.coordinador && (\n                    <button className=\"add-button\" onClick={addActivity}>+</button>\n                )} \n            </div>\n                \n            <div className=\"PlanTrabajoGuia\">\n                {activities.map((activity, index) => (\n                    <div key={index} className=\"activity-full-container\">\n                        <ActivityCard activity={activity} />\n                        <div className=\"activity-buttons\">\n                            {user.coordinador &&(\n                            <>\n                                <button type=\"button\" onClick={() => handleEdit(activity)}>Registrar Evidencia</button>\n                                \n                                <button type=\"button\" onClick={() => handleEditAct(activity)}>Editar Actividad</button>\n                            </>\n                            )}\n                            <button type=\"button\" onClick={() => {handleShowModal(index); setIndexActivity(index);}}>Comentarios</button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            {showModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <span className=\"close\" onClick={handleCloseModal}>&times;</span>\n                        <h2>Comentarios</h2>\n                        <div className=\"comentarios-lista\">\n                            {comentarios.map((comentario, index) => (\n                                <div key={index} className=\"comentario\">\n                                    <p>Usuario: <span className=\"email-highlight\">{comentario.emailUsuario}</span></p>\n                                    <p>Comentario: {highlightEmails(comentario.texto)}</p>\n                                    <button className=\"responder\" onClick={() => handleResponder(comentario.emailUsuario)}>Responder</button>\n                                </div>\n                            ))}\n                        </div>\n                        <div className=\"comentario-nuevo\">\n                            <textarea value={comentarioNuevo} onChange={handleOnChangeComentario} placeholder=\"Escribe tu comentario aquí...\" />\n                            <button onClick={handlePublicarComentario}>Publicar</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {showUploadModal && (\n                <UploadActivityImagesModal activity={editingActivity} onClose={handleCloseUploadModal}/>\n            )}                \n            {showEditModal && (\n                <EditActivityModal\n                    activity={editeActivity}\n                    onClose={() => setShowEditModal(false)}\n                    onSave={handleSaveChanges}\n                />\n            )}\n\n                \n            <div className=\"page-buttons\">\n                <button type=\"button\" onClick={handleOnClick}>Regresar</button>\n            </div>\n        </>\n    );\n};\n\nexport default PlanTrabajoGuia;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Helmet } from 'react-helmet';\nimport NavBar from \"../../components/navBar/navBar\";\nimport './ListaDeEstudiantes.css';\nimport * as XLSX from 'xlsx';\nimport { uploadEstudiantesSede, obtenerExcel, obtenerTodosLosExcels } from \"../../contexts/excel\";\nimport { useAuth } from \"../../contexts/auth\";\n\nconst ListaDeEstudiantes = () => {\n    const { user } = useAuth();\n    const [excelData, setExcelData] = useState([[]]); // Inicializar con una hoja de Excel vacía\n    const [excelButton2Text, setExcelButton2Text] = useState('Cambiar Excel');\n    const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n    const [estadoAlerta, setEstadoAlerta] = useState(false);\n    const [mensaje, setMensaje] = useState({});\n    const boton2Ref = useRef(null);\n    const boton3Ref = useRef(null);\n    const boton4Ref = useRef(null);\n    const [isButton2Active, setIsButton2Active] = useState(false);\n    const [showSuccessModal, setShowSuccessModal] = useState(false); // Estado para controlar la visibilidad del modal\n\n    useEffect(() => {\n        obtenerExcel(user.sede)\n            .then(archivos => {\n                console.log(archivos);\n                cargarArchivoPredeterminado(archivos);\n            })\n            .catch(error => {\n                console.error(\"Error al cargar los archivos:\", error);\n                setEstadoAlerta(true);\n                setMensaje({ tipo: 'error', mensaje: 'No se pudo cargar los archivos' });\n            });\n    }, [user.sede]);\n\n    const cargarArchivoPredeterminado = (archivo) => {\n        const reader = new FileReader();\n\n        reader.onload = function (event) {\n            const data = new Uint8Array(event.target.result);\n            const workbook = XLSX.read(data, { type: 'array' });\n\n            // Obtener la primera hoja de cálculo\n            const sheetName = workbook.SheetNames[0];\n            const sheet = workbook.Sheets[sheetName];\n\n            // Convertir la hoja de cálculo a JSON\n            const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n\n            // Almacena los datos del Excel en el estado\n            setExcelData(jsonData);\n        };\n\n        reader.readAsArrayBuffer(archivo);\n    }\n\n    const handleFileSelect = (event) => {\n        const file = event.target.files[0];\n        cargarArchivoPredeterminado(file);\n    }\n\n    const upload = async () => {\n        try {\n            const fileInput = document.getElementById('excelFileInput');\n            if (fileInput.files.length === 0) {\n                console.log(\"No se ha seleccionado ningún archivo.\");\n                return; // Salir de la función si no hay ningún archivo seleccionado\n            }\n            const file = fileInput.files[0]; // Obtener el primer archivo seleccionado\n            console.log(user.sede);\n            // Leer el archivo Excel\n            const reader = new FileReader();\n            reader.onload = async (e) => {\n                const data = new Uint8Array(e.target.result);\n                const workbook = XLSX.read(data, { type: 'array' });\n                \n                // Asumir que queremos leer la primera hoja del libro\n                const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n                \n                // Convertir la hoja a un array de objetos JSON\n                const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n\n                // Guardar los datos de cada columna en arrays separados\n                const columns = [[], [], [], [], [], []]; // Asumimos que hay 5 columnas\n                jsonData.forEach(row => {\n                    for (let i = 0; i < columns.length; i++) {\n                        if (row[i] !== undefined) {\n                            columns[i].push(row[i]);\n                        }\n                    }\n                });\n\n                console.log(columns); // Verificar que los datos de las columnas están correctos\n                \n                // Llamar a la función asíncrona con los datos de las columnas\n                await uploadEstudiantesSede(columns, user.sede);\n\n                // Mostrar modal de éxito\n                setShowSuccessModal(true);\n\n                toggleButton2();\n            };\n            reader.readAsArrayBuffer(file);\n        } catch (error) {\n            console.error(\"Error en subir archivo:\", error);\n            setEstadoAlerta(true);\n            setMensaje({ tipo: 'error', mensaje: 'No se pudo iniciar sesión' });\n        }\n    }\n\n    const toggleButton2 = () => {\n        setIsButtonDisabled(!isButtonDisabled);\n        if (isButton2Active) {\n            boton2Ref.current.disabled = true;\n            boton3Ref.current.disabled = true;\n            boton4Ref.current.disabled = true;\n            setExcelButton2Text('Cambiar Excel');\n        } else {\n            boton2Ref.current.disabled = false;\n            boton3Ref.current.disabled = false;\n            boton4Ref.current.disabled = false;\n            setExcelButton2Text('Cancelar');\n        }\n        setIsButton2Active(!isButton2Active);\n    };\n\n    const generateAlphabet = () => {\n        const alphabet = [];\n        for (let i = 65; i <= 90; i++) {\n            alphabet.push(String.fromCharCode(i));\n        }\n        return alphabet;\n    }\n\n    return (\n        <>\n            <NavBar titulo=\"Lista De Estudiantes\" />\n            <Helmet>\n                <title>Lista De Estudiantes - Tecnológico de Costa Rica</title>\n            </Helmet>\n            <div className=\"subtituloH\">\n                <h1>Lista de Estudiantes de la sede del TEC</h1>\n            </div>\n            <label className=\"file-label\" ref={boton4Ref} htmlFor=\"excelFileInput\" disabled>Subir archivo</label>\n            <input className=\"file\" type=\"file\" id=\"excelFileInput\" ref={boton3Ref} accept=\".xlsx, .xls\" onChange={handleFileSelect} disabled />\n\n            <div className=\"excelDataContainer\">\n                <div className=\"tableWrapper\">\n                    <table className=\"excelTable\">\n                        <tbody>\n                            {/* Encabezado de columna */}\n                            <tr>\n                                <td className=\"indexCell\"></td> {/* Celda en blanco para el índice de fila */}\n                                {excelData.length > 0 && excelData[0].map((_, index) => (\n                                    <td key={index} className=\"indexCell\">{generateAlphabet()[index]}</td>\n                                ))}\n                            </tr>\n                            {/* Contenido de la tabla */}\n                            {[...Array(excelData.length).keys()].map(rowIndex => (\n                                <tr key={rowIndex}>\n                                    <td className=\"indexCell\">{rowIndex + 1}</td> {/* Índice de fila */}\n                                    {excelData[rowIndex].map((cell, cellIndex) => (\n                                        <td key={cellIndex}>{cell}</td>\n                                    ))}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <button ref={boton2Ref} className=\"excel-button\" onClick={upload} disabled={isButtonDisabled}>Guardar Excel</button>\n            <button className=\"excel-button2\" onClick={toggleButton2}>{excelButton2Text}</button>\n\n            {/* Modal de éxito */}\n            {showSuccessModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <span className=\"close\" onClick={() => setShowSuccessModal(false)}>&times;</span>\n                        <div className=\"alert alert-success\" role=\"alert\">\n                            El archivo se ha cargado correctamente.\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default ListaDeEstudiantes;\n","import React, { useState, useContext, useEffect, createContext } from \"react\";\nimport { auth, db, storage } from \"../firebase/firebase\";\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { collection, addDoc, query, where, getDocs, getFirestore, updateDoc} from \"firebase/firestore\";\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\n\n\n\nexport const uploadFileAndSaveReference = async (file, nameSede) => {\n    try {\n        // Obtener una referencia al Storage service\n        const storage = getStorage();\n        console.log(file.name);\n\n        // Crear una referencia a la ubicación donde se almacenará el archivo\n        const fileRef = ref(storage, `/excel/${nameSede}.xlsx`);\n\n        // Subir el archivo\n        await uploadBytes(fileRef, file);\n\n        // Obtener una referencia a la colección en Firestore\n        const archivosCollection = collection(db, 'archivos');\n\n        // Buscar si ya existe un documento con la misma sede\n        const querySnapshot = await getDocs(query(collection(db, 'archivos'), where('sede', '==', nameSede)));\n\n\n        if (!querySnapshot.empty) {\n            // Si ya existe un documento con la misma sede, actualizarlo\n            const docSnapshot = querySnapshot.docs[0]; // Suponiendo que solo habrá uno\n            await updateDoc(docSnapshot.ref, {\n                archivoRef: `/excel/${nameSede}.xlsx`\n            });\n            return docSnapshot.ref;\n        } else {\n            // Si no existe un documento con la misma sede, agregar uno nuevo\n            const docRef = await addDoc(archivosCollection, {\n                sede: nameSede,\n                archivoRef: `/excel/${nameSede}.xlsx`\n            });\n            return docRef;\n        }\n\n    } catch (error) {\n        console.error(\"Error al subir el archivo:\", error);\n        throw error; // Propagar el error para que sea manejado por el código que llama a esta función\n    }\n};\n\nexport const obtenerEstudiantes = async () => {\n    try {\n        // Obtener una referencia a la colección de estudiantes en Firestore\n        const estudiantesCollection = collection(db, 'Estudiantes');\n\n        // Consultar los documentos de la colección\n        const querySnapshot = await getDocs(query(estudiantesCollection));\n\n        // Crear un array para almacenar los estudiantes\n        const estudiantes = [];\n\n        // Iterar sobre los documentos y agregar los datos de cada estudiante al array\n        querySnapshot.forEach((doc) => {\n            estudiantes.push({\n                nombre: doc.data().nombre,\n                apellido1: doc.data().apellido1,\n                apellido2: doc.data().apellido2,\n                email: doc.data().email,\n                celular: doc.data().celular,\n                sede: doc.data().sede // Asegúrate de que este campo exista en tus documentos\n                // Agrega más campos si es necesario\n            });\n        });\n\n        // Ordenar los estudiantes por la sede\n        estudiantes.sort((a, b) => {\n            if (a.sede < b.sede) return -1;\n            if (a.sede > b.sede) return 1;\n            return 0;\n        });\n\n        console.log(\"Estudiantes obtenidos y ordenados exitosamente:\", estudiantes);\n        return estudiantes;\n    } catch (error) {\n        console.error(\"Error al obtener y ordenar los estudiantes:\", error);\n        throw error; // Propagar el error para que sea manejado por el código que llama a esta función\n    }\n};\n\nexport const obtenerEstudiantesPorSede = async (namesede) => {\n    try {\n        // Obtener una referencia a la colección de estudiantes en Firestore\n        const estudiantesCollection = collection(db, 'Estudiantes');\n\n        // Consultar los documentos de la colección\n        const querySnapshot = await getDocs(query(estudiantesCollection, where(\"sede\", \"==\", namesede)));\n\n        // Crear un array para almacenar los estudiantes\n        const estudiantes = [];\n\n        // Iterar sobre los documentos y agregar los datos de cada estudiante al array\n        querySnapshot.forEach((doc) => {\n            estudiantes.push({\n                nombre: doc.data().nombre,\n                apellido1: doc.data().apellido1,\n                apellido2: doc.data().apellido2,\n                email: doc.data().email,\n                celular: doc.data().celular,\n                sede: doc.data().sede // Asegúrate de que este campo exista en tus documentos\n                // Agrega más campos si es necesario\n            });\n        });\n\n        // Ordenar los estudiantes por la sede\n        estudiantes.sort((a, b) => {\n            if (a.sede < b.sede) return -1;\n            if (a.sede > b.sede) return 1;\n            return 0;\n        });\n\n        console.log(\"Estudiantes obtenidos y ordenados exitosamente:\", estudiantes);\n        return estudiantes;\n    } catch (error) {\n        console.error(\"Error al obtener y ordenar los estudiantes:\", error);\n        throw error; // Propagar el error para que sea manejado por el código que llama a esta función\n    }\n};\n\nexport const uploadEstudiantesSede = async (columns, nameSede) => { \n    try {\n        // Obtener una referencia a la colección en Firestore\n        \n\n        // Iterar sobre los datos de las columnas para subir cada estudiante\n        for (let i = 0; i < columns[0].length; i++) {\n            const nombre = columns[0][i];\n            const apellido1 = columns[1][i];\n            const apellido2 = columns[2][i];\n            const correo = columns[3][i]; // Asumiendo que hay un tercer dato\n            const celular = columns[4][i];\n            const password = columns[5][i];\n\n\n            // Verificar si el correo ya existe en la base de datos\n            //const querySnapshot = await getDocs(query(estudiantesCollection, where('correo', '==', correo)));\n\n            /*\n            if (!querySnapshot.empty) {\n                console.log(`El correo ${correo} ya existe en la base de datos. No se subirá este estudiante.`);\n                continue; // Saltar al siguiente estudiante\n            }\n            */\n\n            const infouser = await createUserWithEmailAndPassword(auth, correo, password).then((userCredential) => {\n                return userCredential;\n            });\n            const user = infouser.user;\n\n            const docuRef = doc(db, `Estudiantes/${user.uid}`);\n\n            // Agregar el nuevo estudiante si el correo no existe\n            setDoc(docuRef, {\n                nombre: nombre,\n                apellido1: apellido1,\n                apellido2: apellido2,\n                email: correo,\n                password: password,\n                celular: celular,\n                sede: nameSede,\n                foto : \"\"\n            });\n\n            console.log(\"Documento agregado con ID: \", docuRef);\n        }\n\n        return true;\n    } catch (error) {\n        console.error(\"Error al subir el archivo:\", error);\n        throw error; // Propagar el error para que sea manejado por el código que llama a esta función\n    }\n}\n\n\n\nexport const obtenerExcel = async (nameSede) => {\n    try {\n        // Obtener una referencia a la colección en Firestore\n        const archivosCollection = collection(db, 'archivos');\n\n        // Consultar los documentos donde el campo 'sede' sea igual al nombre de la sede\n        const querySnapshot = await getDocs(query(archivosCollection, where(\"sede\", \"==\", nameSede)));\n\n        // Obtener los datos del primer documento encontrado\n        let archivo = null;\n        querySnapshot.forEach((doc) => {\n            archivo = {\n                archivoRef: doc.data().archivoRef,\n                sede: doc.data().sede\n            };\n            // Solo necesitamos el primero, así que salimos del bucle después de encontrar uno\n            return;\n        });\n        if (!archivo) {\n            throw new Error(\"No se encontraron archivos para la sede especificada.\");\n        }\n        const storage = getStorage();\n        const fileRef = ref(storage, archivo.archivoRef);\n        const fileUrl = await getDownloadURL(fileRef);\n\n        // Descargar el archivo y retornarlo como un objeto File\n        const response = await fetch(fileUrl);\n        const blob = await response.blob();\n        const file = new File([blob], archivo.archivoRef);\n\n        console.log(\"Archivo descargado exitosamente:\", file);\n        return file;\n    } catch (error) {\n        console.error(\"Error al cargar los archivos:\", error);\n        //throw error; // Propagar el error para que sea manejado por el código que llama a esta función\n    }\n};\n\n\nexport const obtenerTodosLosExcels = async () => {\n    try {\n        // Obtener una referencia a la colección en Firestore\n        const archivosCollection = collection(db, 'archivos');\n\n        // Obtener todos los documentos de la colección\n        const querySnapshot = await getDocs(archivosCollection);\n\n        // Obtener los datos de los documentos y devolverlos\n        const archivos = [];\n        for (const doc of querySnapshot.docs) {\n            const archivo = {\n                archivoRef: doc.data().archivoRef,\n                sede: doc.data().sede\n            };\n            archivos.push(archivo);\n        }\n\n        // Descargar todos los archivos y retornarlos como objetos File\n        const storage = getStorage();\n        const archivosDescargados = await Promise.all(archivos.map(async (archivo) => {\n            const fileRef = ref(storage, archivo.archivoRef);\n            const fileUrl = await getDownloadURL(fileRef);\n            const response = await fetch(fileUrl);\n            const blob = await response.blob();\n            return new File([blob], archivo.archivoRef);\n        }));\n\n        console.log(\"Archivos descargados exitosamente:\", archivosDescargados);\n        return archivosDescargados;\n    } catch (error) {\n        console.error(\"Error al obtener todos los archivos:\", error);\n        //throw error; // Propagar el error para que sea manejado por el código que llama a esta función\n    }\n};\n\nexport const updateUserData = async (profileData) => {\n    try {\n        console.log(profileData);\n        const collections = ['Admins', 'Profesores', 'Estudiantes'];\n        let updated = false;\n\n        const filteredProfileData = { ...profileData }; // Copia para modificarla sin afectar la original\n\n        // Si hay una nueva foto, subimos la foto a Firebase Storage y guardamos la URL de descarga en Firestore\n        if (profileData.fotoFile) {\n            const photoRef = ref(storage, `profilePhotos/${profileData.uid}`);\n            await uploadBytes(photoRef, profileData.fotoFile);\n            const photoURL = await getDownloadURL(photoRef);\n            filteredProfileData.foto = photoURL;\n            delete filteredProfileData.fotoFile; // Eliminamos el campo fotoFile para evitar problemas\n        }\n\n        for (const collectionName of collections) {\n            const currentCollection = collection(db, collectionName);\n            const q = query(currentCollection, where(\"email\", \"==\", profileData.email));\n            const querySnapshot = await getDocs(q);\n            \n            if (!querySnapshot.empty) {\n                const userDoc = querySnapshot.docs[0];\n                const userDocRef = userDoc.ref;\n                const userData = userDoc.data();\n                console.log(`Found user in collection ${collectionName}:`, userData);\n\n                await setDoc(userDocRef, filteredProfileData, { merge: true });\n\n                console.log(`User data updated successfully in collection: ${collectionName}`);\n                updated = true;\n                break;\n            }\n        }\n\n        if (!updated) {\n            console.log(\"No se encontró el documento del usuario en ninguna colección\");\n        }\n    } catch (error) {\n        console.error('Error updating user data:', error);\n    }\n};","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport NavBar from \"../../components/navBar/navBar\";\nimport { Form, InputGroup, FormControl, Button, FormLabel} from \"react-bootstrap\";\nimport \"./AgregarActividad.css\";\nimport Alerta  from \"../../components/Alerta\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { db, storage } from \"../../firebase/firebase\";\nimport { uploadBytes, ref, getDownloadURL} from \"firebase/storage\";\nimport { doc, setDoc } from \"firebase/firestore\";\n\n\n\n\nconst AgregarActividad = () => {\n    const navigate = useNavigate();\n    const [date, setDate] = useState('');\n    const [time, setTime] = useState('');\n    const [week, setWeek] = useState('');\n    const [activityType, setActivityType] = useState('');\n    const [activityName, setActivityName] = useState('');\n    const [responsibles, setResponsibles] = useState('');\n    const [daysBeforeAnnounce, setDaysBeforeAnnounce] = useState(0);\n    const [reminderDays, setReminderDays] = useState(0);\n    const [modality, setModality] = useState('');\n    const [link, setLink] = useState('');\n    const [poster, setPoster] = useState(null);\n    const [posterName, setPosterName] = useState('');\n    const [state, setState] = useState('');\n\n    const [alertState, setAlertState] = useState(false);\n    const [alertMessage, setAlertMessage] = useState({});\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            const uniqueFilename = `${uuidv4()}-${file.name}`; // Create a unique filename\n            setPoster(file);\n            setPosterName(uniqueFilename);\n        }\n    };\n\n    const backButton = () => {  \n        navigate(\"/planTrabajoGuia\");\n    };\n\n    const handleDateChange = (e) => {\n        const newDate = e.target.value;\n        setDate(newDate);\n    };\n\n    const handleModalityChange = (e) => {\n        setModality(e.target.value);\n        if (modality !== \"Remota\") {\n            setLink(\"No aplica\");\n        } else if (modality === \"Remota\") {\n            setLink(\"\");\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setAlertState(false);\n        setAlertMessage(\"\");\n\n        console.log(responsibles);\n\n        if (activityName === \"\" || activityType === \"\" || date === \"\" || time === \"\" || week === \"\" || responsibles === \"\" || daysBeforeAnnounce === \"\" || reminderDays === \"\" || modality === \"\" || poster === null) {\n            setAlertState(true);\n            setAlertMessage({tipo: \"error\", mensaje: \"Todos los campos son obligatorios\"});\n            return;\n        }\n\n        try {\n            const posterRef = ref(storage, `posters/${posterName}`);\n            await uploadBytes(posterRef, poster)\n            const posterURL = await getDownloadURL(posterRef);\n\n            // Combine the date and time into a firebase datetime object\n            const dateTime = new Date(`${date}T${time}:00`);\n            const isoDateTime = dateTime.toISOString();\n            // Separate the responsibles into an array, splitting by commas\n            const responsiblesArray = responsibles.split(\",\").map((responsible) => responsible.trim());\n\n\n            const docRef = doc(db, `activities/${activityName}`);\n            setDoc(docRef, {\n                activityName,\n                activityType,\n                dateTime: isoDateTime,\n                week,\n                responsibles: responsiblesArray,\n                daysBeforeAnnounce,\n                reminderDays,\n                modality,\n                link,\n                poster: posterURL,\n                state: \"PLANEADA\",\n                justification: \"\"\n            });\n\n            setAlertState(true);\n            setAlertMessage({tipo: \"exito\", mensaje: \"Actividad agregada correctamente\"});\n            navigate(\"/planTrabajoGuia\");\n        } catch (error) {\n            console.error(\"Error adding activity:\", error);\n            setAlertState(true);\n            setAlertMessage({tipo: \"error\", mensaje: \"Ocurrió un error al agregar la actividad\"});\n        }\n    };\n\n\n\n    return (\n        <>\n        <Helmet>\n            <title>Agregar Actividad - Tecnológico de Costa Rica</title>\n        </Helmet>\n        <div>\n            <NavBar titulo=\"Agregar Actividad\"/>\n            <div className=\"Container\">\n                <Form id=\"form\" onSubmit={handleSubmit}>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Nombre de la actividad</Form.Label>\n                        <InputGroup>\n                            <FormControl \n                            type=\"text\" \n                            placeholder=\"Nombre de la actividad\" \n                            value={activityName}\n                            onChange={(e) => setActivityName(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Tipo de actividad</Form.Label>\n                        <InputGroup>\n                            <Form.Select aria-label=\"Tipo de actividad\" value={activityType} onChange={(e) => setActivityType(e.target.value)}>\n                                <option value=\"\">Seleccione un tipo de actividad</option>\n                                <option value=\"Orientadora\">Orientadora</option>\n                                <option value=\"Motivacional\">Motivacional</option>\n                                <option value=\"Apoyo a la vida estudiantil\">Apoyo a la vida estudiantil</option>\n                                <option value=\"Orden tecnico\">Orden tecnico</option>\n                                <option value=\"Recreacion\">Recreacion</option>\n                            </Form.Select>\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Fecha programada</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                            type=\"date\"\n                            placeholder=\"Fecha programada\"\n                            value={date}\n                            onChange={handleDateChange}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Hora programada</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                            type=\"time\"\n                            placeholder=\"Hora programada\"\n                            value={time}\n                            onChange={(e) => setTime(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Semana</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                            type=\"number\"\n                            placeholder=\"Semana\"\n                            value={week}\n                            onChange={(e) => setWeek(e.target.value)}\n                            min=\"1\"\n                            max=\"16\"\n                            />\n                        </InputGroup>\n                        <Form.Text className=\"text-muted\">\n                            Semana del semestre en la que se realizará la actividad.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Responsables</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                            type=\"text\"\n                            placeholder=\"Responsables\"\n                            value={responsibles}\n                            onChange={(e) => setResponsibles(e.target.value)}\n                            />\n                        </InputGroup>\n                        <Form.Text className=\"text-muted\">\n                            Ingrese los nombres de los responsables separados por comas.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Días antes de anunciar</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                            type=\"number\"\n                            placeholder=\"Días antes de anunciar\"\n                            value={daysBeforeAnnounce}\n                            onChange={(e) => setDaysBeforeAnnounce(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Días de recordatorio</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                            type=\"number\"\n                            placeholder=\"Días de recordatorio\"\n                            value={reminderDays}\n                            onChange={(e) => setReminderDays(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Modalidad</Form.Label>\n                        <InputGroup>\n                            <Form.Select aria-label=\"Modalidad\" value={modality} onChange={handleModalityChange}>\n                                <option value=\"\">Seleccione una modalidad</option>\n                                <option value=\"Presencial\">Presencial</option>\n                                <option value=\"Remota\">Remota</option>\n                            </Form.Select>\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Link</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                            type=\"text\"\n                            placeholder=\"Link\"\n                            value={link}\n                            disabled={modality !== \"Remota\"}\n                            readOnly={modality !== \"Remota\"}\n                            onChange={(e) => setLink(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Cartel</Form.Label>\n                        <InputGroup>\n                            <Form.Control\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={handleFileChange}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Button className=\"Button\" variant=\"primary\" type=\"submit\">\n                        Agregar\n                    </Button>\n                    \n                    <Button className=\"Button\" variant=\"secondary\" type=\"button\" onClick={backButton}>\n                    Regresar\n                    </Button>\n                </Form>\n\n            </div>\n        </div>\n        \n        <Alerta\n            tipo={alertMessage.tipo}\n            mensaje={alertMessage.mensaje}\n            estadoAlerta={alertState}\n            setestadoAlerta={setAlertState}\n        />\n        </>\n    );\n}\n\nexport default AgregarActividad;","import React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport NavBar from \"../../components/navBar/navBar\";\nimport { Form, InputGroup, FormControl, Button, FormLabel } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addProfessorToFirestore } from \"../../contexts/profesor\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { storage } from \"../../firebase/firebase\";\nimport { useAuth } from \"../../contexts/auth\";\n\nconst AgregarProfesor = () => {\n    const { user } = useAuth();\n    const navigate = useNavigate();\n    const [nombre1, setNombre1] = useState(\"\");\n    const [nombre2, setNombre2] = useState(\"\");\n    const [apellido1, setApellido1] = useState(\"\");\n    const [apellido2, setApellido2] = useState(\"\");\n    const [sede, setSede] = useState(user.sede);\n    const [email, setEmail] = useState(\"\");\n    const [numOficina, setNumOficina] = useState(\"\");\n    const [celular, setCelular] = useState(\"\");\n    const [coordinador, setCoordinador] = useState(false);\n    const [file, setFile] = useState(null);\n    const [password, setPassword] = useState(\"\");\n\n    const admin = user.coordinador === undefined;\n    const cartago = user.sede === \"Cartago\";\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (nombre1 === \"\" || apellido1 === \"\" || sede === \"\" || email === \"\" || numOficina === \"\" || celular === \"\") {\n            alert(\"Por favor, llena todos los campos\");\n            return;\n        }\n        try {\n            const photoRef = ref(storage, `Profesores/${nombre1}-${file.name}`);\n            const uploadTask = uploadBytesResumable(photoRef, file);\n    \n            uploadTask.on('state_changed',\n                (snapshot) => {\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                    console.log('Upload is ' + progress + '% done');\n                },\n                (error) => {\n                    throw error;\n                },\n                async () => {\n                    const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);\n                    console.log('File available at', downloadURL);\n                    // Llamar a la función para agregar el profesor con todos los datos incluyendo la URL de la imagen\n                    await addProfessorToFirestore(nombre1, downloadURL, sede, email, numOficina, celular, nombre2, apellido1, apellido2, coordinador, true, password);\n                    navigate(\"/edicionGuia\");\n                }\n            );\n        } catch (error) {\n            console.error(\"Error during the image upload: \", error);\n            alert(\"Error al subir la imagen. Por favor, intenta de nuevo.\");\n        }\n        \n    }\n\n    const handleFileChange = (e) => {\n        setFile(e.target.files[0]); // Guarda el primer archivo seleccionado\n    };\n\n    return (\n        <>\n        <Helmet>\n            <title>Agregar Profesor - Tecnológico de Costa Rica</title>\n        </Helmet>\n        <div>\n            <NavBar titulo=\"Agregar Profesor\"/>\n            <div className=\"Container\">\n                <Form id=\"form\" onSubmit={handleSubmit}>\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Subir Imagen</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                                type=\"file\"\n                                onChange={handleFileChange}\n                                accept=\"image/*\" // Acepta solo imágenes\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Nombre</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                            type=\"text\"\n                            placeholder=\"Nombre\"\n                            value={nombre1}\n                            onChange={(e) => setNombre1(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Segundo Nombre</Form.Label>\n                        <InputGroup>\n                            <FormControl \n                            type=\"text\" \n                            placeholder=\"Segundo Nombre\" \n                            value={nombre2}\n                            onChange={(e) => setNombre2(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Apellido</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                            type=\"text\"\n                            placeholder=\"Apellido\"\n                            value={apellido1}\n                            onChange={(e) => setApellido1(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Segundo Apellido</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                            type=\"text\"\n                            placeholder=\"Segundo Apellido\"\n                            value={apellido2}\n                            onChange={(e) => setApellido2(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Email</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                            type=\"email\"\n                            placeholder=\"Email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group className=\"input-control\">\n                        <Form.Label htmlFor=\"password\">Password</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                                type=\"password\"\n                                value={password}\n                                placeholder=\"Password\"\n                                onChange={(e) => setPassword(e.target.value)}     \n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Número de oficina</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                            type=\"text\"\n                            placeholder=\"Número de oficina\"\n                            value={numOficina}\n                            onChange={(e) => setNumOficina(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group className=\"input-control\">\n                        <Form.Label>Celular</Form.Label>\n                        <InputGroup>\n                            <FormControl\n                            type=\"text\"\n                            placeholder=\"Celular\"\n                            value={celular}\n                            onChange={(e) => setCelular(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    {admin && cartago &&( \n                        <>\n                        <Form.Group className=\"input-control\">\n                            <Form.Label></Form.Label>\n                            <InputGroup>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label=\"Coordinador\"\n                                    value={coordinador}\n                                    onChange={(e) => setCoordinador(e.target.checked)}\n                                />\n                            </InputGroup>\n                        </Form.Group>\n                        </>\n                    )}\n                    <Button className=\"Button\" variant=\"primary\" type=\"submit\">\n                        Agregar\n                    </Button>\n                </Form>\n            </div>\n        </div>\n        </>\n    );\n}\n\nexport default AgregarProfesor;","import React, { useState, useEffect } from \"react\";\nimport { Helmet } from 'react-helmet';\nimport NavBar from \"../../components/navBar/navBar\";\nimport './ListaEstudiantesProfesores.css';\nimport { obtenerEstudiantes, obtenerEstudiantesPorSede } from \"../../contexts/excel\";\nimport { useAuth } from \"../../contexts/auth\";\nimport * as XLSX from 'xlsx';\n\nconst ListaDeEstudiantesProfesores = () => {\n    const { user } = useAuth();\n    const [activeTab, setActiveTab] = useState('estudiantes');\n    const [excelData, setExcelData] = useState([[]]);\n    const [workbook, setWorkbook] = useState(null);\n    const [opcionesMenu, setOpcionesMenu] = useState([]);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [estadoAlerta, setEstadoAlerta] = useState(false);\n    const [mensaje, setMensaje] = useState({});\n    const [estudiantes, setEstudiantes] = useState([]);\n    const [archivosExcel, setArchivosExcel] = useState([]);\n\n    useEffect(() => {\n        if (activeTab === 'estudiantes') {\n            sedeUser();\n        }\n    }, [user.sede]);\n\n    const todos = () => {\n        obtenerEstudiantes()\n            .then(estudiantes => {\n                setEstudiantes(estudiantes);\n                const sedes = estudiantes.map(estudiante => estudiante.sede);\n                const nombresSedesUnicas = [...new Set(sedes)];\n                setOpcionesMenu(nombresSedesUnicas);\n                setSelectedOption(nombresSedesUnicas[0]);\n                setArchivosExcel(estudiantes);\n                const estudiantesFiltrados = estudiantes.filter(estudiante => estudiante.sede === nombresSedesUnicas[0]);\n                cargarArchivoPredeterminado(estudiantesFiltrados);\n            })\n            .catch(error => {\n                console.error(\"Error al cargar los archivos:\", error);\n                setEstadoAlerta(true);\n                setMensaje({ tipo: 'error', mensaje: 'No se pudo cargar los archivos' });\n            });\n    };\n\n    const sedeUser = () => {\n        obtenerEstudiantesPorSede(user.sede)\n            .then(estudiantes => {\n                cargarArchivoPredeterminado(estudiantes);\n            })\n            .catch(error => {\n                console.error(\"Error al cargar los archivos:\", error);\n                setEstadoAlerta(true);\n                setMensaje({ tipo: 'error', mensaje: 'No se pudo cargar los archivos' });\n            });\n    }\n\n    const cargarArchivoPredeterminado = (estudiantes) => {\n        const worksheet = XLSX.utils.json_to_sheet(estudiantes);\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n        setExcelData(jsonData);\n        const newWorkbook = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(newWorkbook, worksheet, 'Estudiantes');\n        setWorkbook(newWorkbook);\n\n\n        \n    }\n\n    const handleOptionClick = (opcion) => {\n        setSelectedOption(opcion);\n        const estudiantesFiltrados = estudiantes.filter(estudiante => estudiante.sede === opcion);\n        cargarArchivoPredeterminado(estudiantesFiltrados);\n    };\n\n    const renderizarBotones = () => {\n        return opcionesMenu.map((opcion, index) => (\n            <button\n                key={index}\n                className={`menuButton ${opcion === selectedOption ? 'active' : ''}`}\n                onClick={() => handleOptionClick(opcion)}\n            >\n                {opcion}\n            </button>\n        ));\n    };\n\n    const switchTab = (tab) => {\n        setActiveTab(tab);\n    };\n\n    const downloadAll = () => {\n        let combinedWorkbook = XLSX.utils.book_new();\n        let estudiantesPorSede = {};\n    \n        archivosExcel.forEach((estudiante) => {\n            const { sede } = estudiante; // Obtener la sede del estudiante\n            if (!estudiantesPorSede[sede]) {\n                estudiantesPorSede[sede] = [];\n            }\n            estudiantesPorSede[sede].push(estudiante);\n        });\n    \n        Object.keys(estudiantesPorSede).forEach((sede) => {\n            const estudiantes = estudiantesPorSede[sede];\n            const worksheet = XLSX.utils.json_to_sheet(estudiantes);\n            XLSX.utils.book_append_sheet(combinedWorkbook, worksheet, sede);\n        });\n    \n        XLSX.writeFile(combinedWorkbook, 'estudiantes_por_sede.xlsx');\n    };\n\n    const download = () => {\n        if (workbook) {\n            XLSX.writeFile(workbook, 'EstudiantesSede.xlsx');\n        }\n    };\n\n    const generateAlphabet = () => {\n        const alphabet = [];\n        for (let i = 65; i <= 90; i++) {\n            alphabet.push(String.fromCharCode(i));\n        }\n        return alphabet;\n    }\n\n    return (\n        <>\n            <NavBar titulo=\"Lista De Estudiantes\" />\n            <Helmet>\n                <title>Lista De Estudiantes - Tecnológico de Costa Rica</title>\n            </Helmet>\n            <div className=\"tabs\">\n                <button className={activeTab === 'estudiantes' ? 'active' : ''} onClick={() => { switchTab('estudiantes'); sedeUser() }}>Mi Sede</button>\n                <button className={activeTab === 'profesores' ? 'active' : ''} onClick={() => { switchTab('profesores'); todos() }}>Todas las Sedes</button>\n            </div>\n            <div className=\"subtituloH\">\n                <h1>Lista de Estudiantes de la sede del TEC</h1>\n            </div>\n            <div className=\"excelDataContainer\">\n                <div className=\"tableWrapper\">\n                    <table className=\"excelTable\">\n                        <tbody>\n                            <tr>\n                                <td className=\"indexCell\"></td>\n                                {excelData.length > 0 && excelData[0].map((_, index) => (\n                                    <td key={index} className=\"indexCell\">{generateAlphabet()[index]}</td>\n                                ))}\n                            </tr>\n                            {excelData.map((row, rowIndex) => (\n                                <tr key={rowIndex}>\n                                    <td className=\"indexCell\">{rowIndex + 1}</td>\n                                    {row.map((cell, cellIndex) => (\n                                        <td key={cellIndex}>{cell}</td>\n                                    ))}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            {activeTab === 'estudiantes' && (\n                <div className=\"excelDataContainer\">\n                    <div className=\"tableWrapper\">\n                    </div>\n                </div>\n            )}\n            {activeTab === 'profesores' && (\n                <div className=\"excelDataContainer\">\n                    <div className=\"menuContainer\">\n                        <div className=\"menu\">\n                            {renderizarBotones()}\n                        </div>\n                    </div>\n                    <div className=\"tableWrapper\">\n                    </div>\n                    <button className=\"excel-button2\" onClick={downloadAll}>Descargar Todo</button>\n                </div>\n            )}\n            <button className=\"excel-button\" onClick={download}>Descargar Sede</button>\n        </>\n    );\n};\n\nexport default ListaDeEstudiantesProfesores;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { db } from \"../../firebase/firebase\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport \"./VerEvidencia.css\";\n\nconst VerEvidencia = () => {\n    const { activityId } = useParams();\n    const [activity, setActivity] = React.useState(null);\n\n    React.useEffect(() => {\n        const fetchActivity = async () => {\n            const docRef = doc(db, \"activities\", activityId);\n            const docSnap = await getDoc(docRef);\n\n            if (docSnap.exists()) {\n                setActivity(docSnap.data());\n            } else {\n                console.log(\"No such document!\");\n            }\n        };\n\n        fetchActivity();\n    }, [activityId]);\n\n    if (!activity) return <div>Loading...</div>;\n\n    return (\n        <div>\n            <h1>Evidencias de la Actividad</h1>\n            <div className=\"container-evidencias\">\n                {activity.imageUrls && activity.imageUrls.length > 0 ? (\n                    activity.imageUrls.map((url, index) => (\n                        <div key={index} className=\"evidencia\">\n                            <img src={url} alt={`Evidencia ${index + 1}`} />\n                        </div>\n                    ))\n                ) : (\n                    <p>Actividad no finalizada</p> // Mensaje alternativo si no hay imágenes\n                )}\n            </div>\n                <div className=\"container-link\">\n                {activity.link ? (\n                    <h1>\n                        <a href={activity.link} target=\"_blank\" rel=\"noreferrer\">\n                            Grabación\n                        </a>\n                    </h1>\n                ) : (\n                    <h1>No hay link</h1>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default VerEvidencia;","// components/Message.js\nimport React, { useState } from 'react';\nimport './Message.css'; // Make sure to create appropriate CSS for styling\nimport { updateMessageInFirestore } from \"../../contexts/buzon\";\n\nconst Message = ({ message }) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleToggle = async () => {\n        if (message.state != 'visto') {\n            try {\n                // Actualizar el estado del mensaje a 'visto' en Firestore\n                //console.log(message.id);\n                await updateMessageInFirestore(message.email,message.id);\n                message.state = 'visto';\n            } catch (error) {\n                console.error('Error updating document:', error);\n            }\n        }\n        setIsOpen(!isOpen);\n    };\n\n    return (\n        <div className={`message ${isOpen ? 'open' : 'closed'}`} onClick={handleToggle}>\n            <div className=\"message-header\">\n                <span>{message.sender}</span>\n                <span className=\"toggle-icon\">{message.state === 'visto' ? '👁️‍🗨️' : '👁'}</span>\n            </div>\n            {isOpen && (\n                <div className=\"message-body\">\n                    <p>{message.text}</p>\n                    <p>{message.date}</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\n// export default Message;\n// const Message = ({ message }) => {\n//     const [isOpen, setIsOpen] = useState(false);\n\n//     const handleToggle = () => {\n//         if (!message.isRead) {\n//             message.isRead = true;\n//         }\n//         setIsOpen(!isOpen);\n//     };\n\n//     return (\n//         <div className={`message ${isOpen ? 'open' : 'closed'}`} onClick={handleToggle}>\n//             <div className=\"message-header\">\n//                 <span>{message.sender}</span>\n//                 <span className=\"toggle-icon\">{message.isRead ? '👁️‍🗨️' : '👁'}</span>\n//             </div>\n//             {isOpen && (\n//                 <div className=\"message-body\">\n//                     <p>{message.text}</p>\n//                     <p>{message.date}</p>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\nexport default Message;\n","import React, { useState, useEffect } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport NavBar from \"../../components/navBar/navBar\";\nimport Message from './Message';\nimport { getMessagesByEmail, deleteReadMessages } from \"../../contexts/buzon\";\nimport { useAuth } from \"../../contexts/auth\";\nimport './BuzonEntrada.css';\n\nconst BuzonEntrada = () => {\n    const { user } = useAuth();\n    const [messages, setMessages] = useState([]);\n    const [filter, setFilter] = useState('todo');\n\n    useEffect(() => {\n        const fetchMessages = async () => {\n            try {\n                const messages = await getMessagesByEmail(user.email);\n                setMessages(messages);\n            } catch (error) {\n                console.error('Error getting messages:', error);\n            }\n        };\n        fetchMessages();\n\n    }, [filter, user.email]);\n\n    const handleFilterChange = (e) => {\n        setFilter(e.target.value);\n    };\n\n    const handleDeleteReadMessages = async () => {\n        try {\n            await deleteReadMessages(user.email);\n            const messages = await getMessagesByEmail(user.email);\n            setMessages(messages);\n        } catch (error) {\n            console.error('Error deleting read messages:', error);\n        }\n    };\n\n    const filteredMessages = messages.filter((message) => {\n        if (filter === 'todo') return true;\n        if (filter === 'leido') return message.estado === 'visto';\n        if (filter === 'noLeido') return message.estado === 'sent';\n        return true;\n    });\n\n    const sortedMessages = filteredMessages.sort((a, b) => {\n        const dateA = new Date(`${a.fecha} ${a.hora}`);\n        const dateB = new Date(`${b.fecha} ${b.hora}`);\n        return dateB - dateA;\n    });\n\n    return (\n        <>\n            <Helmet>\n                <title>BuzonEntrada</title>\n            </Helmet>\n            <div>\n                <NavBar titulo=\"BuzonEntrada\" />\n                <div className=\"filter-container\">\n                    <label htmlFor=\"filter\">Filtrar por estado: </label>\n                    <select id=\"filter\" value={filter} onChange={handleFilterChange}>\n                        <option value=\"todo\">Todo</option>\n                        <option value=\"leido\">Leído</option>\n                        <option value=\"noLeido\">No leído</option>\n                    </select>\n                </div>\n                <button onClick={handleDeleteReadMessages}>Eliminar todos los mensajes vistos</button>\n                <div className=\"buzon-container\">\n                    {sortedMessages.map((message) => (\n                        <Message\n                            key={message.id}\n                            message={{\n                                email: user.email,\n                                id: message.id,\n                                state: message.estado,\n                                sender: message.emisor,\n                                text: message.contenido,\n                                date: `${message.fecha} - ${message.hora}`\n                            }}\n                        />\n                    ))}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default BuzonEntrada;","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport NavBar from \"../../components/navBar/navBar\";\nimport ActivityCard from \"../../components/ActivityCard/ActivityCard\";\nimport \"./PlanTrabajoCentroAcademico.css\";\nimport \"../../components/ActivityCard/ActivityCard\";\n//import { Modal } from \"react-bootstrap\";\nimport { db } from \"../../firebase/firebase\";\nimport { collection, getDocs } from \"firebase/firestore\";\n\n\nconst PlanTrabajoCentroAcademico = () => {\n    const [activities, setActivities] = useState([]);\n    const [displayedActivity, setDisplayedActivity] = useState([]);\n    const [showClosest, setShowClosest] = useState(false);  // Estado para controlar qué botón se muestra\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        fetchActivities();\n    }, []);\n\n    const fetchActivities = async () => {\n        try {\n            const snapshot = await getDocs(collection(db, \"activities\"));\n            const activitiesData = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data()}));\n            setActivities(activitiesData);\n            setDisplayedActivity(activitiesData);  // Inicialmente mostrar todas las actividades\n        } catch (error) {\n            console.error(\"Error fetching activities:\", error);\n        }\n    };\n\n    const handleFindClosestActivity = () => {\n        const now = new Date();\n        const futureActivities = activities.filter(activity => {\n            const activityDate = new Date(activity.dateTime);\n            return activityDate > now && (activity.state === \"PLANEADA\" || activity.state === \"NOTIFICADA\");\n        });\n\n        if (futureActivities.length > 0) {\n            const closest = futureActivities.reduce((closest, current) => {\n                const closestDate = new Date(closest.dateTime);\n                const currentDate = new Date(current.dateTime);\n                return (closestDate - now < currentDate - now) ? closest : current;\n            });\n\n            setDisplayedActivity([closest]);\n        } else {\n            setDisplayedActivity([]);\n        }\n        setShowClosest(true);  // Cambiar a mostrar el botón de devolverse\n    };\n\n    const handleReturn = () => {\n        setDisplayedActivity(activities);  // Mostrar todas las actividades de nuevo\n        setShowClosest(false);  // Cambiar a mostrar el botón de consultar último proyecto\n    };\n\n    return (\n        <>\n            <NavBar titulo=\"Plan de Trabajo\" id=\"navBar\" />\n            <Helmet>\n                <title>Plan de Trabajo - Tecnológico de Costa Rica</title>\n            </Helmet>\n            <div className=\"subtituloH\">\n                <h1>Lista de trabajos existentes</h1>\n            </div>\n\n            <div className=\"PlanTrabajoGuia\">\n                {displayedActivity && displayedActivity.length > 0 ? (\n                    displayedActivity.map((activity, index) => (\n                        <div key={index} className=\"activity-full-container\">\n                            <ActivityCard activity={activity} />\n                        </div>\n                    ))\n                ) : (\n                    <p>No hay actividades próximas.</p>\n                )}\n            </div>\n\n            <div className=\"page-buttons\">\n                {showClosest ? (\n                    <button type=\"button\" onClick={handleReturn}>Devolverse</button>\n                ) : (\n                    <button type=\"button\" onClick={handleFindClosestActivity}>Consultar Último Proyecto</button>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default PlanTrabajoCentroAcademico;","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport NavBar from \"../../components/navBar/navBar\";\nimport { useAuth } from \"../../contexts/auth\";\nimport './perfil.css';\nimport { updateUserData } from \"../../contexts/excel\";\nimport { db, storage } from \"../../firebase/firebase\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\n\nconst Perfil = () => {\n  const { user, actualizarUser } = useAuth();\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [profileData, setProfileData] = useState({\n    nombre: \"\",\n    apellido1: \"\",\n    apellido2: \"\",\n    celular: \"\",\n    email: \"\",\n    nombre2: \"\",\n    sede: \"\",\n    foto: \"\",\n    fotoFile: null,\n    uid: \"\"\n  });\n\n  useEffect(() => {\n    if (user) {\n      setProfileData({\n        nombre: user.nombre || \"\",\n        apellido1: user.apellido1 || \"\",\n        apellido2: user.apellido2 || \"\",\n        celular: user.celular || \"\",\n        email: user.email || \"\",\n        nombre2: user.nombre2 || \"\",\n        sede: user.sede || \"\",\n        foto: user.foto || \"\",\n        uid: user.uid || \"\",\n        estudiante: user.estudiante\n      });\n    }\n  }, [user]);\n\n  const handleSave = async () => {\n    try {\n      let updatedProfileData = { ...profileData };\n\n      if (profileData.fotoFile) {\n        const photoRef = ref(storage, `profilePhotos/${user.uid}`);\n        await uploadBytes(photoRef, profileData.fotoFile);\n        const photoURL = await getDownloadURL(photoRef);\n        updatedProfileData.foto = photoURL;\n      }\n\n      await updateUserData(updatedProfileData);\n      console.log(\"Datos del usuario actualizados:\", updatedProfileData);\n      actualizarUser(updatedProfileData.email);\n      setShowSuccessModal(true);\n    } catch (error) {\n      console.error(\"Error al actualizar los datos del usuario:\", error);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setProfileData((prevState) => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setProfileData((prevState) => ({\n          ...prevState,\n          foto: reader.result,\n          fotoFile: file\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <>\n      <NavBar titulo=\"Inicio\" id=\"navBar\" />\n      <Helmet>\n        <title>Plan de Trabajo - Tecnológico de Costa Rica</title>\n      </Helmet>\n      <div className=\"user-profile\">\n        <h1 style={{ color: 'black' }}>Perfil del Usuario</h1>\n        <div className=\"profile-photo-container\">\n          {profileData.foto && <img src={profileData.foto} alt=\"Foto de perfil\" className=\"profile-photo\" />}\n        </div>\n        <div className=\"profile-info\">\n          <label>Foto:</label>\n          <input type=\"file\" name=\"foto\" onChange={handleFileChange} />\n          <label>Nombre:</label>\n          <span>{profileData.nombre}</span>\n          <label>Primer Apellido:</label>\n          <span>{profileData.apellido1}</span>\n          <label>Segundo Apellido:</label>\n          <span>{profileData.apellido2}</span>\n          <label>Número de teléfono:</label>\n          <input type=\"text\" name=\"celular\" value={profileData.celular} onChange={handleChange} />\n          <label>Email:</label>\n          <span>{profileData.email}</span>\n          <label>Sede:</label>\n          <span>{profileData.sede}</span>\n        </div>\n        <div className=\"profile-actions\">\n          <button onClick={handleSave}>Guardar Cambios</button>\n        </div>\n      </div>\n      {showSuccessModal && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <span className=\"close\" onClick={() => setShowSuccessModal(false)}>&times;</span>\n            <div className=\"alert alert-success\" role=\"alert\">\n              Se guardaron los cambios. La página se actualizará en breve.\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Perfil;\n","import React from \"react\";\nimport \"./modelActivity.css\"; // Asegúrate de crear este archivo CSS\n\nconst ModalActivity = ({ children, onClose }) => {\n    return (\n        <div className=\"modal-backdrop\">\n            <div className=\"modal-content\">\n                <button className=\"modal-close\" onClick={onClose}>×</button>\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default ModalActivity;","import React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./calendarioEstudiantes.css\";\nimport { db } from \"../../firebase/firebase\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport NavBar from \"../../components/navBar/navBar\";\nimport { Helmet } from \"react-helmet\";\nimport ModalActivity from \"../../components/ModelActivity/modelActivity\";\n\nconst localizer = momentLocalizer(moment);\n\nconst CalendarioEstudiantes = () => {\n    const [activities, setActivities] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [selectedActivity, setSelectedActivity] = useState(null);\n\n    useEffect(() => {\n        fetchActivities();\n    }, []);\n\n    const handleSelectEvent = (event) => {\n        setSelectedActivity(event);\n        setShowModal(true);\n    };\n\n    const handleFindClosestActivity = () => {\n        const now = new Date();\n        const futureActivities = activities.filter(activity => {\n            const activityDate = new Date(activity.dateTime);\n            return activityDate > now && (activity.state === \"PLANEADA\" || activity.state === \"NOTIFICADA\");\n        });\n\n        if (futureActivities.length > 0) {\n            const closest = futureActivities.reduce((closest, current) => {\n                const closestDate = new Date(closest.dateTime);\n                const currentDate = new Date(current.dateTime);\n                return (closestDate - now < currentDate - now) ? closest : current;\n            });\n            setSelectedActivity(closest);\n            setShowModal(true);\n        } else {\n            console.log(\"No hay actividades futuras\");\n            setSelectedActivity(null);\n            setShowModal(false);\n        }\n    };\n\n    const fetchActivities = async () => {\n        const snapshot = await getDocs(collection(db, \"activities\"));\n        const activitiesData = snapshot.docs.map((doc) => ({\n            id: doc.id, \n            ...doc.data(),\n            dateTime: new Date(doc.data().dateTime).toISOString()\n        }));\n        setActivities(activitiesData);\n    };\n\n    return (\n        <>\n            <NavBar titulo=\"Calendario\" id=\"navBar\" />\n            <Helmet>\n                <title>Calendario - Tecnológico de Costa Rica</title>\n            </Helmet>\n            <div className=\"calendar-container\">\n                <Calendar\n                    localizer={localizer}\n                    events={activities}\n                    titleAccessor=\"activityName\"\n                    startAccessor=\"dateTime\"\n                    endAccessor=\"dateTime\"\n                    className=\"calendar\"\n                    onSelectEvent={handleSelectEvent}\n                />\n                <div className=\"button-container1\">\n                    <button className=\"button1\" onClick={handleFindClosestActivity}>\n                        Consultar Último Proyecto\n                    </button>\n                </div>\n            </div>\n            \n            {showModal && selectedActivity && (\n                <ModalActivity onClose={() => setShowModal(false)}>\n                    \n                    <h3>{selectedActivity.activityName}</h3>\n                    <img src={selectedActivity.poster}></img>\n                    <p><strong>Fecha:</strong> {new Date(selectedActivity.dateTime).toLocaleDateString()}</p>\n                    <p><strong>Hora:</strong> {new Date(selectedActivity.dateTime).toLocaleTimeString()}</p>\n                    <p><strong>Modalidad:</strong> {selectedActivity.modality}</p>\n                    <p><strong>Estado:</strong> {(selectedActivity.state).charAt(0).toUpperCase() + (selectedActivity.state).slice(1).toLowerCase() }</p>\n                </ModalActivity>\n            )}\n        </>\n    );\n};\n\nexport default CalendarioEstudiantes;\n","import React, { useState } from \"react\";\nimport './forgotpassword.css';\nimport { sendPasswordResetEmail } from \"firebase/auth\";\nimport { auth } from \"../../firebase/firebase\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ForgotPassword = () => {\n    const [email, setEmail] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleChange = (e) => {\n        setEmail(e.target.value);\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            await sendPasswordResetEmail(auth, email);\n            alert(\"Se ha enviado un correo para restablecer la contraseña\");\n            navigate('/iniciarSesion');\n        } catch (error) {\n            alert(\"No se pudo enviar el correo de restablecimiento\");\n            console.error(\"Error en resetPassword:\", error);\n        }\n    }\n\n    return (\n        <div className=\"forgot-password-container\">\n            <div className=\"forgot-password-form\">\n                <h1>Recuperar contraseña</h1>\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"email\">Correo electrónico</label>\n                    <input \n                        type=\"email\" \n                        id=\"email\" \n                        name=\"email\" \n                        required \n                        value={email} \n                        onChange={handleChange} \n                    />\n                    <button type=\"submit\">Enviar</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default ForgotPassword;\n","import React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport IniciarSesion from './pages/IniciarSesion/IniciarSesion';\nimport { Helmet } from 'react-helmet';\nimport favicon from './images/faviconTD.ico';\nimport Fondo from './components/Fondo';\nimport { AuthProvider } from './contexts/auth';\nimport Inicio from './pages/inicio/inicio';\nimport Historial from './pages/historial/Historial';\nimport { ProtectedRoute } from './ProtectedRoute';\nimport EquipoGuia from './pages/equipoGuia/equipoGuia';\nimport EdicionGuia from './pages/EdicionGuia/EdicionGuia';\nimport PlanTrabajoGuia from './pages/PlanTrabajoGuia/PlanTrabajoGuia';\nimport ListaDeEstudiantes from './pages/ListaDeEstudiantes/ListaDeEstudiantes';\nimport AgregarActividad from './pages/AgregarActividad/AgregarActividad';\nimport AgregarProfesor from './pages/AgregarProfesor/AgregarProfesor';\nimport ListaDeEstudiantesProfesores from './pages/ListaEstudiantesProfesores/ListaEstudiantesProfesores';\nimport VerEvidencia from './pages/VerEvidencia/VerEvidencia';\nimport BuzonEntrada from './pages/BuzonEntrada/BuzonEntrada';\nimport PlanTrabajoCentroAcademico from './pages/PlanTrabajoCentroAcademico/PlanTrabajoCentroAcademico';\nimport Perfil from './pages/Perfil/perfil';\nimport Calendario from './pages/CalendarioEstudiantes/calendarioEstudiantes';\nimport ForgotPassword from './pages/ForgotPassword/forgotpassword';\n\nfunction App() {\n  return (\n    <>\n      <Helmet>\n        <link rel=\"shortcut icon\" href={favicon} type=\"image/x-ico\" />\n      </Helmet>\n      <AuthProvider>\n        <BrowserRouter>\n          <Routes>\n            <Route path=\"/iniciarsesion\" element={<IniciarSesion />} />\n            <Route path=\"/historial\" element={<Historial />} />\n            <Route path=\"/inicio\" element={<Inicio />} />\n            <Route path=\"/equipoGuia\" element={<EquipoGuia />} />\n            <Route path=\"/edicionGuia\" element={<EdicionGuia />} />\n            <Route path=\"/planTrabajoGuia\" element={<PlanTrabajoGuia />} />\n            <Route path=\"/agregarActividad\" element={<AgregarActividad />} />\n            <Route path=\"/ListaDeEstudiantes\" element={<ListaDeEstudiantes />} />\n            <Route path=\"/ListaDeEstudiantesProfesores\" element={<ListaDeEstudiantesProfesores />} />\n            <Route path=\"/agregarProfesor\" element={<AgregarProfesor />} />\n            <Route path=\"/planTrabajoCentroAcademico\" element={<PlanTrabajoCentroAcademico />} />\n            <Route path=\"/buzonEntrada\" element={<BuzonEntrada />} />\n            <Route path=\"/verEvidencia/:activityId\" element={<VerEvidencia />} />\n            <Route path=\"/perfil\" element={<Perfil />} />\n            <Route path=\"/calendarioEstudiantes\" element={< Calendario/>} />\n            <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n            <Route element={<ProtectedRoute />}>\n              <Route path=\"/\" element={<Inicio />} />\n            </Route>\n          </Routes>\n        </BrowserRouter>\n        <Fondo />\n      </AuthProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/userPhoto.453b4547.jpg\";"],"sourceRoot":""}